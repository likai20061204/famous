{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","node_modules/famous/components/Camera.js","index.js","node_modules/famous/core/Chan.js","node_modules/famous/core/Commands.js","node_modules/famous/core/CrossCall.js","node_modules/famous/core/Path.js","node_modules/famous/dom-renderers/DOMRenderer.js","node_modules/famous/dom-renderers/ElementCache.js","node_modules/famous/dom-renderers/Math.js","node_modules/famous/dom-renderers/VoidElements.js","node_modules/famous/dom-renderers/events/CompositionEvent.js","node_modules/famous/dom-renderers/events/Event.js","node_modules/famous/dom-renderers/events/EventMap.js","node_modules/famous/dom-renderers/events/FocusEvent.js","node_modules/famous/dom-renderers/events/InputEvent.js","node_modules/famous/dom-renderers/events/KeyboardEvent.js","node_modules/famous/dom-renderers/events/MouseEvent.js","node_modules/famous/dom-renderers/events/ScrollEvent.js","node_modules/famous/dom-renderers/events/TouchEvent.js","node_modules/famous/dom-renderers/events/UIEvent.js","node_modules/famous/dom-renderers/events/WheelEvent.js","node_modules/famous/polyfills/animationFrame.js","node_modules/famous/polyfills/index.js","node_modules/famous/render-loops/RequestAnimationFrameLoop.js","node_modules/famous/renderers/Compositor.js","node_modules/famous/renderers/Context.js","node_modules/famous/renderers/UIManager.js","node_modules/famous/renderers/inject-css.js","node_modules/famous/utilities/CallbackStore.js","node_modules/famous/utilities/Registry.js","node_modules/famous/utilities/clone.js","node_modules/famous/utilities/keyValueToArrays.js","node_modules/famous/utilities/vendorPrefix.js","node_modules/famous/webgl-renderers/Buffer.js","node_modules/famous/webgl-renderers/BufferRegistry.js","node_modules/famous/webgl-renderers/Debug.js","node_modules/famous/webgl-renderers/Program.js","node_modules/famous/webgl-renderers/Texture.js","node_modules/famous/webgl-renderers/TextureManager.js","node_modules/famous/webgl-renderers/WebGLRenderer.js","node_modules/famous/webgl-renderers/compileMaterial.js","node_modules/famous/webgl-renderers/createCheckerboard.js","node_modules/famous/webgl-renderers/radixSort.js","node_modules/famous/webgl-shaders/index.js","source/index.js","source/node_modules/Ajax.js","source/node_modules/FastClick.js","source/node_modules/StorageModel.js","source/node_modules/config.json","source/node_modules/model/VersionModel.js"],"names":[],"mappings":"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A,GAAA,IAAA,GAAA,CAAA,IAAA,GAAA,CAAA,IAAA,GAAA,CAAA,IAAA,GAAA,CAAA,IAAA,GAAA,CAAA,IAAA,GAAA,CAlBA,CAoBA,KAAA,cAAA,CAAA,CAAA,EAAA,CAAA,IAAA,GAAA,CAAA,IAAA,GAAA,CAAA,IAAA,GAAA,EAAA,GAAA,CACA,KAAA,cAAA,CAAA,CAAA,EAAA,CAAA,IAAA,GAAA,CAAA,IAAA,GAAA,CAAA,IAAA,GAAA,EAAA,GAAA,CACA,KAAA,cAAA,CAAA,CAAA,EAAA,CAAA,IAAA,GAAA,CAAA,IAAA,GAAA,CAAA,IAAA,GAAA,EAAA,GAAA,CACA,KAAA,cAAA,CAAA,CAAA,EAAA,CAAA,IAAA,GAAA,CAAA,IAAA,GAAA,CAAA,IAAA,GAAA,EAAA,GAAA,CACA,KAAA,cAAA,CAAA,CAAA,EAAA,CAAA,IAAA,GAAA,CAAA,IAAA,GAAA,CAAA,IAAA,GAAA,EAAA,GAAA,CACA,KAAA,cAAA,CAAA,CAAA,EAAA,CAAA,IAAA,GAAA,CAAA,IAAA,GAAA,CAAA,IAAA,GAAA,EAAA,GAAA,CACA,KAAA,cAAA,CAAA,CAAA,EAAA,CAAA,IAAA,GAAA,CAAA,IAAA,GAAA,CAAA,IAAA,GAAA,EAAA,GAAA,CACA,KAAA,cAAA,CAAA,CAAA,EAAA,CAAA,IAAA,GAAA,CAAA,IAAA,GAAA,CAAA,IAAA,GAAA,EAAA,GAAA,CACA,KAAA,cAAA,CAAA,CAAA,EAAA,CAAA,IAAA,GAAA,CAAA,IAAA,GAAA,CAAA,IAAA,GAAA,EAAA,GAAA,CACA,KAAA,cAAA,CAAA,CAAA,EAAA,CAAA,IAAA,GAAA,CAAA,IAAA,GAAA,CAAA,IAAA,GAAA,EAAA,GAAA,CACA,KAAA,cAAA,CAAA,EAAA,EAAA,CAAA,IAAA,GAAA,CAAA,IAAA,GAAA,CAAA,IAAA,GAAA,EAAA,GAAA,CACA,KAAA,cAAA,CAAA,EAAA,EAAA,CAAA,IAAA,GAAA,CAAA,IAAA,GAAA,CAAA,IAAA,GAAA,EAAA,GAAA,CACA,KAAA,cAAA,CAAA,EAAA,EAAA,CAAA,IAAA,GAAA,CAAA,IAAA,GAAA,CAAA,IAAA,GAAA,EAAA,G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","file":"index.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/**\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2015 Famous Industries Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n\r\n'use strict';\r\n\r\nvar Commands = require('../core/Commands');\r\n\r\n/**\r\n * Camera is a component that is responsible for sending information to the renderer about where\r\n * the camera is in the scene.  This allows the user to set the type of projection, the focal depth,\r\n * and other properties to adjust the way the scenes are rendered.\r\n *\r\n * @class Camera\r\n *\r\n * @param {Node} node to which the instance of Camera will be a component of\r\n */\r\nfunction Camera(node) {\r\n    this._node = node;\r\n    this._projectionType = Camera.ORTHOGRAPHIC_PROJECTION;\r\n    this._focalDepth = 0;\r\n    this._near = 0;\r\n    this._far = 0;\r\n    this._requestingUpdate = false;\r\n    this._id = node.addComponent(this);\r\n    this._viewTransform = new Float32Array([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);\r\n    this._viewDirty = false;\r\n    this._perspectiveDirty = false;\r\n    this.setFlat();\r\n}\r\n\r\nCamera.FRUSTUM_PROJECTION = 0;\r\nCamera.PINHOLE_PROJECTION = 1;\r\nCamera.ORTHOGRAPHIC_PROJECTION = 2;\r\n\r\n/**\r\n * @method\r\n *\r\n * @return {String} Name of the component\r\n */\r\nCamera.prototype.toString = function toString() {\r\n    return 'Camera';\r\n};\r\n\r\n/**\r\n * Gets object containing serialized data for the component\r\n *\r\n * @method\r\n *\r\n * @return {Object} the state of the component\r\n */\r\nCamera.prototype.getValue = function getValue() {\r\n    return {\r\n        component: this.toString(),\r\n        projectionType: this._projectionType,\r\n        focalDepth: this._focalDepth,\r\n        near: this._near,\r\n        far: this._far\r\n    };\r\n};\r\n\r\n/**\r\n * Set the components state based on some serialized data\r\n *\r\n * @method\r\n *\r\n * @param {Object} state an object defining what the state of the component should be\r\n *\r\n * @return {Boolean} status of the set\r\n */\r\nCamera.prototype.setValue = function setValue(state) {\r\n    if (this.toString() === state.component) {\r\n        this.set(state.projectionType, state.focalDepth, state.near, state.far);\r\n        return true;\r\n    }\r\n    return false;\r\n};\r\n\r\n/**\r\n * Set the internals of the component\r\n *\r\n * @method\r\n *\r\n * @param {Number} type an id corresponding to the type of projection to use\r\n * @param {Number} depth the depth for the pinhole projection model\r\n * @param {Number} near the distance of the near clipping plane for a frustum projection\r\n * @param {Number} far the distance of the far clipping plane for a frustum projection\r\n *\r\n * @return {Boolean} status of the set\r\n */\r\nCamera.prototype.set = function set(type, depth, near, far) {\r\n    if (!this._requestingUpdate) {\r\n        this._node.requestUpdate(this._id);\r\n        this._requestingUpdate = true;\r\n    }\r\n    this._projectionType = type;\r\n    this._focalDepth = depth;\r\n    this._near = near;\r\n    this._far = far;\r\n};\r\n\r\n/**\r\n * Set the camera depth for a pinhole projection model\r\n *\r\n * @method\r\n *\r\n * @param {Number} depth the distance between the Camera and the origin\r\n *\r\n * @return {Camera} this\r\n */\r\nCamera.prototype.setDepth = function setDepth(depth) {\r\n    if (!this._requestingUpdate) {\r\n        this._node.requestUpdate(this._id);\r\n        this._requestingUpdate = true;\r\n    }\r\n    this._perspectiveDirty = true;\r\n    this._projectionType = Camera.PINHOLE_PROJECTION;\r\n    this._focalDepth = depth;\r\n    this._near = 0;\r\n    this._far = 0;\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * Gets object containing serialized data for the component\r\n *\r\n * @method\r\n *\r\n * @param {Number} near distance from the near clipping plane to the camera\r\n * @param {Number} far distance from the far clipping plane to the camera\r\n *\r\n * @return {Camera} this\r\n */\r\nCamera.prototype.setFrustum = function setFrustum(near, far) {\r\n    if (!this._requestingUpdate) {\r\n        this._node.requestUpdate(this._id);\r\n        this._requestingUpdate = true;\r\n    }\r\n\r\n    this._perspectiveDirty = true;\r\n    this._projectionType = Camera.FRUSTUM_PROJECTION;\r\n    this._focalDepth = 0;\r\n    this._near = near;\r\n    this._far = far;\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * Set the Camera to have orthographic projection\r\n *\r\n * @method\r\n *\r\n * @return {Camera} this\r\n */\r\nCamera.prototype.setFlat = function setFlat() {\r\n    if (!this._requestingUpdate) {\r\n        this._node.requestUpdate(this._id);\r\n        this._requestingUpdate = true;\r\n    }\r\n\r\n    this._perspectiveDirty = true;\r\n    this._projectionType = Camera.ORTHOGRAPHIC_PROJECTION;\r\n    this._focalDepth = 0;\r\n    this._near = 0;\r\n    this._far = 0;\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * When the node this component is attached to updates, the Camera will\r\n * send new camera information to the Compositor to update the rendering\r\n * of the scene.\r\n *\r\n * @method\r\n *\r\n * @return {undefined} undefined\r\n */\r\nCamera.prototype.onUpdate = function onUpdate() {\r\n    this._requestingUpdate = false;\r\n\r\n    var path = this._node.getLocation();\r\n\r\n    this._node\r\n        .sendDrawCommand(Commands.WITH)\r\n        .sendDrawCommand(path);\r\n\r\n    if (this._perspectiveDirty) {\r\n        this._perspectiveDirty = false;\r\n\r\n        switch (this._projectionType) {\r\n            case Camera.FRUSTUM_PROJECTION:\r\n                this._node.sendDrawCommand(Commands.FRUSTRUM_PROJECTION);\r\n                this._node.sendDrawCommand(this._near);\r\n                this._node.sendDrawCommand(this._far);\r\n                break;\r\n            case Camera.PINHOLE_PROJECTION:\r\n                this._node.sendDrawCommand(Commands.PINHOLE_PROJECTION);\r\n                this._node.sendDrawCommand(this._focalDepth);\r\n                break;\r\n            case Camera.ORTHOGRAPHIC_PROJECTION:\r\n                this._node.sendDrawCommand(Commands.ORTHOGRAPHIC_PROJECTION);\r\n                break;\r\n        }\r\n    }\r\n\r\n    if (this._viewDirty) {\r\n        this._viewDirty = false;\r\n\r\n        this._node.sendDrawCommand(Commands.CHANGE_VIEW_TRANSFORM);\r\n        this._node.sendDrawCommand(this._viewTransform[0]);\r\n        this._node.sendDrawCommand(this._viewTransform[1]);\r\n        this._node.sendDrawCommand(this._viewTransform[2]);\r\n        this._node.sendDrawCommand(this._viewTransform[3]);\r\n\r\n        this._node.sendDrawCommand(this._viewTransform[4]);\r\n        this._node.sendDrawCommand(this._viewTransform[5]);\r\n        this._node.sendDrawCommand(this._viewTransform[6]);\r\n        this._node.sendDrawCommand(this._viewTransform[7]);\r\n\r\n        this._node.sendDrawCommand(this._viewTransform[8]);\r\n        this._node.sendDrawCommand(this._viewTransform[9]);\r\n        this._node.sendDrawCommand(this._viewTransform[10]);\r\n        this._node.sendDrawCommand(this._viewTransform[11]);\r\n\r\n        this._node.sendDrawCommand(this._viewTransform[12]);\r\n        this._node.sendDrawCommand(this._viewTransform[13]);\r\n        this._node.sendDrawCommand(this._viewTransform[14]);\r\n        this._node.sendDrawCommand(this._viewTransform[15]);\r\n    }\r\n};\r\n\r\n/**\r\n * When the transform of the node this component is attached to\r\n * changes, have the Camera update its projection matrix and\r\n * if needed, flag to node to update.\r\n *\r\n * @method\r\n *\r\n * @param {Array} transform an array denoting the transform matrix of the node\r\n *\r\n * @return {Camera} this\r\n */\r\nCamera.prototype.onTransformChange = function onTransformChange(transform) {\r\n    var a = transform;\r\n    this._viewDirty = true;\r\n\r\n    if (!this._requestingUpdate) {\r\n        this._node.requestUpdate(this._id);\r\n        this._requestingUpdate = true;\r\n    }\r\n\r\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\r\n    a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\r\n    a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\r\n    a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\r\n\r\n    b00 = a00 * a11 - a01 * a10,\r\n    b01 = a00 * a12 - a02 * a10,\r\n    b02 = a00 * a13 - a03 * a10,\r\n    b03 = a01 * a12 - a02 * a11,\r\n    b04 = a01 * a13 - a03 * a11,\r\n    b05 = a02 * a13 - a03 * a12,\r\n    b06 = a20 * a31 - a21 * a30,\r\n    b07 = a20 * a32 - a22 * a30,\r\n    b08 = a20 * a33 - a23 * a30,\r\n    b09 = a21 * a32 - a22 * a31,\r\n    b10 = a21 * a33 - a23 * a31,\r\n    b11 = a22 * a33 - a23 * a32,\r\n\r\n    det = 1/(b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06);\r\n\r\n    this._viewTransform[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n    this._viewTransform[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n    this._viewTransform[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n    this._viewTransform[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\r\n    this._viewTransform[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n    this._viewTransform[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n    this._viewTransform[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n    this._viewTransform[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\r\n    this._viewTransform[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n    this._viewTransform[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n    this._viewTransform[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n    this._viewTransform[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\r\n    this._viewTransform[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\r\n    this._viewTransform[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\r\n    this._viewTransform[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\r\n    this._viewTransform[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\r\n};\r\n\r\nmodule.exports = Camera;\r\n","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n/**\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2015 Famous Industries Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n\r\n'use strict';\r\n\r\nvar Commands = require('../core/Commands');\r\n\r\n/**\r\n * Camera is a component that is responsible for sending information to the renderer about where\r\n * the camera is in the scene.  This allows the user to set the type of projection, the focal depth,\r\n * and other properties to adjust the way the scenes are rendered.\r\n *\r\n * @class Camera\r\n *\r\n * @param {Node} node to which the instance of Camera will be a component of\r\n */\r\nfunction Camera(node) {\r\n    this._node = node;\r\n    this._projectionType = Camera.ORTHOGRAPHIC_PROJECTION;\r\n    this._focalDepth = 0;\r\n    this._near = 0;\r\n    this._far = 0;\r\n    this._requestingUpdate = false;\r\n    this._id = node.addComponent(this);\r\n    this._viewTransform = new Float32Array([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);\r\n    this._viewDirty = false;\r\n    this._perspectiveDirty = false;\r\n    this.setFlat();\r\n}\r\n\r\nCamera.FRUSTUM_PROJECTION = 0;\r\nCamera.PINHOLE_PROJECTION = 1;\r\nCamera.ORTHOGRAPHIC_PROJECTION = 2;\r\n\r\n/**\r\n * @method\r\n *\r\n * @return {String} Name of the component\r\n */\r\nCamera.prototype.toString = function toString() {\r\n    return 'Camera';\r\n};\r\n\r\n/**\r\n * Gets object containing serialized data for the component\r\n *\r\n * @method\r\n *\r\n * @return {Object} the state of the component\r\n */\r\nCamera.prototype.getValue = function getValue() {\r\n    return {\r\n        component: this.toString(),\r\n        projectionType: this._projectionType,\r\n        focalDepth: this._focalDepth,\r\n        near: this._near,\r\n        far: this._far\r\n    };\r\n};\r\n\r\n/**\r\n * Set the components state based on some serialized data\r\n *\r\n * @method\r\n *\r\n * @param {Object} state an object defining what the state of the component should be\r\n *\r\n * @return {Boolean} status of the set\r\n */\r\nCamera.prototype.setValue = function setValue(state) {\r\n    if (this.toString() === state.component) {\r\n        this.set(state.projectionType, state.focalDepth, state.near, state.far);\r\n        return true;\r\n    }\r\n    return false;\r\n};\r\n\r\n/**\r\n * Set the internals of the component\r\n *\r\n * @method\r\n *\r\n * @param {Number} type an id corresponding to the type of projection to use\r\n * @param {Number} depth the depth for the pinhole projection model\r\n * @param {Number} near the distance of the near clipping plane for a frustum projection\r\n * @param {Number} far the distance of the far clipping plane for a frustum projection\r\n *\r\n * @return {Boolean} status of the set\r\n */\r\nCamera.prototype.set = function set(type, depth, near, far) {\r\n    if (!this._requestingUpdate) {\r\n        this._node.requestUpdate(this._id);\r\n        this._requestingUpdate = true;\r\n    }\r\n    this._projectionType = type;\r\n    this._focalDepth = depth;\r\n    this._near = near;\r\n    this._far = far;\r\n};\r\n\r\n/**\r\n * Set the camera depth for a pinhole projection model\r\n *\r\n * @method\r\n *\r\n * @param {Number} depth the distance between the Camera and the origin\r\n *\r\n * @return {Camera} this\r\n */\r\nCamera.prototype.setDepth = function setDepth(depth) {\r\n    if (!this._requestingUpdate) {\r\n        this._node.requestUpdate(this._id);\r\n        this._requestingUpdate = true;\r\n    }\r\n    this._perspectiveDirty = true;\r\n    this._projectionType = Camera.PINHOLE_PROJECTION;\r\n    this._focalDepth = depth;\r\n    this._near = 0;\r\n    this._far = 0;\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * Gets object containing serialized data for the component\r\n *\r\n * @method\r\n *\r\n * @param {Number} near distance from the near clipping plane to the camera\r\n * @param {Number} far distance from the far clipping plane to the camera\r\n *\r\n * @return {Camera} this\r\n */\r\nCamera.prototype.setFrustum = function setFrustum(near, far) {\r\n    if (!this._requestingUpdate) {\r\n        this._node.requestUpdate(this._id);\r\n        this._requestingUpdate = true;\r\n    }\r\n\r\n    this._perspectiveDirty = true;\r\n    this._projectionType = Camera.FRUSTUM_PROJECTION;\r\n    this._focalDepth = 0;\r\n    this._near = near;\r\n    this._far = far;\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * Set the Camera to have orthographic projection\r\n *\r\n * @method\r\n *\r\n * @return {Camera} this\r\n */\r\nCamera.prototype.setFlat = function setFlat() {\r\n    if (!this._requestingUpdate) {\r\n        this._node.requestUpdate(this._id);\r\n        this._requestingUpdate = true;\r\n    }\r\n\r\n    this._perspectiveDirty = true;\r\n    this._projectionType = Camera.ORTHOGRAPHIC_PROJECTION;\r\n    this._focalDepth = 0;\r\n    this._near = 0;\r\n    this._far = 0;\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * When the node this component is attached to updates, the Camera will\r\n * send new camera information to the Compositor to update the rendering\r\n * of the scene.\r\n *\r\n * @method\r\n *\r\n * @return {undefined} undefined\r\n */\r\nCamera.prototype.onUpdate = function onUpdate() {\r\n    this._requestingUpdate = false;\r\n\r\n    var path = this._node.getLocation();\r\n\r\n    this._node\r\n        .sendDrawCommand(Commands.WITH)\r\n        .sendDrawCommand(path);\r\n\r\n    if (this._perspectiveDirty) {\r\n        this._perspectiveDirty = false;\r\n\r\n        switch (this._projectionType) {\r\n            case Camera.FRUSTUM_PROJECTION:\r\n                this._node.sendDrawCommand(Commands.FRUSTRUM_PROJECTION);\r\n                this._node.sendDrawCommand(this._near);\r\n                this._node.sendDrawCommand(this._far);\r\n                break;\r\n            case Camera.PINHOLE_PROJECTION:\r\n                this._node.sendDrawCommand(Commands.PINHOLE_PROJECTION);\r\n                this._node.sendDrawCommand(this._focalDepth);\r\n                break;\r\n            case Camera.ORTHOGRAPHIC_PROJECTION:\r\n                this._node.sendDrawCommand(Commands.ORTHOGRAPHIC_PROJECTION);\r\n                break;\r\n        }\r\n    }\r\n\r\n    if (this._viewDirty) {\r\n        this._viewDirty = false;\r\n\r\n        this._node.sendDrawCommand(Commands.CHANGE_VIEW_TRANSFORM);\r\n        this._node.sendDrawCommand(this._viewTransform[0]);\r\n        this._node.sendDrawCommand(this._viewTransform[1]);\r\n        this._node.sendDrawCommand(this._viewTransform[2]);\r\n        this._node.sendDrawCommand(this._viewTransform[3]);\r\n\r\n        this._node.sendDrawCommand(this._viewTransform[4]);\r\n        this._node.sendDrawCommand(this._viewTransform[5]);\r\n        this._node.sendDrawCommand(this._viewTransform[6]);\r\n        this._node.sendDrawCommand(this._viewTransform[7]);\r\n\r\n        this._node.sendDrawCommand(this._viewTransform[8]);\r\n        this._node.sendDrawCommand(this._viewTransform[9]);\r\n        this._node.sendDrawCommand(this._viewTransform[10]);\r\n        this._node.sendDrawCommand(this._viewTransform[11]);\r\n\r\n        this._node.sendDrawCommand(this._viewTransform[12]);\r\n        this._node.sendDrawCommand(this._viewTransform[13]);\r\n        this._node.sendDrawCommand(this._viewTransform[14]);\r\n        this._node.sendDrawCommand(this._viewTransform[15]);\r\n    }\r\n};\r\n\r\n/**\r\n * When the transform of the node this component is attached to\r\n * changes, have the Camera update its projection matrix and\r\n * if needed, flag to node to update.\r\n *\r\n * @method\r\n *\r\n * @param {Array} transform an array denoting the transform matrix of the node\r\n *\r\n * @return {Camera} this\r\n */\r\nCamera.prototype.onTransformChange = function onTransformChange(transform) {\r\n    var a = transform;\r\n    this._viewDirty = true;\r\n\r\n    if (!this._requestingUpdate) {\r\n        this._node.requestUpdate(this._id);\r\n        this._requestingUpdate = true;\r\n    }\r\n\r\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\r\n    a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\r\n    a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\r\n    a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\r\n\r\n    b00 = a00 * a11 - a01 * a10,\r\n    b01 = a00 * a12 - a02 * a10,\r\n    b02 = a00 * a13 - a03 * a10,\r\n    b03 = a01 * a12 - a02 * a11,\r\n    b04 = a01 * a13 - a03 * a11,\r\n    b05 = a02 * a13 - a03 * a12,\r\n    b06 = a20 * a31 - a21 * a30,\r\n    b07 = a20 * a32 - a22 * a30,\r\n    b08 = a20 * a33 - a23 * a30,\r\n    b09 = a21 * a32 - a22 * a31,\r\n    b10 = a21 * a33 - a23 * a31,\r\n    b11 = a22 * a33 - a23 * a32,\r\n\r\n    det = 1/(b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06);\r\n\r\n    this._viewTransform[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n    this._viewTransform[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n    this._viewTransform[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n    this._viewTransform[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\r\n    this._viewTransform[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n    this._viewTransform[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n    this._viewTransform[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n    this._viewTransform[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\r\n    this._viewTransform[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n    this._viewTransform[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n    this._viewTransform[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n    this._viewTransform[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\r\n    this._viewTransform[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\r\n    this._viewTransform[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\r\n    this._viewTransform[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\r\n    this._viewTransform[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\r\n};\r\n\r\nmodule.exports = Camera;\r\n\n},{\"../core/Commands\":3}],2:[function(require,module,exports){\n'use strict';\r\nvar Commands = require(\"./Commands\");\r\n\r\n/**\r\n * 提供web主线程与worker间函数互相调用的能力\r\n *\r\n * @class Chan\r\n * @constructor\r\n * @return {undefined} undefined\r\n */\r\nfunction Chan () {\r\n\tthis.running = false;\r\n\tthis._funList={};\r\n\tthis._CallList={};\r\n}\r\n\r\n/**\r\n *设置通道\r\n *\r\n * @method\r\n *\r\n * @param {channel} \r\n */\r\nChan.prototype.setChannel = function( ch ) {\r\n\tthis._channel = ch;\r\n\tthis.start();\r\n};\r\n\r\nChan.prototype.start = function () {\r\n\tthis._running = true;\r\n}\r\n\r\nChan.prototype.stop = function(){\r\n\tthis._running = false;\r\n}\r\n\r\n/**\r\n *添加执行函数和回调函数。\r\n *\r\n * @method\r\n *\r\n * @param {function} 执行函数\r\n * @param {function} 回调函数\r\n */\r\nChan.prototype.add = function( fun, call , param ){ \r\n    var id = new Date();\r\n        id = \"id\"+id.getTime()+ Math.ceil((Math.random()*10000));\r\n\r\n    this._funList[id] = call;\r\n    this._push({id: id, args: param, fun: fun.toString()});\r\n\r\n}\r\n\r\n/**\r\n *向channel 推送数据。\r\n *\r\n * @method\r\n *\r\n * @param {object} obj.id 、obj.res、 obj.fun\r\n */\r\nChan.prototype._push = function( arg ){\r\n\tif( !this._running)return;\r\n\r\n    var CROSS_THREAD_MESSAGE = [Commands.ENGINE, Commands.CROSS_THREAD, arg];\r\n    if( this._channel.sendMessage)\r\n        this._channel.sendMessage(CROSS_THREAD_MESSAGE);\r\n    else\r\n    \tthis._channel.postMessage(CROSS_THREAD_MESSAGE);\r\n}\r\n\r\n/**\r\n *channel.onMessage 时调用。\r\n *\r\n * @method\r\n *\r\n * @param {object} obj.id 、obj.res、 obj.fun\r\n */\r\nChan.prototype.callback = function ( arg ) {\r\n    \r\n\tif(!arg.hasOwnProperty(\"res\")){\r\n\t\tnew funCaller(this, arg).exec();\r\n     \r\n\t}else if(this._funList[arg.id]){\r\n\r\n\t\tthis._funList[arg.id]( arg.res );\r\n\t\tthis._funList[arg.id] = null;\r\n\r\n\t\tdelete this._funList[arg.id];\r\n\t}\r\n}\r\n\r\nfunction funCaller  (ch, arg) {\r\n\t\r\n\tthis.chan = ch \r\n\tthis.fun = arg.fun;\r\n\tthis.id = arg.id;\r\n\r\n\tif( !Array.isArray(arg.args) )\r\n\t\targ.args = [];\r\n\tthis.arg = arg.args;\r\n}\r\n\r\n\r\nfunCaller.prototype.exec = function  (argument) {\r\n\tvar self = this;\r\n    //暂时用Function 期待更好的方法。 \r\n    this.fun = eval(\"(\"+this.fun+\")\");\r\n\r\n    var res = this.fun.apply(this, this.arg);\r\n\r\n\tif( typeof res != \"undefined\")\r\n\t\tself._call(res);\r\n}\r\n\r\nfunCaller.prototype._call = function ( arg ) {\r\n\r\n\tthis.chan._push({id:this.id, res:arg});\r\n}\r\n\r\n\r\nmodule.exports =  new Chan();\n},{\"./Commands\":3}],3:[function(require,module,exports){\n/**\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2015 Famous Industries Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n\r\n'use strict';\r\n\r\n/**\r\n * An enumeration of the commands in our command queue.\r\n */\r\nvar Commands = {\r\n    INIT_DOM: 0,\r\n    DOM_RENDER_SIZE: 1,\r\n    CHANGE_TRANSFORM: 2,\r\n    CHANGE_SIZE: 3,\r\n    CHANGE_PROPERTY: 4,\r\n    CHANGE_CONTENT: 5,\r\n    CHANGE_ATTRIBUTE: 6,\r\n    ADD_CLASS: 7,\r\n    REMOVE_CLASS: 8,\r\n    SUBSCRIBE: 9,\r\n    GL_SET_DRAW_OPTIONS: 10,\r\n    GL_AMBIENT_LIGHT: 11,\r\n    GL_LIGHT_POSITION: 12,\r\n    GL_LIGHT_COLOR: 13,\r\n    MATERIAL_INPUT: 14,\r\n    GL_SET_GEOMETRY: 15,\r\n    GL_UNIFORMS: 16,\r\n    GL_BUFFER_DATA: 17,\r\n    GL_CUTOUT_STATE: 18,\r\n    GL_MESH_VISIBILITY: 19,\r\n    GL_REMOVE_MESH: 20,\r\n    PINHOLE_PROJECTION: 21,\r\n    ORTHOGRAPHIC_PROJECTION: 22,\r\n    CHANGE_VIEW_TRANSFORM: 23,\r\n    WITH: 24,\r\n    FRAME: 25,\r\n    ENGINE: 26,\r\n    START: 27,\r\n    STOP: 28,\r\n    TIME: 29,\r\n    TRIGGER: 30,\r\n    NEED_SIZE_FOR: 31,\r\n    DOM: 32,\r\n    READY: 33,\r\n    ALLOW_DEFAULT: 34,\r\n    PREVENT_DEFAULT: 35,\r\n    UNSUBSCRIBE: 36,\r\n    CROSS_THREAD:37,\r\n    prettyPrint: function (buffer, start, count) {\r\n        var callback;\r\n        start = start ? start : 0;\r\n        var data = {\r\n            i: start,\r\n            result: ''\r\n        };\r\n        for (var len = count ? count + start : buffer.length ; data.i < len ; data.i++) {\r\n            callback = commandPrinters[buffer[data.i]];\r\n            if (!callback) throw new Error('PARSE ERROR: no command registered for: ' + buffer[data.i]);\r\n            callback(buffer, data);\r\n        }\r\n        return data.result;\r\n    }\r\n};\r\n\r\nvar commandPrinters = [];\r\n\r\ncommandPrinters[Commands.INIT_DOM] = function init_dom (buffer, data) {\r\n    data.result += data.i + '. INIT_DOM\\n    tagName: ' + buffer[++data.i] + '\\n\\n';\r\n}; \r\n\r\ncommandPrinters[Commands.DOM_RENDER_SIZE] = function dom_render_size (buffer, data) {\r\n    data.result += data.i + '. DOM_RENDER_SIZE\\n    selector: ' + buffer[++data.i] + '\\n\\n';\r\n};\r\n\r\ncommandPrinters[Commands.CHANGE_TRANSFORM] = function change_transform (buffer, data) {\r\n    data.result += data.i + '. CHANGE_TRANSFORM\\n    val: [';\r\n    for (var j = 0 ; j < 16 ; j++) data.result += buffer[++data.i] + (j < 15 ? ', ' : '');\r\n    data.result += ']\\n\\n';\r\n};\r\n\r\ncommandPrinters[Commands.CHANGE_SIZE] = function change_size (buffer, data) {\r\n    data.result += data.i + '. CHANGE_SIZE\\n    x: ' + buffer[++data.i] + ', y: ' + buffer[++data.i] + '\\n\\n';\r\n};\r\n\r\ncommandPrinters[Commands.CHANGE_PROPERTY] = function change_property (buffer, data) {\r\n    data.result += data.i + '. CHANGE_PROPERTY\\n    key: ' + buffer[++data.i] + ', value: ' + buffer[++data.i] + '\\n\\n';\r\n};\r\n\r\ncommandPrinters[Commands.CHANGE_CONTENT] = function change_content (buffer, data) {\r\n    data.result += data.i + '. CHANGE_CONTENT\\n    content: ' + buffer[++data.i] + '\\n\\n';\r\n};\r\n\r\ncommandPrinters[Commands.CHANGE_ATTRIBUTE] = function change_attribute (buffer, data) {\r\n    data.result += data.i + '. CHANGE_ATTRIBUTE\\n    key: ' + buffer[++data.i] + ', value: ' + buffer[++data.i] + '\\n\\n';\r\n};\r\n\r\ncommandPrinters[Commands.ADD_CLASS] = function add_class (buffer, data) {\r\n    data.result += data.i + '. ADD_CLASS\\n    className: ' + buffer[++data.i] + '\\n\\n';\r\n};\r\n\r\ncommandPrinters[Commands.REMOVE_CLASS] = function remove_class (buffer, data) {\r\n    data.result += data.i + '. REMOVE_CLASS\\n    className: ' + buffer[++data.i] + '\\n\\n';\r\n};\r\n\r\ncommandPrinters[Commands.SUBSCRIBE] = function subscribe (buffer, data) {\r\n    data.result += data.i + '. SUBSCRIBE\\n    event: ' + buffer[++data.i] + '\\n\\n';\r\n};\r\n\r\ncommandPrinters[Commands.GL_SET_DRAW_OPTIONS] = function gl_set_draw_options (buffer, data) {\r\n    data.result += data.i + '. GL_SET_DRAW_OPTIONS\\n    options: ' + buffer[++data.i] + '\\n\\n';\r\n};\r\n\r\ncommandPrinters[Commands.GL_AMBIENT_LIGHT] = function gl_ambient_light (buffer, data) {\r\n    data.result += data.i + '. GL_AMBIENT_LIGHT\\n    r: ' + buffer[++data.i] + 'g: ' + buffer[++data.i] + 'b: ' + buffer[++data.i] + '\\n\\n';\r\n};\r\n\r\ncommandPrinters[Commands.GL_LIGHT_POSITION] = function gl_light_position (buffer, data) {\r\n    data.result += data.i + '. GL_LIGHT_POSITION\\n    x: ' + buffer[++data.i] + 'y: ' + buffer[++data.i] + 'z: ' + buffer[++data.i] + '\\n\\n';\r\n};\r\n\r\ncommandPrinters[Commands.GL_LIGHT_COLOR] = function gl_light_color (buffer, data) {\r\n    data.result += data.i + '. GL_LIGHT_COLOR\\n    r: ' + buffer[++data.i] + 'g: ' + buffer[++data.i] + 'b: ' + buffer[++data.i] + '\\n\\n';\r\n};\r\n\r\ncommandPrinters[Commands.MATERIAL_INPUT] = function material_input (buffer, data) {\r\n    data.result += data.i + '. MATERIAL_INPUT\\n    key: ' + buffer[++data.i] + ', value: ' + buffer[++data.i] + '\\n\\n';\r\n};\r\n\r\ncommandPrinters[Commands.GL_SET_GEOMETRY] = function gl_set_geometry (buffer, data) {\r\n    data.result += data.i + '. GL_SET_GEOMETRY\\n   x: ' + buffer[++data.i] + ', y: ' + buffer[++data.i] + ', z: ' + buffer[++data.i] + '\\n\\n';\r\n};\r\n\r\ncommandPrinters[Commands.GL_UNIFORMS] = function gl_uniforms (buffer, data) {\r\n    data.result += data.i + '. GL_UNIFORMS\\n    key: ' + buffer[++data.i] + ', value: ' + buffer[++data.i] + '\\n\\n';\r\n};\r\n\r\ncommandPrinters[Commands.GL_BUFFER_DATA] = function gl_buffer_data (buffer, data) {\r\n    data.result += data.i + '. GL_BUFFER_DATA\\n    data: ';\r\n    for (var i = 0; i < 5 ; i++) data.result += buffer[++data.i] + ', ';\r\n    data.result += '\\n\\n';\r\n};\r\n\r\ncommandPrinters[Commands.GL_CUTOUT_STATE] = function gl_cutout_state (buffer, data) {\r\n    data.result += data.i + '. GL_CUTOUT_STATE\\n    state: ' + buffer[++data.i] + '\\n\\n';\r\n};\r\n\r\ncommandPrinters[Commands.GL_MESH_VISIBILITY] = function gl_mesh_visibility (buffer, data) {\r\n    data.result += data.i + '. GL_MESH_VISIBILITY\\n    visibility: ' + buffer[++data.i] + '\\n\\n';\r\n};\r\n\r\ncommandPrinters[Commands.GL_REMOVE_MESH] = function gl_remove_mesh (buffer, data) {\r\n    data.result += data.i + '. GL_REMOVE_MESH\\n\\n';\r\n};\r\n\r\ncommandPrinters[Commands.PINHOLE_PROJECTION] = function pinhole_projection (buffer, data) {\r\n    data.result += data.i + '. PINHOLE_PROJECTION\\n    depth: ' + buffer[++data.i] + '\\n\\n';\r\n};\r\n\r\ncommandPrinters[Commands.ORTHOGRAPHIC_PROJECTION] = function orthographic_projection (buffer, data) {\r\n    data.result += data.i + '. ORTHOGRAPHIC_PROJECTION\\n';\r\n};\r\n\r\ncommandPrinters[Commands.CHANGE_VIEW_TRANSFORM] = function change_view_transform (buffer, data) {\r\n    data.result += data.i + '. CHANGE_VIEW_TRANSFORM\\n   value: [';\r\n    for (var i = 0; i < 16 ; i++) data.result += buffer[++data.i] + (i < 15 ? ', ' : '');\r\n    data.result += ']\\n\\n';\r\n};\r\n\r\ncommandPrinters[Commands.PREVENT_DEFAULT] = function prevent_default (buffer, data) {\r\n    data.result += data.i + '. PREVENT_DEFAULT\\n    value: ' + buffer[++data.i] + '\\n\\n';\r\n};\r\n\r\ncommandPrinters[Commands.ALLOW_DEFAULT] = function allow_default (buffer, data) {\r\n    data.result += data.i + '. ALLOW_DEFAULT\\n    value: ' + buffer[++data.i] + '\\n\\n';\r\n};\r\n\r\ncommandPrinters[Commands.READY] = function ready (buffer, data) {\r\n    data.result += data.i + '. READY\\n\\n';\r\n};\r\n\r\ncommandPrinters[Commands.WITH] = function w (buffer, data) {\r\n    data.result += data.i + '. **WITH**\\n     path: ' + buffer[++data.i] + '\\n\\n';\r\n};\r\n\r\ncommandPrinters[Commands.TIME] = function time (buffer, data) {\r\n    data.result += data.i + '. TIME\\n     ms: ' + buffer[++data.i] + '\\n\\n';\r\n};\r\n\r\ncommandPrinters[Commands.NEED_SIZE_FOR] = function need_size_for (buffer, data) {\r\n    data.result += data.i + '. NEED_SIZE_FOR\\n    selector: ' + buffer[++data.i] + '\\n\\n';\r\n};\r\n\r\nmodule.exports = Commands;\r\n\r\n\n},{}],4:[function(require,module,exports){\n'use strict';\r\n\r\n\r\nvar Chan = require(\"./Chan\");\r\n/**\r\n *CrossCall 主要提供线程间的函数调用功能。\r\n *如在worker内调用 window、document 等对象。\r\n *\r\n * @method\r\n *\r\n * @param {function}  需要线程外执行的函数，通常会有一个返回值 例如：{id:32, text:\"I`m Tester\"}\r\n */\r\nfunction CrossCall( fun , param){\r\n    this._fun = fun;\r\n    this._param = param;\r\n}\r\n\r\n/**\r\n *设置线程外执行函数\r\n *\r\n * @method\r\n *\r\n * @param {function} 需要线程外执行的函数，通常会有一个返回值 例如：{id:32, text:\"I`m Tester\"}\r\n */\r\nCrossCall.prototype.setFun = function ( fun , param) {\r\n\tif( typeof fun !==\"function\" ) return;\r\n\tthis._fun  = fun;\r\n    this._param = param;\r\n\treturn this;\r\n}\r\n\r\n/**\r\n *执行\r\n *\r\n * @method\r\n *\r\n * @param {function} 回调函数，非必要。若设置_fun执行之后会调用之。\r\n */\r\nCrossCall.prototype.exec = function( fun ) {\r\n\r\n\t\tChan.add( this._fun, fun , this._param);\r\n};\r\n\r\nmodule.exports = CrossCall;\n},{\"./Chan\":2}],5:[function(require,module,exports){\n/**\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2015 Famous Industries Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n\r\n'use strict';\r\n\r\n/**\r\n * A collection of utilities for handling paths.\r\n *\r\n * @namespace\r\n */\r\nvar Path = {\r\n\r\n    /**\r\n     * determines if the passed in path has a trailing slash. Paths of the form\r\n     * 'body/0/1/' return true, while paths of the form 'body/0/1' return false.\r\n     *\r\n     * @method\r\n     *\r\n     * @param {String} path the path\r\n     *\r\n     * @return {Boolean} whether or not the path has a trailing slash\r\n     */\r\n    hasTrailingSlash: function hasTrailingSlash (path) {\r\n        return path[path.length - 1] === '/';\r\n    },\r\n\r\n    /**\r\n     * Returns the depth in the tree this path represents. Essentially counts\r\n     * the slashes ignoring a trailing slash.\r\n     *\r\n     * @method\r\n     *\r\n     * @param {String} path the path\r\n     *\r\n     * @return {Number} the depth in the tree that this path represents\r\n     */\r\n    depth: function depth (path) {\r\n        var count = 0;\r\n        var length = path.length;\r\n        var len = this.hasTrailingSlash(path) ? length - 1 : length;\r\n        var i = 0;\r\n        for (; i < len ; i++) count += path[i] === '/' ? 1 : 0;\r\n        return count;\r\n    },\r\n\r\n    /**\r\n     * Gets the position of this path in relation to its siblings.\r\n     *\r\n     * @method\r\n     *\r\n     * @param {String} path the path\r\n     *\r\n     * @return {Number} the index of this path in relation to its siblings.\r\n     */\r\n    index: function index (path) {\r\n        var length = path.length;\r\n        var len = this.hasTrailingSlash(path) ? length - 1 : length;\r\n        while (len--) if (path[len] === '/') break;\r\n        var result = parseInt(path.substring(len + 1));\r\n        return isNaN(result) ? 0 : result;\r\n    },\r\n\r\n    /**\r\n     * Gets the position of the path at a particular breadth in relationship\r\n     * to its siblings\r\n     *\r\n     * @method\r\n     *\r\n     * @param {String} path the path\r\n     * @param {Number} depth the breadth at which to find the index\r\n     *\r\n     * @return {Number} index at the particular depth\r\n     */\r\n    indexAtDepth: function indexAtDepth (path, depth) {\r\n        var i = 0;\r\n        var len = path.length;\r\n        var index = 0;\r\n        for (; i < len ; i++) {\r\n            if (path[i] === '/') index++;\r\n            if (index === depth) {\r\n                path = path.substring(i ? i + 1 : i);\r\n                index = path.indexOf('/');\r\n                path = index === -1 ? path : path.substring(0, index);\r\n                index = parseInt(path);\r\n                return isNaN(index) ? path : index;\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * returns the path of the passed in path's parent.\r\n     *\r\n     * @method\r\n     *\r\n     * @param {String} path the path\r\n     *\r\n     * @return {String} the path of the passed in path's parent\r\n     */\r\n    parent: function parent (path) {\r\n        return path.substring(0, path.lastIndexOf('/', path.length - 2));\r\n    },\r\n\r\n    /**\r\n     * Determines whether or not the first argument path is the direct child\r\n     * of the second argument path.\r\n     *\r\n     * @method\r\n     *\r\n     * @param {String} child the path that may be a child\r\n     * @param {String} parent the path that may be a parent\r\n     *\r\n     * @return {Boolean} whether or not the first argument path is a child of the second argument path\r\n     */\r\n    isChildOf: function isChildOf (child, parent) {\r\n        return this.isDescendentOf(child, parent) && this.depth(child) === this.depth(parent) + 1;\r\n    },\r\n\r\n    /**\r\n     * Returns true if the first argument path is a descendent of the second argument path.\r\n     *\r\n     * @method\r\n     *\r\n     * @param {String} child potential descendent path\r\n     * @param {String} parent potential ancestor path\r\n     *\r\n     * @return {Boolean} whether or not the path is a descendent\r\n     */\r\n    isDescendentOf: function isDescendentOf(child, parent) {\r\n        if (child === parent) return false;\r\n        child = this.hasTrailingSlash(child) ? child : child + '/';\r\n        parent = this.hasTrailingSlash(parent) ? parent : parent + '/';\r\n        return this.depth(parent) < this.depth(child) && child.indexOf(parent) === 0;\r\n    },\r\n\r\n    /**\r\n     * returns the selector portion of the path.\r\n     *\r\n     * @method\r\n     *\r\n     * @param {String} path the path\r\n     *\r\n     * @return {String} the selector portion of the path.\r\n     */\r\n    getSelector: function getSelector(path) {\r\n        var index = path.indexOf('/');\r\n        return index === -1 ? path : path.substring(0, index);\r\n    }\r\n\r\n};\r\n\r\nmodule.exports = Path;\r\n\n},{}],6:[function(require,module,exports){\n/**\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2015 Famous Industries Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n\r\n'use strict';\r\n\r\nvar ElementCache = require('./ElementCache');\r\nvar math = require('./Math');\r\nvar PathUtils = require('../core/Path');\r\nvar vendorPrefix = require('../utilities/vendorPrefix');\r\nvar CallbackStore = require('../utilities/CallbackStore');\r\nvar eventMap = require('./events/EventMap');\r\n\r\nvar TRANSFORM = null;\r\n\r\n/**\r\n * DOMRenderer is a class responsible for adding elements\r\n * to the DOM and writing to those elements.\r\n * There is a DOMRenderer per context, represented as an\r\n * element and a selector. It is instantiated in the\r\n * context class.\r\n *\r\n * @class DOMRenderer\r\n *\r\n * @param {HTMLElement} element an element.\r\n * @param {String} selector the selector of the element.\r\n * @param {Compositor} compositor the compositor controlling the renderer\r\n */\r\nfunction DOMRenderer (element, selector, compositor) {\r\n    var _this = this;\r\n\r\n    element.classList.add('famous-dom-renderer');\r\n\r\n    TRANSFORM = TRANSFORM || vendorPrefix('transform');\r\n    this._compositor = compositor; // a reference to the compositor\r\n\r\n    this._target = null; // a register for holding the current\r\n                         // element that the Renderer is operating\r\n                         // upon\r\n\r\n    this._parent = null; // a register for holding the parent\r\n                         // of the target\r\n\r\n    this._path = null; // a register for holding the path of the target\r\n                       // this register must be set first, and then\r\n                       // children, target, and parent are all looked\r\n                       // up from that.\r\n\r\n    this._children = []; // a register for holding the children of the\r\n                         // current target.\r\n\r\n     this._insertElCallbackStore = new CallbackStore();\r\n     this._removeElCallbackStore = new CallbackStore();\r\n\r\n    this._root = new ElementCache(element, selector); // the root\r\n                                                      // of the dom tree that this\r\n                                                      // renderer is responsible\r\n                                                      // for\r\n\r\n    this._boundTriggerEvent = function (ev) {\r\n        return _this._triggerEvent(ev);\r\n    };\r\n\r\n    this._selector = selector;\r\n\r\n    this._elements = {};\r\n\r\n    this._elements[selector] = this._root;\r\n\r\n    this.perspectiveTransform = new Float32Array([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);\r\n    this._VPtransform = new Float32Array([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);\r\n\r\n    this._lastEv = null;\r\n}\r\n\r\n\r\n/**\r\n * Attaches an EventListener to the element associated with the passed in path.\r\n * Prevents the default browser action on all subsequent events if\r\n * `preventDefault` is truthy.\r\n * All incoming events will be forwarded to the compositor by invoking the\r\n * `sendEvent` method.\r\n * Delegates events if possible by attaching the event listener to the context.\r\n *\r\n * @method\r\n *\r\n * @param {String} type DOM event type (e.g. click, mouseover).\r\n * @param {Boolean} preventDefault Whether or not the default browser action should be prevented.\r\n *\r\n * @return {undefined} undefined\r\n */\r\nDOMRenderer.prototype.subscribe = function subscribe(type) {\r\n    this._assertTargetLoaded();\r\n    this._listen(type);\r\n    this._target.subscribe[type] = true;\r\n};\r\n\r\n/**\r\n * Used to preventDefault if an event of the specified type is being emitted on\r\n * the currently loaded target.\r\n *\r\n * @method\r\n *\r\n * @param  {String} type    The type of events that should be prevented.\r\n * @return {undefined}      undefined\r\n */\r\nDOMRenderer.prototype.preventDefault = function preventDefault(type) {\r\n    this._assertTargetLoaded();\r\n    this._listen(type);\r\n    this._target.preventDefault[type] = true;\r\n};\r\n\r\n/**\r\n * Used to undo a previous call to preventDefault. No longer `preventDefault`\r\n * for this event on the loaded target.\r\n *\r\n * @method\r\n * @private\r\n *\r\n * @param  {String} type    The event type that should no longer be affected by\r\n *                          `preventDefault`.\r\n * @return {undefined}      undefined\r\n */\r\nDOMRenderer.prototype.allowDefault = function allowDefault(type) {\r\n    this._assertTargetLoaded();\r\n    this._listen(type);\r\n    this._target.preventDefault[type] = false;\r\n};\r\n\r\n/**\r\n * Internal helper function used for adding an event listener for the the\r\n * currently loaded ElementCache.\r\n *\r\n * If the event can be delegated as specified in the {@link EventMap}, the\r\n * bound {@link _triggerEvent} function will be added as a listener on the\r\n * root element. Otherwise, the listener will be added directly to the target\r\n * element.\r\n *\r\n * @private\r\n * @method\r\n *\r\n * @param  {String} type    The event type to listen to (e.g. click).\r\n * @return {undefined}      undefined\r\n */\r\nDOMRenderer.prototype._listen = function _listen(type) {\r\n    this._assertTargetLoaded();\r\n\r\n    if (\r\n        !this._target.listeners[type] && !this._root.listeners[type]\r\n    ) {\r\n        // FIXME Add to content DIV if available\r\n        var target = eventMap[type][1] ? this._root : this._target;\r\n        target.listeners[type] = this._boundTriggerEvent;\r\n        target.element.addEventListener(type, this._boundTriggerEvent);\r\n    }\r\n};\r\n\r\n/**\r\n * Unsubscribes from all events that are of the specified type.\r\n *\r\n * @method\r\n *\r\n * @param {String} type DOM event type (e.g. click, mouseover).\r\n * @return {undefined} undefined\r\n */\r\nDOMRenderer.prototype.unsubscribe = function unsubscribe(type) {\r\n    this._assertTargetLoaded();\r\n    this._target.subscribe[type] = false;\r\n};\r\n\r\n/**\r\n * Function to be added using `addEventListener` to the corresponding\r\n * DOMElement.\r\n *\r\n * @method\r\n * @private\r\n *\r\n * @param {Event} ev DOM Event payload\r\n *\r\n * @return {undefined} undefined\r\n */\r\nDOMRenderer.prototype._triggerEvent = function _triggerEvent(ev) {\r\n    if (this._lastEv === ev) return;\r\n\r\n    // Use ev.path, which is an array of Elements (polyfilled if needed).\r\n    var evPath = ev.path ? ev.path : _getPath(ev);\r\n    // First element in the path is the element on which the event has actually\r\n    // been emitted.\r\n    for (var i = 0; i < evPath.length; i++) {\r\n        // Skip nodes that don't have a dataset property or data-fa-path\r\n        // attribute.\r\n        if (!evPath[i].dataset) continue;\r\n        var path = evPath[i].dataset.faPath;\r\n        if (!path) continue;\r\n\r\n        // Optionally preventDefault. This needs forther consideration and\r\n        // should be optional. Eventually this should be a separate command/\r\n        // method.\r\n        if (this._elements[path].preventDefault[ev.type]) {\r\n            ev.preventDefault();\r\n        }\r\n\r\n        // Stop further event propogation and path traversal as soon as the\r\n        // first ElementCache subscribing for the emitted event has been found.\r\n        if (this._elements[path] && this._elements[path].subscribe[ev.type]) {\r\n            this._lastEv = ev;\r\n\r\n            var NormalizedEventConstructor = eventMap[ev.type][0];\r\n\r\n            // Finally send the event to the Worker Thread through the\r\n            // compositor.\r\n            this._compositor.sendEvent(path, ev.type, new NormalizedEventConstructor(ev));\r\n\r\n            break;\r\n        }\r\n    }\r\n};\r\n\r\n\r\n/**\r\n * getSizeOf gets the dom size of a particular DOM element.  This is\r\n * needed for render sizing in the scene graph.\r\n *\r\n * @method\r\n *\r\n * @param {String} path path of the Node in the scene graph\r\n *\r\n * @return {Array} a vec3 of the offset size of the dom element\r\n */\r\nDOMRenderer.prototype.getSizeOf = function getSizeOf(path) {\r\n    var element = this._elements[path];\r\n    if (!element) return null;\r\n\r\n    var res = {val: element.size};\r\n    this._compositor.sendEvent(path, 'resize', res);\r\n    return res;\r\n};\r\n\r\nfunction _getPath(ev) {\r\n    // TODO move into _triggerEvent, avoid object allocation\r\n    var path = [];\r\n    var node = ev.target;\r\n    while (node !== document.body) {\r\n        path.push(node);\r\n        node = node.parentNode;\r\n    }\r\n    return path;\r\n}\r\n\r\n/**\r\n * Executes the retrieved draw commands. Draw commands only refer to the\r\n * cross-browser normalized `transform` property.\r\n *\r\n * @method\r\n *\r\n * @param {Object} renderState description\r\n *\r\n * @return {undefined} undefined\r\n */\r\nDOMRenderer.prototype.draw = function draw(renderState) {\r\n    if (renderState.perspectiveDirty) {\r\n        this.perspectiveDirty = true;\r\n\r\n        this.perspectiveTransform[0] = renderState.perspectiveTransform[0];\r\n        this.perspectiveTransform[1] = renderState.perspectiveTransform[1];\r\n        this.perspectiveTransform[2] = renderState.perspectiveTransform[2];\r\n        this.perspectiveTransform[3] = renderState.perspectiveTransform[3];\r\n\r\n        this.perspectiveTransform[4] = renderState.perspectiveTransform[4];\r\n        this.perspectiveTransform[5] = renderState.perspectiveTransform[5];\r\n        this.perspectiveTransform[6] = renderState.perspectiveTransform[6];\r\n        this.perspectiveTransform[7] = renderState.perspectiveTransform[7];\r\n\r\n        this.perspectiveTransform[8] = renderState.perspectiveTransform[8];\r\n        this.perspectiveTransform[9] = renderState.perspectiveTransform[9];\r\n        this.perspectiveTransform[10] = renderState.perspectiveTransform[10];\r\n        this.perspectiveTransform[11] = renderState.perspectiveTransform[11];\r\n\r\n        this.perspectiveTransform[12] = renderState.perspectiveTransform[12];\r\n        this.perspectiveTransform[13] = renderState.perspectiveTransform[13];\r\n        this.perspectiveTransform[14] = renderState.perspectiveTransform[14];\r\n        this.perspectiveTransform[15] = renderState.perspectiveTransform[15];\r\n    }\r\n\r\n    if (renderState.viewDirty || renderState.perspectiveDirty) {\r\n        math.multiply(this._VPtransform, this.perspectiveTransform, renderState.viewTransform);\r\n        this._root.element.style[TRANSFORM] = this._stringifyMatrix(this._VPtransform);\r\n    }\r\n};\r\n\r\n\r\n/**\r\n * Internal helper function used for ensuring that a path is currently loaded.\r\n *\r\n * @method\r\n * @private\r\n *\r\n * @return {undefined} undefined\r\n */\r\nDOMRenderer.prototype._assertPathLoaded = function _asserPathLoaded() {\r\n    if (!this._path) throw new Error('path not loaded');\r\n};\r\n\r\n/**\r\n * Internal helper function used for ensuring that a parent is currently loaded.\r\n *\r\n * @method\r\n * @private\r\n *\r\n * @return {undefined} undefined\r\n */\r\nDOMRenderer.prototype._assertParentLoaded = function _assertParentLoaded() {\r\n    if (!this._parent) throw new Error('parent not loaded');\r\n};\r\n\r\n/**\r\n * Internal helper function used for ensuring that children are currently\r\n * loaded.\r\n *\r\n * @method\r\n * @private\r\n *\r\n * @return {undefined} undefined\r\n */\r\nDOMRenderer.prototype._assertChildrenLoaded = function _assertChildrenLoaded() {\r\n    if (!this._children) throw new Error('children not loaded');\r\n};\r\n\r\n/**\r\n * Internal helper function used for ensuring that a target is currently loaded.\r\n *\r\n * @method  _assertTargetLoaded\r\n *\r\n * @return {undefined} undefined\r\n */\r\nDOMRenderer.prototype._assertTargetLoaded = function _assertTargetLoaded() {\r\n    if (!this._target) throw new Error('No target loaded');\r\n};\r\n\r\n/**\r\n * Finds and sets the parent of the currently loaded element (path).\r\n *\r\n * @method\r\n * @private\r\n *\r\n * @return {ElementCache} Parent element.\r\n */\r\nDOMRenderer.prototype.findParent = function findParent () {\r\n    this._assertPathLoaded();\r\n\r\n    var path = this._path;\r\n    var parent;\r\n\r\n    while (!parent && path.length) {\r\n        path = path.substring(0, path.lastIndexOf('/'));\r\n        parent = this._elements[path];\r\n    }\r\n\r\n    this._parent = parent;\r\n    return parent;\r\n};\r\n\r\n/**\r\n * Used for determining the target loaded under the current path.\r\n *\r\n * @method\r\n * @deprecated\r\n *\r\n * @return {ElementCache|undefined} Element loaded under defined path.\r\n */\r\nDOMRenderer.prototype.findTarget = function findTarget() {\r\n    this._target = this._elements[this._path];\r\n    return this._target;\r\n};\r\n\r\n/**\r\n * Loads the passed in path into the DOMRenderer.\r\n *\r\n * @method\r\n *\r\n * @param {String} path Path to be loaded\r\n *\r\n * @return {String} Loaded path\r\n */\r\nDOMRenderer.prototype.loadPath = function loadPath (path) {\r\n    this._path = path;\r\n    this._target = this._elements[this._path];\r\n    return this._path;\r\n};\r\n\r\n/**\r\n * Finds children of a parent element that are descendents of a inserted element in the scene\r\n * graph. Appends those children to the inserted element.\r\n *\r\n * @method resolveChildren\r\n * @return {void}\r\n *\r\n * @param {HTMLElement} element the inserted element\r\n * @param {HTMLElement} parent the parent of the inserted element\r\n */\r\nDOMRenderer.prototype.resolveChildren = function resolveChildren (element, parent) {\r\n    var i = 0;\r\n    var childNode;\r\n    var path = this._path;\r\n    var childPath;\r\n\r\n    while ((childNode = parent.childNodes[i])) {\r\n        if (!childNode.dataset) {\r\n            i++;\r\n            continue;\r\n        }\r\n        childPath = childNode.dataset.faPath;\r\n        if (!childPath) {\r\n            i++;\r\n            continue;\r\n        }\r\n        if (PathUtils.isDescendentOf(childPath, path)) element.appendChild(childNode);\r\n        else i++;\r\n    }\r\n};\r\n\r\n/**\r\n * Inserts a DOMElement at the currently loaded path, assuming no target is\r\n * loaded. Only one DOMElement can be associated with each path.\r\n *\r\n * @method\r\n *\r\n * @param {String} tagName Tag name (capitalization will be normalized).\r\n *\r\n * @return {undefined} undefined\r\n */\r\nDOMRenderer.prototype.insertEl = function insertEl (tagName) {\r\n\r\n    this.findParent();\r\n\r\n    this._assertParentLoaded();\r\n\r\n    if (this._parent.void)\r\n        throw new Error(\r\n            this._parent.path + ' is a void element. ' +\r\n            'Void elements are not allowed to have children.'\r\n        );\r\n\r\n    if (!this._target) this._target = new ElementCache(document.createElement(tagName), this._path);\r\n\r\n    var el = this._target.element;\r\n    var parent = this._parent.element;\r\n\r\n    this.resolveChildren(el, parent);\r\n\r\n    parent.appendChild(el);\r\n    this._elements[this._path] = this._target;\r\n\r\n    this._insertElCallbackStore.trigger(this._path, this._target);\r\n\r\n};\r\n\r\n\r\n/**\r\n * Sets a property on the currently loaded target.\r\n *\r\n * @method\r\n *\r\n * @param {String} name Property name (e.g. background, color, font)\r\n * @param {String} value Proprty value (e.g. black, 20px)\r\n *\r\n * @return {undefined} undefined\r\n */\r\nDOMRenderer.prototype.setProperty = function setProperty (name, value) {\r\n    this._assertTargetLoaded();\r\n    this._target.element.style[name] = value;\r\n};\r\n\r\n\r\n/**\r\n * Sets the size of the currently loaded target.\r\n * Removes any explicit sizing constraints when passed in `false`\r\n * (\"true-sizing\").\r\n *\r\n * Invoking setSize is equivalent to a manual invocation of `setWidth` followed\r\n * by `setHeight`.\r\n *\r\n * @method\r\n *\r\n * @param {Number|false} width   Width to be set.\r\n * @param {Number|false} height  Height to be set.\r\n *\r\n * @return {undefined} undefined\r\n */\r\nDOMRenderer.prototype.setSize = function setSize (width, height) {\r\n    this._assertTargetLoaded();\r\n\r\n    this.setWidth(width);\r\n    this.setHeight(height);\r\n};\r\n\r\n/**\r\n * Sets the width of the currently loaded ElementCache.\r\n *\r\n * @method\r\n *\r\n * @param  {Number|false} width     The explicit width to be set on the\r\n *                                  ElementCache's target (and content) element.\r\n *                                  `false` removes any explicit sizing\r\n *                                  constraints from the underlying DOM\r\n *                                  Elements.\r\n *\r\n * @return {undefined} undefined\r\n */\r\nDOMRenderer.prototype.setWidth = function setWidth(width) {\r\n    this._assertTargetLoaded();\r\n\r\n    var contentWrapper = this._target.content;\r\n\r\n    if (width === false) {\r\n        this._target.explicitWidth = true;\r\n        if (contentWrapper) contentWrapper.style.width = '';\r\n        width = contentWrapper ? contentWrapper.offsetWidth : 0;\r\n        this._target.element.style.width = width + 'px';\r\n    }\r\n    else {\r\n        this._target.explicitWidth = false;\r\n        if (contentWrapper) contentWrapper.style.width = width + 'px';\r\n        this._target.element.style.width = width + 'px';\r\n    }\r\n\r\n    this._target.size[0] = width;\r\n};\r\n\r\n/**\r\n * Sets the height of the currently loaded ElementCache.\r\n *\r\n * @method  setHeight\r\n *\r\n * @param  {Number|false} height    The explicit height to be set on the\r\n *                                  ElementCache's target (and content) element.\r\n *                                  `false` removes any explicit sizing\r\n *                                  constraints from the underlying DOM\r\n *                                  Elements.\r\n *\r\n * @return {undefined} undefined\r\n */\r\nDOMRenderer.prototype.setHeight = function setHeight(height) {\r\n    this._assertTargetLoaded();\r\n\r\n    var contentWrapper = this._target.content;\r\n\r\n    if (height === false) {\r\n        this._target.explicitHeight = true;\r\n        if (contentWrapper) contentWrapper.style.height = '';\r\n        height = contentWrapper ? contentWrapper.offsetHeight : 0;\r\n        this._target.element.style.height = height + 'px';\r\n    }\r\n    else {\r\n        this._target.explicitHeight = false;\r\n        if (contentWrapper) contentWrapper.style.height = height + 'px';\r\n        this._target.element.style.height = height + 'px';\r\n    }\r\n\r\n    this._target.size[1] = height;\r\n};\r\n\r\n/**\r\n * Sets an attribute on the currently loaded target.\r\n *\r\n * @method\r\n *\r\n * @param {String} name Attribute name (e.g. href)\r\n * @param {String} value Attribute value (e.g. http://famous.org)\r\n *\r\n * @return {undefined} undefined\r\n */\r\nDOMRenderer.prototype.setAttribute = function setAttribute(name, value) {\r\n    this._assertTargetLoaded();\r\n    this._target.element.setAttribute(name, value);\r\n    if (name ===\"value\")\r\n        this._target.element.value = value;\r\n};\r\n\r\n/**\r\n * Sets the `innerHTML` content of the currently loaded target.\r\n *\r\n * @method\r\n *\r\n * @param {String} content Content to be set as `innerHTML`\r\n *\r\n * @return {undefined} undefined\r\n */\r\nDOMRenderer.prototype.setContent = function setContent(content) {\r\n    this._assertTargetLoaded();\r\n\r\n    if (this._target.formElement) {\r\n        this._target.element.value = content;\r\n    }\r\n    else {\r\n        if (!this._target.content) {\r\n            this._target.content = document.createElement('div');\r\n            this._target.content.classList.add('famous-dom-element-content');\r\n            this._target.element.insertBefore(\r\n                this._target.content,\r\n                this._target.element.firstChild\r\n            );\r\n        }\r\n        this._target.content.innerHTML = content;\r\n    }\r\n\r\n\r\n    this.setSize(\r\n        this._target.explicitWidth ? false : this._target.size[0],\r\n        this._target.explicitHeight ? false : this._target.size[1]\r\n    );\r\n};\r\n\r\n\r\n/**\r\n * Sets the passed in transform matrix (world space). Inverts the parent's world\r\n * transform.\r\n *\r\n * @method\r\n *\r\n * @param {Float32Array} transform The transform for the loaded DOM Element in world space\r\n *\r\n * @return {undefined} undefined\r\n */\r\nDOMRenderer.prototype.setMatrix = function setMatrix (transform) {\r\n    this._assertTargetLoaded();\r\n    this._target.element.style[TRANSFORM] = this._stringifyMatrix(transform);\r\n};\r\n\r\n\r\n/**\r\n * Adds a class to the classList associated with the currently loaded target.\r\n *\r\n * @method\r\n *\r\n * @param {String} domClass Class name to be added to the current target.\r\n *\r\n * @return {undefined} undefined\r\n */\r\nDOMRenderer.prototype.addClass = function addClass(domClass) {\r\n    this._assertTargetLoaded();\r\n    this._target.element.classList.add(domClass);\r\n};\r\n\r\n\r\n/**\r\n * Removes a class from the classList associated with the currently loaded\r\n * target.\r\n *\r\n * @method\r\n *\r\n * @param {String} domClass Class name to be removed from currently loaded target.\r\n *\r\n * @return {undefined} undefined\r\n */\r\nDOMRenderer.prototype.removeClass = function removeClass(domClass) {\r\n    this._assertTargetLoaded();\r\n    this._target.element.classList.remove(domClass);\r\n};\r\n\r\n\r\n/**\r\n * Stringifies the passed in matrix for setting the `transform` property.\r\n *\r\n * @method  _stringifyMatrix\r\n * @private\r\n *\r\n * @param {Array} m    Matrix as an array or array-like object.\r\n * @return {String}     Stringified matrix as `matrix3d`-property.\r\n */\r\nDOMRenderer.prototype._stringifyMatrix = function _stringifyMatrix(m) {\r\n    var r = 'matrix3d(';\r\n\r\n    r += (m[0] < 0.000001 && m[0] > -0.000001) ? '0,' : m[0] + ',';\r\n    r += (m[1] < 0.000001 && m[1] > -0.000001) ? '0,' : m[1] + ',';\r\n    r += (m[2] < 0.000001 && m[2] > -0.000001) ? '0,' : m[2] + ',';\r\n    r += (m[3] < 0.000001 && m[3] > -0.000001) ? '0,' : m[3] + ',';\r\n    r += (m[4] < 0.000001 && m[4] > -0.000001) ? '0,' : m[4] + ',';\r\n    r += (m[5] < 0.000001 && m[5] > -0.000001) ? '0,' : m[5] + ',';\r\n    r += (m[6] < 0.000001 && m[6] > -0.000001) ? '0,' : m[6] + ',';\r\n    r += (m[7] < 0.000001 && m[7] > -0.000001) ? '0,' : m[7] + ',';\r\n    r += (m[8] < 0.000001 && m[8] > -0.000001) ? '0,' : m[8] + ',';\r\n    r += (m[9] < 0.000001 && m[9] > -0.000001) ? '0,' : m[9] + ',';\r\n    r += (m[10] < 0.000001 && m[10] > -0.000001) ? '0,' : m[10] + ',';\r\n    r += (m[11] < 0.000001 && m[11] > -0.000001) ? '0,' : m[11] + ',';\r\n    r += (m[12] < 0.000001 && m[12] > -0.000001) ? '0,' : m[12] + ',';\r\n    r += (m[13] < 0.000001 && m[13] > -0.000001) ? '0,' : m[13] + ',';\r\n    r += (m[14] < 0.000001 && m[14] > -0.000001) ? '0,' : m[14] + ',';\r\n\r\n    r += m[15] + ')';\r\n    return r;\r\n};\r\n\r\n/**\r\n * Registers a function to be executed when a new element is being inserted at\r\n * the specified path.\r\n *\r\n * @method\r\n *\r\n * @param  {String}   path      Path at which to listen for element insertion.\r\n * @param  {Function} callback  Function to be executed when an insertion\r\n *                              occurs.\r\n * @return {DOMRenderer}        this\r\n */\r\nDOMRenderer.prototype.onInsertEl = function onInsertEl(path, callback) {\r\n    this._insertElCallbackStore.on(path, callback);\r\n    return this;\r\n};\r\n\r\n/**\r\n * Deregisters a listener function to be no longer executed on future element\r\n * insertions at the specified path.\r\n *\r\n * @method\r\n *\r\n * @param  {String}   path      Path at which the listener function has been\r\n *                              registered.\r\n * @param  {Function} callback  Callback function to be deregistered.\r\n * @return {DOMRenderer}        this\r\n */\r\nDOMRenderer.prototype.offInsertEl = function offInsertEl(path, callback) {\r\n    this._insertElCallbackStore.off(path, callback);\r\n    return this;\r\n};\r\n\r\n/**\r\n * Registers an event handler to be triggered as soon as an element at the\r\n * specified path is being removed.\r\n *\r\n * @method\r\n *\r\n * @param  {String}   path      Path at which to listen for the removal of an\r\n *                              element.\r\n * @param  {Function} callback  Function to be executed when an element is\r\n *                              being removed at the specified path.\r\n * @return {DOMRenderer}        this\r\n */\r\nDOMRenderer.prototype.onRemoveEl = function onRemoveEl(path, callback) {\r\n    this._removeElCallbackStore.on(path, callback);\r\n    return this;\r\n};\r\n\r\n/**\r\n * Deregisters a listener function to be no longer executed when an element is\r\n * being removed from the specified path.\r\n *\r\n * @method\r\n *\r\n * @param  {String}   path      Path at which the listener function has been\r\n *                              registered.\r\n * @param  {Function} callback  Callback function to be deregistered.\r\n * @return {DOMRenderer}        this\r\n */\r\nDOMRenderer.prototype.offRemoveEl = function offRemoveEl(path, callback) {\r\n    this._removeElCallbackStore.off(path, callback);\r\n    return this;\r\n};\r\n\r\nmodule.exports = DOMRenderer;\r\n\n},{\"../core/Path\":5,\"../utilities/CallbackStore\":28,\"../utilities/vendorPrefix\":32,\"./ElementCache\":7,\"./Math\":8,\"./events/EventMap\":12}],7:[function(require,module,exports){\n/**\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2015 Famous Industries Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n\r\n'use strict';\r\n\r\nvar VoidElements = require('./VoidElements');\r\n\r\n/**\r\n * ElementCache is being used for keeping track of an element's DOM Element,\r\n * path, world transform, inverted parent, final transform (as being used for\r\n * setting the actual `transform`-property) and post render size (final size as\r\n * being rendered to the DOM).\r\n *\r\n * @class ElementCache\r\n *\r\n * @param {Element} element DOMElement\r\n * @param {String} path Path used for uniquely identifying the location in the\r\n *                      scene graph.\r\n */\r\nfunction ElementCache (element, path) {\r\n    this.tagName = element.tagName.toLowerCase();\r\n    this.void = VoidElements[this.tagName];\r\n\r\n    var constructor = element.constructor;\r\n\r\n    this.formElement = constructor === HTMLInputElement ||\r\n        constructor === HTMLTextAreaElement ||\r\n        constructor === HTMLSelectElement;\r\n\r\n    this.element = element;\r\n    this.path = path;\r\n    this.content = null;\r\n    this.size = new Int16Array(3);\r\n    this.explicitHeight = false;\r\n    this.explicitWidth = false;\r\n    this.postRenderSize = new Float32Array(2);\r\n    this.listeners = {};\r\n    this.preventDefault = {};\r\n    this.subscribe = {};\r\n}\r\n\r\nmodule.exports = ElementCache;\r\n\n},{\"./VoidElements\":9}],8:[function(require,module,exports){\n/**\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2015 Famous Industries Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n\r\n'use strict';\r\n\r\n/**\r\n * A method for inverting a transform matrix\r\n *\r\n * @method\r\n *\r\n * @param {Array} out array to store the return of the inversion\r\n * @param {Array} a transform matrix to inverse\r\n *\r\n * @return {Array} out\r\n *   output array that is storing the transform matrix\r\n */\r\nfunction invert (out, a) {\r\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\r\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\r\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\r\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\r\n\r\n        b00 = a00 * a11 - a01 * a10,\r\n        b01 = a00 * a12 - a02 * a10,\r\n        b02 = a00 * a13 - a03 * a10,\r\n        b03 = a01 * a12 - a02 * a11,\r\n        b04 = a01 * a13 - a03 * a11,\r\n        b05 = a02 * a13 - a03 * a12,\r\n        b06 = a20 * a31 - a21 * a30,\r\n        b07 = a20 * a32 - a22 * a30,\r\n        b08 = a20 * a33 - a23 * a30,\r\n        b09 = a21 * a32 - a22 * a31,\r\n        b10 = a21 * a33 - a23 * a31,\r\n        b11 = a22 * a33 - a23 * a32,\r\n\r\n        // Calculate the determinant\r\n        det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n    if (!det) {\r\n        return null;\r\n    }\r\n    det = 1.0 / det;\r\n\r\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n    out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n    out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n    out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\r\n    out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n    out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n    out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n    out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\r\n    out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n    out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n    out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n    out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\r\n    out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\r\n    out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\r\n    out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\r\n    out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\r\n\r\n    return out;\r\n}\r\n\r\n/**\r\n * A method for multiplying two matricies\r\n *\r\n * @method\r\n *\r\n * @param {Array} out array to store the return of the multiplication\r\n * @param {Array} a transform matrix to multiply\r\n * @param {Array} b transform matrix to multiply\r\n *\r\n * @return {Array} out\r\n *   output array that is storing the transform matrix\r\n */\r\nfunction multiply (out, a, b) {\r\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\r\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\r\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\r\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\r\n\r\n        b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3],\r\n        b4 = b[4], b5 = b[5], b6 = b[6], b7 = b[7],\r\n        b8 = b[8], b9 = b[9], b10 = b[10], b11 = b[11],\r\n        b12 = b[12], b13 = b[13], b14 = b[14], b15 = b[15];\r\n\r\n    var changed = false;\r\n    var out0, out1, out2, out3;\r\n\r\n    out0 = b0*a00 + b1*a10 + b2*a20 + b3*a30;\r\n    out1 = b0*a01 + b1*a11 + b2*a21 + b3*a31;\r\n    out2 = b0*a02 + b1*a12 + b2*a22 + b3*a32;\r\n    out3 = b0*a03 + b1*a13 + b2*a23 + b3*a33;\r\n\r\n    changed = changed ?\r\n              changed : out0 === out[0] ||\r\n                        out1 === out[1] ||\r\n                        out2 === out[2] ||\r\n                        out3 === out[3];\r\n\r\n    out[0] = out0;\r\n    out[1] = out1;\r\n    out[2] = out2;\r\n    out[3] = out3;\r\n\r\n    b0 = b4; b1 = b5; b2 = b6; b3 = b7;\r\n    out0 = b0*a00 + b1*a10 + b2*a20 + b3*a30;\r\n    out1 = b0*a01 + b1*a11 + b2*a21 + b3*a31;\r\n    out2 = b0*a02 + b1*a12 + b2*a22 + b3*a32;\r\n    out3 = b0*a03 + b1*a13 + b2*a23 + b3*a33;\r\n\r\n    changed = changed ?\r\n              changed : out0 === out[4] ||\r\n                        out1 === out[5] ||\r\n                        out2 === out[6] ||\r\n                        out3 === out[7];\r\n\r\n    out[4] = out0;\r\n    out[5] = out1;\r\n    out[6] = out2;\r\n    out[7] = out3;\r\n\r\n    b0 = b8; b1 = b9; b2 = b10; b3 = b11;\r\n    out0 = b0*a00 + b1*a10 + b2*a20 + b3*a30;\r\n    out1 = b0*a01 + b1*a11 + b2*a21 + b3*a31;\r\n    out2 = b0*a02 + b1*a12 + b2*a22 + b3*a32;\r\n    out3 = b0*a03 + b1*a13 + b2*a23 + b3*a33;\r\n\r\n    changed = changed ?\r\n              changed : out0 === out[8] ||\r\n                        out1 === out[9] ||\r\n                        out2 === out[10] ||\r\n                        out3 === out[11];\r\n\r\n    out[8] = out0;\r\n    out[9] = out1;\r\n    out[10] = out2;\r\n    out[11] = out3;\r\n\r\n    b0 = b12; b1 = b13; b2 = b14; b3 = b15;\r\n    out0 = b0*a00 + b1*a10 + b2*a20 + b3*a30;\r\n    out1 = b0*a01 + b1*a11 + b2*a21 + b3*a31;\r\n    out2 = b0*a02 + b1*a12 + b2*a22 + b3*a32;\r\n    out3 = b0*a03 + b1*a13 + b2*a23 + b3*a33;\r\n\r\n    changed = changed ?\r\n              changed : out0 === out[12] ||\r\n                        out1 === out[13] ||\r\n                        out2 === out[14] ||\r\n                        out3 === out[15];\r\n\r\n    out[12] = out0;\r\n    out[13] = out1;\r\n    out[14] = out2;\r\n    out[15] = out3;\r\n\r\n    return out;\r\n}\r\n\r\nmodule.exports = {\r\n    multiply: multiply,\r\n    invert: invert\r\n};\r\n\n},{}],9:[function(require,module,exports){\n/**\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2015 Famous Industries Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n\r\n'use strict';\r\n\r\n/**\r\n * Map of void elements as defined by the\r\n * [HTML5 spec](http://www.w3.org/TR/html5/syntax.html#elements-0).\r\n *\r\n * @type {Object}\r\n */\r\nvar VoidElements = {\r\n    area  : true,\r\n    base  : true,\r\n    br    : true,\r\n    col   : true,\r\n    embed : true,\r\n    hr    : true,\r\n    img   : true,\r\n    input : true,\r\n    keygen: true,\r\n    link  : true,\r\n    meta  : true,\r\n    param : true,\r\n    source: true,\r\n    track : true,\r\n    wbr   : true\r\n};\r\n\r\nmodule.exports = VoidElements;\r\n\n},{}],10:[function(require,module,exports){\n/**\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2015 Famous Industries Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n\r\n'use strict';\r\n\r\nvar UIEvent = require('./UIEvent');\r\n\r\n/**\r\n * See [UI Events (formerly DOM Level 3 Events)](http://www.w3.org/TR/2015/WD-uievents-20150428/#events-compositionevents).\r\n *\r\n * @class CompositionEvent\r\n * @augments UIEvent\r\n *\r\n * @param {Event} ev The native DOM event.\r\n */\r\nfunction CompositionEvent(ev) {\r\n    // [Constructor(DOMString typeArg, optional CompositionEventInit compositionEventInitDict)]\r\n    // interface CompositionEvent : UIEvent {\r\n    //     readonly    attribute DOMString data;\r\n    // };\r\n\r\n    UIEvent.call(this, ev);\r\n\r\n    /**\r\n     * @name CompositionEvent#data\r\n     * @type String\r\n     */\r\n    this.data = ev.data;\r\n}\r\n\r\nCompositionEvent.prototype = Object.create(UIEvent.prototype);\r\nCompositionEvent.prototype.constructor = CompositionEvent;\r\n\r\n/**\r\n * Return the name of the event type\r\n *\r\n * @method\r\n *\r\n * @return {String} Name of the event type\r\n */\r\nCompositionEvent.prototype.toString = function toString () {\r\n    return 'CompositionEvent';\r\n};\r\n\r\nmodule.exports = CompositionEvent;\r\n\n},{\"./UIEvent\":19}],11:[function(require,module,exports){\n/**\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2015 Famous Industries Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n\r\n'use strict';\r\n\r\n/**\r\n * The Event class is being used in order to normalize native DOM events.\r\n * Events need to be normalized in order to be serialized through the structured\r\n * cloning algorithm used by the `postMessage` method (Web Workers).\r\n *\r\n * Wrapping DOM events also has the advantage of providing a consistent\r\n * interface for interacting with DOM events across browsers by copying over a\r\n * subset of the exposed properties that is guaranteed to be consistent across\r\n * browsers.\r\n *\r\n * See [UI Events (formerly DOM Level 3 Events)](http://www.w3.org/TR/2015/WD-uievents-20150428/#interface-Event).\r\n *\r\n * @class Event\r\n *\r\n * @param {Event} ev The native DOM event.\r\n */\r\nfunction Event(ev) {\r\n    // [Constructor(DOMString type, optional EventInit eventInitDict),\r\n    //  Exposed=Window,Worker]\r\n    // interface Event {\r\n    //   readonly attribute DOMString type;\r\n    //   readonly attribute EventTarget? target;\r\n    //   readonly attribute EventTarget? currentTarget;\r\n\r\n    //   const unsigned short NONE = 0;\r\n    //   const unsigned short CAPTURING_PHASE = 1;\r\n    //   const unsigned short AT_TARGET = 2;\r\n    //   const unsigned short BUBBLING_PHASE = 3;\r\n    //   readonly attribute unsigned short eventPhase;\r\n\r\n    //   void stopPropagation();\r\n    //   void stopImmediatePropagation();\r\n\r\n    //   readonly attribute boolean bubbles;\r\n    //   readonly attribute boolean cancelable;\r\n    //   void preventDefault();\r\n    //   readonly attribute boolean defaultPrevented;\r\n\r\n    //   [Unforgeable] readonly attribute boolean isTrusted;\r\n    //   readonly attribute DOMTimeStamp timeStamp;\r\n\r\n    //   void initEvent(DOMString type, boolean bubbles, boolean cancelable);\r\n    // };\r\n\r\n    /**\r\n     * @name Event#type\r\n     * @type String\r\n     */\r\n    this.type = ev.type;\r\n\r\n    /**\r\n     * @name Event#defaultPrevented\r\n     * @type Boolean\r\n     */\r\n    this.defaultPrevented = ev.defaultPrevented;\r\n\r\n    /**\r\n     * @name Event#timeStamp\r\n     * @type Number\r\n     */\r\n    this.timeStamp = ev.timeStamp;\r\n\r\n\r\n    /**\r\n     * Used for exposing the current target's value.\r\n     *\r\n     * @name Event#value\r\n     * @type String\r\n     */\r\n    var targetConstructor = ev.target.constructor;\r\n    // TODO Support HTMLKeygenElement\r\n    if (\r\n        targetConstructor === HTMLInputElement ||\r\n        targetConstructor === HTMLTextAreaElement ||\r\n        targetConstructor === HTMLSelectElement\r\n    ) {\r\n        this.value = ev.target.value;\r\n\r\n        if( typeof ev.target.files !== 'undefined')\r\n            this.files = ev.target.files;\r\n    }\r\n    \r\n    \r\n}\r\n\r\n/**\r\n * Return the name of the event type\r\n *\r\n * @method\r\n *\r\n * @return {String} Name of the event type\r\n */\r\nEvent.prototype.toString = function toString () {\r\n    return 'Event';\r\n};\r\n\r\nmodule.exports = Event;\r\n\n},{}],12:[function(require,module,exports){\n/**\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2015 Famous Industries Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n\r\n'use strict';\r\n\r\nvar CompositionEvent = require('./CompositionEvent');\r\nvar Event = require('./Event');\r\nvar FocusEvent = require('./FocusEvent');\r\nvar InputEvent = require('./InputEvent');\r\nvar KeyboardEvent = require('./KeyboardEvent');\r\nvar ScrollEvent = require('./ScrollEvent');\r\nvar MouseEvent = require('./MouseEvent');\r\nvar TouchEvent = require('./TouchEvent');\r\nvar UIEvent = require('./UIEvent');\r\nvar WheelEvent = require('./WheelEvent');\r\n\r\n/**\r\n * A mapping of DOM events to the corresponding handlers\r\n *\r\n * @name EventMap\r\n * @type Object\r\n */\r\nvar EventMap = {\r\n    change                         : [Event, true],\r\n    submit                         : [Event, true],\r\n\r\n    // UI Events (http://www.w3.org/TR/uievents/)\r\n    abort                          : [Event, false],\r\n    beforeinput                    : [InputEvent, true],\r\n    blur                           : [FocusEvent, false],\r\n    click                          : [MouseEvent, true],\r\n    compositionend                 : [CompositionEvent, true],\r\n    compositionstart               : [CompositionEvent, true],\r\n    compositionupdate              : [CompositionEvent, true],\r\n    dblclick                       : [MouseEvent, true],\r\n    focus                          : [FocusEvent, false],\r\n    focusin                        : [FocusEvent, true],\r\n    focusout                       : [FocusEvent, true],\r\n    input                          : [InputEvent, true],\r\n    keydown                        : [KeyboardEvent, true],\r\n    keyup                          : [KeyboardEvent, true],\r\n    load                           : [Event, false],\r\n    mousedown                      : [MouseEvent, true],\r\n    mouseenter                     : [MouseEvent, false],\r\n    mouseleave                     : [MouseEvent, false],\r\n    animationiteration             : [UIEvent, false],\r\n    animationend                   : [UIEvent, false],\r\n    transitionend                  : [UIEvent, false],\r\n\r\n    // bubbles, but will be triggered very frequently\r\n    mousemove                      : [MouseEvent, false],\r\n\r\n    mouseout                       : [MouseEvent, true],\r\n    mouseover                      : [MouseEvent, true],\r\n    mouseup                        : [MouseEvent, true],\r\n    contextMenu                    : [MouseEvent, true],\r\n    resize                         : [UIEvent, false],\r\n\r\n    // might bubble\r\n    scroll                         : [ScrollEvent, false],\r\n\r\n    select                         : [Event, true],\r\n    unload                         : [Event, false],\r\n    wheel                          : [WheelEvent, true],\r\n\r\n    // Touch Events Extension (http://www.w3.org/TR/touch-events-extensions/)\r\n    touchcancel                    : [TouchEvent, true],\r\n    touchend                       : [TouchEvent, true],\r\n    touchmove                      : [TouchEvent, true],\r\n    touchstart                     : [TouchEvent, true]\r\n};\r\n\r\nmodule.exports = EventMap;\r\n\n},{\"./CompositionEvent\":10,\"./Event\":11,\"./FocusEvent\":13,\"./InputEvent\":14,\"./KeyboardEvent\":15,\"./MouseEvent\":16,\"./ScrollEvent\":17,\"./TouchEvent\":18,\"./UIEvent\":19,\"./WheelEvent\":20}],13:[function(require,module,exports){\n/**\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2015 Famous Industries Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n\r\n'use strict';\r\n\r\nvar UIEvent = require('./UIEvent');\r\n\r\n/**\r\n * See [UI Events (formerly DOM Level 3 Events)](http://www.w3.org/TR/2015/WD-uievents-20150428/#events-focusevent).\r\n *\r\n * @class FocusEvent\r\n * @augments UIEvent\r\n *\r\n * @param {Event} ev The native DOM event.\r\n */\r\nfunction FocusEvent(ev) {\r\n    // [Constructor(DOMString typeArg, optional FocusEventInit focusEventInitDict)]\r\n    // interface FocusEvent : UIEvent {\r\n    //     readonly    attribute EventTarget? relatedTarget;\r\n    // };\r\n\r\n    UIEvent.call(this, ev);\r\n}\r\n\r\nFocusEvent.prototype = Object.create(UIEvent.prototype);\r\nFocusEvent.prototype.constructor = FocusEvent;\r\n\r\n/**\r\n * Return the name of the event type\r\n *\r\n * @method\r\n *\r\n * @return {String} Name of the event type\r\n */\r\nFocusEvent.prototype.toString = function toString () {\r\n    return 'FocusEvent';\r\n};\r\n\r\nmodule.exports = FocusEvent;\r\n\n},{\"./UIEvent\":19}],14:[function(require,module,exports){\n/**\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2015 Famous Industries Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n\r\n'use strict';\r\n\r\nvar UIEvent = require('./UIEvent');\r\n\r\n/**\r\n * See [Input Events](http://w3c.github.io/editing-explainer/input-events.html#idl-def-InputEvent).\r\n *\r\n * @class InputEvent\r\n * @augments UIEvent\r\n *\r\n * @param {Event} ev The native DOM event.\r\n */\r\nfunction InputEvent(ev) {\r\n    // [Constructor(DOMString typeArg, optional InputEventInit inputEventInitDict)]\r\n    // interface InputEvent : UIEvent {\r\n    //     readonly    attribute DOMString inputType;\r\n    //     readonly    attribute DOMString data;\r\n    //     readonly    attribute boolean   isComposing;\r\n    //     readonly    attribute Range     targetRange;\r\n    // };\r\n\r\n    UIEvent.call(this, ev);\r\n\r\n    /**\r\n     * @name    InputEvent#inputType\r\n     * @type    String\r\n     */\r\n    this.inputType = ev.inputType;\r\n\r\n    /**\r\n     * @name    InputEvent#data\r\n     * @type    String\r\n     */\r\n    this.data = ev.data;\r\n\r\n    /**\r\n     * @name    InputEvent#isComposing\r\n     * @type    Boolean\r\n     */\r\n    this.isComposing = ev.isComposing;\r\n\r\n    /**\r\n     * **Limited browser support**.\r\n     *\r\n     * @name    InputEvent#targetRange\r\n     * @type    Boolean\r\n     */\r\n    this.targetRange = ev.targetRange;\r\n}\r\n\r\nInputEvent.prototype = Object.create(UIEvent.prototype);\r\nInputEvent.prototype.constructor = InputEvent;\r\n\r\n/**\r\n * Return the name of the event type\r\n *\r\n * @method\r\n *\r\n * @return {String} Name of the event type\r\n */\r\nInputEvent.prototype.toString = function toString () {\r\n    return 'InputEvent';\r\n};\r\n\r\nmodule.exports = InputEvent;\r\n\n},{\"./UIEvent\":19}],15:[function(require,module,exports){\n/**\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2015 Famous Industries Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n\r\n'use strict';\r\n\r\nvar UIEvent = require('./UIEvent');\r\n\r\n/**\r\n * See [UI Events (formerly DOM Level 3 Events)](http://www.w3.org/TR/2015/WD-uievents-20150428/#events-keyboardevents).\r\n *\r\n * @class KeyboardEvent\r\n * @augments UIEvent\r\n *\r\n * @param {Event} ev The native DOM event.\r\n */\r\nfunction KeyboardEvent(ev) {\r\n    // [Constructor(DOMString typeArg, optional KeyboardEventInit keyboardEventInitDict)]\r\n    // interface KeyboardEvent : UIEvent {\r\n    //     // KeyLocationCode\r\n    //     const unsigned long DOM_KEY_LOCATION_STANDARD = 0x00;\r\n    //     const unsigned long DOM_KEY_LOCATION_LEFT = 0x01;\r\n    //     const unsigned long DOM_KEY_LOCATION_RIGHT = 0x02;\r\n    //     const unsigned long DOM_KEY_LOCATION_NUMPAD = 0x03;\r\n    //     readonly    attribute DOMString     key;\r\n    //     readonly    attribute DOMString     code;\r\n    //     readonly    attribute unsigned long location;\r\n    //     readonly    attribute boolean       ctrlKey;\r\n    //     readonly    attribute boolean       shiftKey;\r\n    //     readonly    attribute boolean       altKey;\r\n    //     readonly    attribute boolean       metaKey;\r\n    //     readonly    attribute boolean       repeat;\r\n    //     readonly    attribute boolean       isComposing;\r\n    //     boolean getModifierState (DOMString keyArg);\r\n    // };\r\n\r\n    UIEvent.call(this, ev);\r\n\r\n    /**\r\n     * @name KeyboardEvent#DOM_KEY_LOCATION_STANDARD\r\n     * @type Number\r\n     */\r\n    this.DOM_KEY_LOCATION_STANDARD = 0x00;\r\n\r\n    /**\r\n     * @name KeyboardEvent#DOM_KEY_LOCATION_LEFT\r\n     * @type Number\r\n     */\r\n    this.DOM_KEY_LOCATION_LEFT = 0x01;\r\n\r\n    /**\r\n     * @name KeyboardEvent#DOM_KEY_LOCATION_RIGHT\r\n     * @type Number\r\n     */\r\n    this.DOM_KEY_LOCATION_RIGHT = 0x02;\r\n\r\n    /**\r\n     * @name KeyboardEvent#DOM_KEY_LOCATION_NUMPAD\r\n     * @type Number\r\n     */\r\n    this.DOM_KEY_LOCATION_NUMPAD = 0x03;\r\n\r\n    /**\r\n     * @name KeyboardEvent#key\r\n     * @type String\r\n     */\r\n    this.key = ev.key;\r\n\r\n    /**\r\n     * @name KeyboardEvent#code\r\n     * @type String\r\n     */\r\n    this.code = ev.code;\r\n\r\n    /**\r\n     * @name KeyboardEvent#location\r\n     * @type Number\r\n     */\r\n    this.location = ev.location;\r\n\r\n    /**\r\n     * @name KeyboardEvent#ctrlKey\r\n     * @type Boolean\r\n     */\r\n    this.ctrlKey = ev.ctrlKey;\r\n\r\n    /**\r\n     * @name KeyboardEvent#shiftKey\r\n     * @type Boolean\r\n     */\r\n    this.shiftKey = ev.shiftKey;\r\n\r\n    /**\r\n     * @name KeyboardEvent#altKey\r\n     * @type Boolean\r\n     */\r\n    this.altKey = ev.altKey;\r\n\r\n    /**\r\n     * @name KeyboardEvent#metaKey\r\n     * @type Boolean\r\n     */\r\n    this.metaKey = ev.metaKey;\r\n\r\n    /**\r\n     * @name KeyboardEvent#repeat\r\n     * @type Boolean\r\n     */\r\n    this.repeat = ev.repeat;\r\n\r\n    /**\r\n     * @name KeyboardEvent#isComposing\r\n     * @type Boolean\r\n     */\r\n    this.isComposing = ev.isComposing;\r\n\r\n    /**\r\n     * @name KeyboardEvent#keyCode\r\n     * @type String\r\n     * @deprecated\r\n     */\r\n    this.keyCode = ev.keyCode;\r\n}\r\n\r\nKeyboardEvent.prototype = Object.create(UIEvent.prototype);\r\nKeyboardEvent.prototype.constructor = KeyboardEvent;\r\n\r\n/**\r\n * Return the name of the event type\r\n *\r\n * @method\r\n *\r\n * @return {String} Name of the event type\r\n */\r\nKeyboardEvent.prototype.toString = function toString () {\r\n    return 'KeyboardEvent';\r\n};\r\n\r\nmodule.exports = KeyboardEvent;\r\n\n},{\"./UIEvent\":19}],16:[function(require,module,exports){\n/**\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2015 Famous Industries Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n\r\n'use strict';\r\n\r\nvar UIEvent = require('./UIEvent');\r\n\r\n/**\r\n * See [UI Events (formerly DOM Level 3 Events)](http://www.w3.org/TR/2015/WD-uievents-20150428/#events-mouseevents).\r\n *\r\n * @class KeyboardEvent\r\n * @augments UIEvent\r\n *\r\n * @param {Event} ev The native DOM event.\r\n */\r\nfunction MouseEvent(ev) {\r\n    // [Constructor(DOMString typeArg, optional MouseEventInit mouseEventInitDict)]\r\n    // interface MouseEvent : UIEvent {\r\n    //     readonly    attribute long           screenX;\r\n    //     readonly    attribute long           screenY;\r\n    //     readonly    attribute long           clientX;\r\n    //     readonly    attribute long           clientY;\r\n    //     readonly    attribute boolean        ctrlKey;\r\n    //     readonly    attribute boolean        shiftKey;\r\n    //     readonly    attribute boolean        altKey;\r\n    //     readonly    attribute boolean        metaKey;\r\n    //     readonly    attribute short          button;\r\n    //     readonly    attribute EventTarget?   relatedTarget;\r\n    //     // Introduced in this specification\r\n    //     readonly    attribute unsigned short buttons;\r\n    //     boolean getModifierState (DOMString keyArg);\r\n    // };\r\n\r\n    UIEvent.call(this, ev);\r\n\r\n    /**\r\n     * @name MouseEvent#screenX\r\n     * @type Number\r\n     */\r\n    this.screenX = ev.screenX;\r\n\r\n    /**\r\n     * @name MouseEvent#screenY\r\n     * @type Number\r\n     */\r\n    this.screenY = ev.screenY;\r\n\r\n    /**\r\n     * @name MouseEvent#clientX\r\n     * @type Number\r\n     */\r\n    this.clientX = ev.clientX;\r\n\r\n    /**\r\n     * @name MouseEvent#clientY\r\n     * @type Number\r\n     */\r\n    this.clientY = ev.clientY;\r\n\r\n    /**\r\n     * @name MouseEvent#ctrlKey\r\n     * @type Boolean\r\n     */\r\n    this.ctrlKey = ev.ctrlKey;\r\n\r\n    /**\r\n     * @name MouseEvent#shiftKey\r\n     * @type Boolean\r\n     */\r\n    this.shiftKey = ev.shiftKey;\r\n\r\n    /**\r\n     * @name MouseEvent#altKey\r\n     * @type Boolean\r\n     */\r\n    this.altKey = ev.altKey;\r\n\r\n    /**\r\n     * @name MouseEvent#metaKey\r\n     * @type Boolean\r\n     */\r\n    this.metaKey = ev.metaKey;\r\n\r\n    /**\r\n     * @type MouseEvent#button\r\n     * @type Number\r\n     */\r\n    this.button = ev.button;\r\n\r\n    /**\r\n     * @type MouseEvent#buttons\r\n     * @type Number\r\n     */\r\n    this.buttons = ev.buttons;\r\n\r\n    /**\r\n     * @type MouseEvent#pageX\r\n     * @type Number\r\n     */\r\n    this.pageX = ev.pageX;\r\n\r\n    /**\r\n     * @type MouseEvent#pageY\r\n     * @type Number\r\n     */\r\n    this.pageY = ev.pageY;\r\n\r\n    /**\r\n     * @type MouseEvent#x\r\n     * @type Number\r\n     */\r\n    this.x = ev.x;\r\n\r\n    /**\r\n     * @type MouseEvent#y\r\n     * @type Number\r\n     */\r\n    this.y = ev.y;\r\n\r\n    /**\r\n     * @type MouseEvent#offsetX\r\n     * @type Number\r\n     */\r\n    this.offsetX = ev.offsetX;\r\n\r\n    /**\r\n     * @type MouseEvent#offsetY\r\n     * @type Number\r\n     */\r\n    this.offsetY = ev.offsetY;\r\n}\r\n\r\nMouseEvent.prototype = Object.create(UIEvent.prototype);\r\nMouseEvent.prototype.constructor = MouseEvent;\r\n\r\n/**\r\n * Return the name of the event type\r\n *\r\n * @method\r\n *\r\n * @return {String} Name of the event type\r\n */\r\nMouseEvent.prototype.toString = function toString () {\r\n    return 'MouseEvent';\r\n};\r\n\r\nmodule.exports = MouseEvent;\r\n\n},{\"./UIEvent\":19}],17:[function(require,module,exports){\n'use strict';\r\n\r\nvar Event = require('./Event');\r\n\r\n/**\r\n * See [UI Events (formerly DOM Level 3 Events)](http://www.w3.org/TR/2015/WD-uievents-20150428).\r\n *\r\n * @class UIEvent\r\n * @augments Event\r\n *\r\n * @param  {Event} ev   The native DOM event.\r\n */\r\nfunction ScrollEvent(ev) {\r\n    // [Constructor(DOMString type, optional UIEventInit eventInitDict)]\r\n    // interface UIEvent : Event {\r\n    //     readonly    attribute Window? view;\r\n    //     readonly    attribute long    detail;\r\n    // };\r\n    Event.call(this, ev);\r\n    \r\n    \r\n    /**\r\n     * @name ScrollEvent#scrollTop\r\n     * @type Number\r\n     */\r\n    this.scrollTop = ev.target.scrollTop;\r\n\r\n    /**\r\n     * @name ScrollEvent#scrollLeft\r\n     * @type Number\r\n     */\r\n    this.scrollLeft =  ev.target.scrollLeft;\r\n\r\n    /**\r\n     * @name ScrollEvent#scrollHeight\r\n     * @type Number\r\n     */\r\n    this.scrollHeight = ev.target.scrollHeight;\r\n    /**\r\n     * @name ScrollEvent#detail\r\n     * @type Number\r\n     */\r\n    this.detail = ev.detail;\r\n}\r\n\r\nScrollEvent.prototype = Object.create(Event.prototype);\r\nScrollEvent.prototype.constructor = ScrollEvent;\r\n\r\n/**\r\n * Return the name of the event type\r\n *\r\n * @method\r\n *\r\n * @return {String} Name of the event type\r\n */\r\nScrollEvent.prototype.toString = function toString () {\r\n    return 'ScrollEvent';\r\n};\r\n\r\nmodule.exports = ScrollEvent;\r\n\n},{\"./Event\":11}],18:[function(require,module,exports){\n/**\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2015 Famous Industries Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n\r\n'use strict';\r\n\r\nvar UIEvent = require('./UIEvent');\r\n\r\nvar EMPTY_ARRAY = [];\r\n\r\n/**\r\n * See [Touch Interface](http://www.w3.org/TR/2013/REC-touch-events-20131010/#touch-interface).\r\n *\r\n * @class Touch\r\n * @private\r\n *\r\n * @param {Touch} touch The native Touch object.\r\n */\r\nfunction Touch(touch) {\r\n    // interface Touch {\r\n    //     readonly    attribute long        identifier;\r\n    //     readonly    attribute EventTarget target;\r\n    //     readonly    attribute double      screenX;\r\n    //     readonly    attribute double      screenY;\r\n    //     readonly    attribute double      clientX;\r\n    //     readonly    attribute double      clientY;\r\n    //     readonly    attribute double      pageX;\r\n    //     readonly    attribute double      pageY;\r\n    // };\r\n\r\n    /**\r\n     * @name Touch#identifier\r\n     * @type Number\r\n     */\r\n    this.identifier = touch.identifier;\r\n\r\n    /**\r\n     * @name Touch#screenX\r\n     * @type Number\r\n     */\r\n    this.screenX = touch.screenX;\r\n\r\n    /**\r\n     * @name Touch#screenY\r\n     * @type Number\r\n     */\r\n    this.screenY = touch.screenY;\r\n\r\n    /**\r\n     * @name Touch#clientX\r\n     * @type Number\r\n     */\r\n    this.clientX = touch.clientX;\r\n\r\n    /**\r\n     * @name Touch#clientY\r\n     * @type Number\r\n     */\r\n    this.clientY = touch.clientY;\r\n\r\n    /**\r\n     * @name Touch#pageX\r\n     * @type Number\r\n     */\r\n    this.pageX = touch.pageX;\r\n\r\n    /**\r\n     * @name Touch#pageY\r\n     * @type Number\r\n     */\r\n    this.pageY = touch.pageY;\r\n}\r\n\r\n\r\n/**\r\n * Normalizes the browser's native TouchList by converting it into an array of\r\n * normalized Touch objects.\r\n *\r\n * @method  cloneTouchList\r\n * @private\r\n *\r\n * @param  {TouchList} touchList    The native TouchList array.\r\n * @return {Array.<Touch>}          An array of normalized Touch objects.\r\n */\r\nfunction cloneTouchList(touchList) {\r\n    if (!touchList) return EMPTY_ARRAY;\r\n    // interface TouchList {\r\n    //     readonly    attribute unsigned long length;\r\n    //     getter Touch? item (unsigned long index);\r\n    // };\r\n\r\n    var touchListArray = [];\r\n    for (var i = 0; i < touchList.length; i++) {\r\n        touchListArray[i] = new Touch(touchList[i]);\r\n    }\r\n    return touchListArray;\r\n}\r\n\r\n/**\r\n * See [Touch Event Interface](http://www.w3.org/TR/2013/REC-touch-events-20131010/#touchevent-interface).\r\n *\r\n * @class TouchEvent\r\n * @augments UIEvent\r\n *\r\n * @param {Event} ev The native DOM event.\r\n */\r\nfunction TouchEvent(ev) {\r\n    // interface TouchEvent : UIEvent {\r\n    //     readonly    attribute TouchList touches;\r\n    //     readonly    attribute TouchList targetTouches;\r\n    //     readonly    attribute TouchList changedTouches;\r\n    //     readonly    attribute boolean   altKey;\r\n    //     readonly    attribute boolean   metaKey;\r\n    //     readonly    attribute boolean   ctrlKey;\r\n    //     readonly    attribute boolean   shiftKey;\r\n    // };\r\n    UIEvent.call(this, ev);\r\n\r\n    /**\r\n     * @name TouchEvent#touches\r\n     * @type Array.<Touch>\r\n     */\r\n    this.touches = cloneTouchList(ev.touches);\r\n\r\n    /**\r\n     * @name TouchEvent#targetTouches\r\n     * @type Array.<Touch>\r\n     */\r\n    this.targetTouches = cloneTouchList(ev.targetTouches);\r\n\r\n    /**\r\n     * @name TouchEvent#changedTouches\r\n     * @type TouchList\r\n     */\r\n    this.changedTouches = cloneTouchList(ev.changedTouches);\r\n\r\n    /**\r\n     * @name TouchEvent#altKey\r\n     * @type Boolean\r\n     */\r\n    this.altKey = ev.altKey;\r\n\r\n    /**\r\n     * @name TouchEvent#metaKey\r\n     * @type Boolean\r\n     */\r\n    this.metaKey = ev.metaKey;\r\n\r\n    /**\r\n     * @name TouchEvent#ctrlKey\r\n     * @type Boolean\r\n     */\r\n    this.ctrlKey = ev.ctrlKey;\r\n\r\n    /**\r\n     * @name TouchEvent#shiftKey\r\n     * @type Boolean\r\n     */\r\n    this.shiftKey = ev.shiftKey;\r\n}\r\n\r\nTouchEvent.prototype = Object.create(UIEvent.prototype);\r\nTouchEvent.prototype.constructor = TouchEvent;\r\n\r\n/**\r\n * Return the name of the event type\r\n *\r\n * @method\r\n *\r\n * @return {String} Name of the event type\r\n */\r\nTouchEvent.prototype.toString = function toString () {\r\n    return 'TouchEvent';\r\n};\r\n\r\nmodule.exports = TouchEvent;\r\n\n},{\"./UIEvent\":19}],19:[function(require,module,exports){\n/**\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2015 Famous Industries Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n\r\n'use strict';\r\n\r\nvar Event = require('./Event');\r\n\r\n/**\r\n * See [UI Events (formerly DOM Level 3 Events)](http://www.w3.org/TR/2015/WD-uievents-20150428).\r\n *\r\n * @class UIEvent\r\n * @augments Event\r\n *\r\n * @param  {Event} ev   The native DOM event.\r\n */\r\nfunction UIEvent(ev) {\r\n    // [Constructor(DOMString type, optional UIEventInit eventInitDict)]\r\n    // interface UIEvent : Event {\r\n    //     readonly    attribute Window? view;\r\n    //     readonly    attribute long    detail;\r\n    // };\r\n    Event.call(this, ev);\r\n\r\n    /**\r\n     * @name UIEvent#detail\r\n     * @type Number\r\n     */\r\n    this.detail = ev.detail;\r\n}\r\n\r\nUIEvent.prototype = Object.create(Event.prototype);\r\nUIEvent.prototype.constructor = UIEvent;\r\n\r\n/**\r\n * Return the name of the event type\r\n *\r\n * @method\r\n *\r\n * @return {String} Name of the event type\r\n */\r\nUIEvent.prototype.toString = function toString () {\r\n    return 'UIEvent';\r\n};\r\n\r\nmodule.exports = UIEvent;\r\n\n},{\"./Event\":11}],20:[function(require,module,exports){\n/**\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2015 Famous Industries Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n\r\n'use strict';\r\n\r\nvar MouseEvent = require('./MouseEvent');\r\n\r\n/**\r\n * See [UI Events (formerly DOM Level 3 Events)](http://www.w3.org/TR/2015/WD-uievents-20150428/#events-wheelevents).\r\n *\r\n * @class WheelEvent\r\n * @augments UIEvent\r\n *\r\n * @param {Event} ev The native DOM event.\r\n */\r\nfunction WheelEvent(ev) {\r\n    // [Constructor(DOMString typeArg, optional WheelEventInit wheelEventInitDict)]\r\n    // interface WheelEvent : MouseEvent {\r\n    //     // DeltaModeCode\r\n    //     const unsigned long DOM_DELTA_PIXEL = 0x00;\r\n    //     const unsigned long DOM_DELTA_LINE = 0x01;\r\n    //     const unsigned long DOM_DELTA_PAGE = 0x02;\r\n    //     readonly    attribute double        deltaX;\r\n    //     readonly    attribute double        deltaY;\r\n    //     readonly    attribute double        deltaZ;\r\n    //     readonly    attribute unsigned long deltaMode;\r\n    // };\r\n\r\n    MouseEvent.call(this, ev);\r\n\r\n    /**\r\n     * @name WheelEvent#DOM_DELTA_PIXEL\r\n     * @type Number\r\n     */\r\n    this.DOM_DELTA_PIXEL = 0x00;\r\n\r\n    /**\r\n     * @name WheelEvent#DOM_DELTA_LINE\r\n     * @type Number\r\n     */\r\n    this.DOM_DELTA_LINE = 0x01;\r\n\r\n    /**\r\n     * @name WheelEvent#DOM_DELTA_PAGE\r\n     * @type Number\r\n     */\r\n    this.DOM_DELTA_PAGE = 0x02;\r\n\r\n    /**\r\n     * @name WheelEvent#deltaX\r\n     * @type Number\r\n     */\r\n    this.deltaX = ev.deltaX;\r\n\r\n    /**\r\n     * @name WheelEvent#deltaY\r\n     * @type Number\r\n     */\r\n    this.deltaY = ev.deltaY;\r\n\r\n    /**\r\n     * @name WheelEvent#deltaZ\r\n     * @type Number\r\n     */\r\n    this.deltaZ = ev.deltaZ;\r\n\r\n    /**\r\n     * @name WheelEvent#deltaMode\r\n     * @type Number\r\n     */\r\n    this.deltaMode = ev.deltaMode;\r\n}\r\n\r\nWheelEvent.prototype = Object.create(MouseEvent.prototype);\r\nWheelEvent.prototype.constructor = WheelEvent;\r\n\r\n/**\r\n * Return the name of the event type\r\n *\r\n * @method\r\n *\r\n * @return {String} Name of the event type\r\n */\r\nWheelEvent.prototype.toString = function toString () {\r\n    return 'WheelEvent';\r\n};\r\n\r\nmodule.exports = WheelEvent;\r\n\n},{\"./MouseEvent\":16}],21:[function(require,module,exports){\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\r\n// http://my.opera.com/emoller/blog/2011/12/20/requestanimationframe-for-smart-er-animating\r\n// requestAnimationFrame polyfill by Erik Möller. fixes from Paul Irish and Tino Zijdel\r\n// MIT license\r\n\r\n'use strict';\r\n\r\nvar lastTime = 0;\r\nvar vendors = ['ms', 'moz', 'webkit', 'o'];\r\n\r\nvar rAF, cAF;\r\n\r\nif (typeof window === 'object') {\r\n    rAF = window.requestAnimationFrame;\r\n    cAF = window.cancelAnimationFrame || window.cancelRequestAnimationFrame;\r\n    for (var x = 0; x < vendors.length && !rAF; ++x) {\r\n        rAF = window[vendors[x] + 'RequestAnimationFrame'];\r\n        cAF = window[vendors[x] + 'CancelRequestAnimationFrame'] ||\r\n              window[vendors[x] + 'CancelAnimationFrame'];\r\n    }\r\n\r\n    if (rAF && !cAF) {\r\n        // cAF not supported.\r\n        // Fall back to setInterval for now (very rare).\r\n        rAF = null;\r\n    }\r\n}\r\n\r\nif (!rAF) {\r\n    var now = Date.now ? Date.now : function () {\r\n        return new Date().getTime();\r\n    };\r\n\r\n    rAF = function(callback) {\r\n        var currTime = now();\r\n        var timeToCall = Math.max(0, 16 - (currTime - lastTime));\r\n        var id = setTimeout(function () {\r\n            callback(currTime + timeToCall);\r\n        }, timeToCall);\r\n        lastTime = currTime + timeToCall;\r\n        return id;\r\n    };\r\n\r\n    cAF = function (id) {\r\n        clearTimeout(id);\r\n    };\r\n}\r\n\r\nvar animationFrame = {\r\n    /**\r\n     * Cross browser version of [requestAnimationFrame]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame}.\r\n     *\r\n     * Used by Engine in order to establish a render loop.\r\n     *\r\n     * If no (vendor prefixed version of) `requestAnimationFrame` is available,\r\n     * `setTimeout` will be used in order to emulate a render loop running at\r\n     * approximately 60 frames per second.\r\n     *\r\n     * @method  requestAnimationFrame\r\n     *\r\n     * @param   {Function}  callback function to be invoked on the next frame.\r\n     * @return  {Number}    requestId to be used to cancel the request using\r\n     *                      {@link cancelAnimationFrame}.\r\n     */\r\n    requestAnimationFrame: rAF,\r\n\r\n    /**\r\n     * Cross browser version of [cancelAnimationFrame]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/cancelAnimationFrame}.\r\n     *\r\n     * Cancels a previously using [requestAnimationFrame]{@link animationFrame#requestAnimationFrame}\r\n     * scheduled request.\r\n     *\r\n     * Used for immediately stopping the render loop within the Engine.\r\n     *\r\n     * @method  cancelAnimationFrame\r\n     *\r\n     * @param   {Number}    requestId of the scheduled callback function\r\n     *                      returned by [requestAnimationFrame]{@link animationFrame#requestAnimationFrame}.\r\n     */\r\n    cancelAnimationFrame: cAF\r\n};\r\n\r\nmodule.exports = animationFrame;\r\n\n},{}],22:[function(require,module,exports){\n/**\r\n * The MIT License (MIT)\r\n * \r\n * Copyright (c) 2015 Famous Industries Inc.\r\n * \r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n * \r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n * \r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n\r\n'use strict';\r\n\r\nmodule.exports = {\r\n    requestAnimationFrame: require('./animationFrame').requestAnimationFrame,\r\n    cancelAnimationFrame: require('./animationFrame').cancelAnimationFrame\r\n};\r\n\n},{\"./animationFrame\":21}],23:[function(require,module,exports){\n/**\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2015 Famous Industries Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n\r\n'use strict';\r\n\r\nvar polyfills = require('../polyfills');\r\nvar rAF = polyfills.requestAnimationFrame;\r\nvar cAF = polyfills.cancelAnimationFrame;\r\n\r\n/**\r\n * Boolean constant indicating whether the RequestAnimationFrameLoop has access\r\n * to the document. The document is being used in order to subscribe for\r\n * visibilitychange events used for normalizing the RequestAnimationFrameLoop\r\n * time when e.g. when switching tabs.\r\n *\r\n * @constant\r\n * @type {Boolean}\r\n */\r\nvar DOCUMENT_ACCESS = typeof document !== 'undefined';\r\n\r\nif (DOCUMENT_ACCESS) {\r\n    var VENDOR_HIDDEN, VENDOR_VISIBILITY_CHANGE;\r\n\r\n    // Opera 12.10 and Firefox 18 and later support\r\n    if (typeof document.hidden !== 'undefined') {\r\n        VENDOR_HIDDEN = 'hidden';\r\n        VENDOR_VISIBILITY_CHANGE = 'visibilitychange';\r\n    }\r\n    else if (typeof document.mozHidden !== 'undefined') {\r\n        VENDOR_HIDDEN = 'mozHidden';\r\n        VENDOR_VISIBILITY_CHANGE = 'mozvisibilitychange';\r\n    }\r\n    else if (typeof document.msHidden !== 'undefined') {\r\n        VENDOR_HIDDEN = 'msHidden';\r\n        VENDOR_VISIBILITY_CHANGE = 'msvisibilitychange';\r\n    }\r\n    else if (typeof document.webkitHidden !== 'undefined') {\r\n        VENDOR_HIDDEN = 'webkitHidden';\r\n        VENDOR_VISIBILITY_CHANGE = 'webkitvisibilitychange';\r\n    }\r\n}\r\n\r\n/**\r\n * RequestAnimationFrameLoop class used for updating objects on a frame-by-frame.\r\n * Synchronizes the `update` method invocations to the refresh rate of the\r\n * screen. Manages the `requestAnimationFrame`-loop by normalizing the passed in\r\n * timestamp when switching tabs.\r\n *\r\n * @class RequestAnimationFrameLoop\r\n */\r\nfunction RequestAnimationFrameLoop() {\r\n    var _this = this;\r\n\r\n    // References to objects to be updated on next frame.\r\n    this._updates = [];\r\n\r\n    this._looper = function(time) {\r\n        _this.loop(time);\r\n    };\r\n    this._time = 0;\r\n    this._stoppedAt = 0;\r\n    this._sleep = 0;\r\n\r\n    // Indicates whether the engine should be restarted when the tab/ window is\r\n    // being focused again (visibility change).\r\n    this._startOnVisibilityChange = true;\r\n\r\n    // requestId as returned by requestAnimationFrame function;\r\n    this._rAF = null;\r\n\r\n    this._sleepDiff = true;\r\n\r\n    // The engine is being started on instantiation.\r\n    // TODO(alexanderGugel)\r\n    this.start();\r\n\r\n    // The RequestAnimationFrameLoop supports running in a non-browser\r\n    // environment (e.g. Worker).\r\n    if (DOCUMENT_ACCESS) {\r\n        document.addEventListener(VENDOR_VISIBILITY_CHANGE, function() {\r\n            _this._onVisibilityChange();\r\n        });\r\n    }\r\n}\r\n\r\n/**\r\n * Handle the switching of tabs.\r\n *\r\n * @method\r\n * @private\r\n *\r\n * @return {undefined} undefined\r\n */\r\nRequestAnimationFrameLoop.prototype._onVisibilityChange = function _onVisibilityChange() {\r\n    if (document[VENDOR_HIDDEN]) {\r\n        this._onUnfocus();\r\n    }\r\n    else {\r\n        this._onFocus();\r\n    }\r\n};\r\n\r\n/**\r\n * Internal helper function to be invoked as soon as the window/ tab is being\r\n * focused after a visibiltiy change.\r\n *\r\n * @method\r\n * @private\r\n *\r\n * @return {undefined} undefined\r\n */\r\nRequestAnimationFrameLoop.prototype._onFocus = function _onFocus() {\r\n    if (this._startOnVisibilityChange) {\r\n        this._start();\r\n    }\r\n};\r\n\r\n/**\r\n * Internal helper function to be invoked as soon as the window/ tab is being\r\n * unfocused (hidden) after a visibiltiy change.\r\n *\r\n * @method  _onFocus\r\n * @private\r\n *\r\n * @return {undefined} undefined\r\n */\r\nRequestAnimationFrameLoop.prototype._onUnfocus = function _onUnfocus() {\r\n    this._stop();\r\n};\r\n\r\n/**\r\n * Starts the RequestAnimationFrameLoop. When switching to a differnt tab/\r\n * window (changing the visibiltiy), the engine will be retarted when switching\r\n * back to a visible state.\r\n *\r\n * @method\r\n *\r\n * @return {RequestAnimationFrameLoop} this\r\n */\r\nRequestAnimationFrameLoop.prototype.start = function start() {\r\n    if (!this._running) {\r\n        this._startOnVisibilityChange = true;\r\n        this._start();\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Internal version of RequestAnimationFrameLoop's start function, not affecting\r\n * behavior on visibilty change.\r\n *\r\n * @method\r\n * @private\r\n*\r\n * @return {undefined} undefined\r\n */\r\nRequestAnimationFrameLoop.prototype._start = function _start() {\r\n    this._running = true;\r\n    this._sleepDiff = true;\r\n    this._rAF = rAF(this._looper);\r\n};\r\n\r\n/**\r\n * Stops the RequestAnimationFrameLoop.\r\n *\r\n * @method\r\n * @private\r\n *\r\n * @return {RequestAnimationFrameLoop} this\r\n */\r\nRequestAnimationFrameLoop.prototype.stop = function stop() {\r\n    if (this._running) {\r\n        this._startOnVisibilityChange = false;\r\n        this._stop();\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Internal version of RequestAnimationFrameLoop's stop function, not affecting\r\n * behavior on visibilty change.\r\n *\r\n * @method\r\n * @private\r\n *\r\n * @return {undefined} undefined\r\n */\r\nRequestAnimationFrameLoop.prototype._stop = function _stop() {\r\n    this._running = false;\r\n    this._stoppedAt = this._time;\r\n\r\n    // Bug in old versions of Fx. Explicitly cancel.\r\n    cAF(this._rAF);\r\n};\r\n\r\n/**\r\n * Determines whether the RequestAnimationFrameLoop is currently running or not.\r\n *\r\n * @method\r\n *\r\n * @return {Boolean} boolean value indicating whether the\r\n * RequestAnimationFrameLoop is currently running or not\r\n */\r\nRequestAnimationFrameLoop.prototype.isRunning = function isRunning() {\r\n    return this._running;\r\n};\r\n\r\n/**\r\n * Updates all registered objects.\r\n *\r\n * @method\r\n *\r\n * @param {Number} time high resolution timstamp used for invoking the `update`\r\n * method on all registered objects\r\n *\r\n * @return {RequestAnimationFrameLoop} this\r\n */\r\nRequestAnimationFrameLoop.prototype.step = function step (time) {\r\n    this._time = time;\r\n    if (this._sleepDiff) {\r\n        this._sleep += time - this._stoppedAt;\r\n        this._sleepDiff = false;\r\n    }\r\n\r\n    // The same timetamp will be emitted immediately before and after visibility\r\n    // change.\r\n    var normalizedTime = time - this._sleep;\r\n    for (var i = 0, len = this._updates.length ; i < len ; i++) {\r\n        this._updates[i].update(normalizedTime);\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Method being called by `requestAnimationFrame` on every paint. Indirectly\r\n * recursive by scheduling a future invocation of itself on the next paint.\r\n *\r\n * @method\r\n *\r\n * @param {Number} time high resolution timstamp used for invoking the `update`\r\n * method on all registered objects\r\n * @return {RequestAnimationFrameLoop} this\r\n */\r\nRequestAnimationFrameLoop.prototype.loop = function loop(time) {\r\n    this.step(time);\r\n    this._rAF = rAF(this._looper);\r\n    return this;\r\n};\r\n\r\n/**\r\n * Registeres an updateable object which `update` method should be invoked on\r\n * every paint, starting on the next paint (assuming the\r\n * RequestAnimationFrameLoop is running).\r\n *\r\n * @method\r\n *\r\n * @param {Object} updateable object to be updated\r\n * @param {Function} updateable.update update function to be called on the\r\n * registered object\r\n *\r\n * @return {RequestAnimationFrameLoop} this\r\n */\r\nRequestAnimationFrameLoop.prototype.update = function update(updateable) {\r\n    if (this._updates.indexOf(updateable) === -1) {\r\n        this._updates.push(updateable);\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Deregisters an updateable object previously registered using `update` to be\r\n * no longer updated.\r\n *\r\n * @method\r\n *\r\n * @param {Object} updateable updateable object previously registered using\r\n * `update`\r\n *\r\n * @return {RequestAnimationFrameLoop} this\r\n */\r\nRequestAnimationFrameLoop.prototype.noLongerUpdate = function noLongerUpdate(updateable) {\r\n    var index = this._updates.indexOf(updateable);\r\n    if (index > -1) {\r\n        this._updates.splice(index, 1);\r\n    }\r\n    return this;\r\n};\r\n\r\nmodule.exports = RequestAnimationFrameLoop;\r\n\n},{\"../polyfills\":22}],24:[function(require,module,exports){\n/**\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2015 Famous Industries Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n\r\n'use strict';\r\n\r\nvar Context = require('./Context');\r\nvar injectCSS = require('./inject-css');\r\nvar Commands = require('../core/Commands');\r\n\r\n/**\r\n * Instantiates a new Compositor.\r\n * The Compositor receives draw commands frm the UIManager and routes the to the\r\n * respective context objects.\r\n *\r\n * Upon creation, it injects a stylesheet used for styling the individual\r\n * renderers used in the context objects.\r\n *\r\n * @class Compositor\r\n * @constructor\r\n * @return {undefined} undefined\r\n */\r\nfunction Compositor() {\r\n    injectCSS();\r\n\r\n    this._contexts = {};\r\n    this._outCommands = [];\r\n    this._inCommands = [];\r\n    this._time = null;\r\n\r\n    this._resized = false;\r\n\r\n    var _this = this;\r\n    window.addEventListener('resize', function() {\r\n        _this.onResize();\r\n    });\r\n}\r\n\r\nCompositor.prototype.onResize = function onResize () {\r\n    this._resized = true;\r\n    for (var selector in this._contexts) {\r\n        this._contexts[selector].updateSize();\r\n    }\r\n};\r\n\r\n/**\r\n * Retrieves the time being used by the internal clock managed by\r\n * `FamousEngine`.\r\n *\r\n * The time is being passed into core by the Engine through the UIManager.\r\n * Since core has the ability to scale the time, the time needs to be passed\r\n * back to the rendering system.\r\n *\r\n * @method\r\n *\r\n * @return {Number} time The clock time used in core.\r\n */\r\nCompositor.prototype.getTime = function getTime() {\r\n    return this._time;\r\n};\r\n\r\n/**\r\n * Schedules an event to be sent the next time the out command queue is being\r\n * flushed.\r\n *\r\n * @method\r\n * @private\r\n *\r\n * @param  {String} path Render path to the node the event should be triggered\r\n * on (*targeted event*)\r\n * @param  {String} ev Event type\r\n * @param  {Object} payload Event object (serializable using structured cloning\r\n * algorithm)\r\n *\r\n * @return {undefined} undefined\r\n */\r\nCompositor.prototype.sendEvent = function sendEvent(path, ev, payload) {\r\n    this._outCommands.push(Commands.WITH, path, Commands.TRIGGER, ev, payload);\r\n};\r\n\r\n/**\r\n * Internal helper method used for notifying externally\r\n * resized contexts (e.g. by resizing the browser window).\r\n *\r\n * @method\r\n * @private\r\n *\r\n * @param  {String} selector render path to the node (context) that should be\r\n * resized\r\n * @param  {Array} size new context size\r\n *\r\n * @return {undefined} undefined\r\n */\r\nCompositor.prototype.sendResize = function sendResize (selector, size) {\r\n    this.sendEvent(selector, 'CONTEXT_RESIZE', size);\r\n};\r\n\r\n/**\r\n * Internal helper method used by `drawCommands`.\r\n * Subsequent commands are being associated with the node defined the the path\r\n * following the `WITH` command.\r\n *\r\n * @method\r\n * @private\r\n *\r\n * @param  {Number} iterator position index within the commands queue\r\n * @param  {Array} commands remaining message queue received, used to\r\n * shift single messages from\r\n *\r\n * @return {undefined} undefined\r\n */\r\nCompositor.prototype.handleWith = function handleWith (iterator, commands) {\r\n    var path = commands[iterator];\r\n    var pathArr = path.split('/');\r\n    var context = this.getOrSetContext(pathArr.shift());\r\n    return context.receive(path, commands, iterator);\r\n};\r\n\r\n/**\r\n * Retrieves the top-level Context associated with the passed in document\r\n * query selector. If no such Context exists, a new one will be instantiated.\r\n *\r\n * @method\r\n *\r\n * @param  {String} selector document query selector used for retrieving the\r\n * DOM node that should be used as a root element by the Context\r\n *\r\n * @return {Context} context\r\n */\r\nCompositor.prototype.getOrSetContext = function getOrSetContext(selector) {\r\n    if (this._contexts[selector]) {\r\n        return this._contexts[selector];\r\n    }\r\n    else {\r\n        var context = new Context(selector, this);\r\n        this._contexts[selector] = context;\r\n        return context;\r\n    }\r\n};\r\n\r\n/**\r\n * Retrieves a context object registered under the passed in selector.\r\n *\r\n * @method\r\n *\r\n * @param  {String} selector    Query selector that has previously been used to\r\n *                              register the context.\r\n * @return {Context}            The repsective context.\r\n */\r\nCompositor.prototype.getContext = function getContext(selector) {\r\n    if (this._contexts[selector])\r\n        return this._contexts[selector];\r\n};\r\n\r\n/**\r\n * Processes the previously via `receiveCommands` updated incoming \"in\"\r\n * command queue.\r\n * Called by UIManager on a frame by frame basis.\r\n *\r\n * @method\r\n *\r\n * @return {Array} outCommands set of commands to be sent back\r\n */\r\nCompositor.prototype.drawCommands = function drawCommands() {\r\n    var commands = this._inCommands;\r\n    var localIterator = 0;\r\n    var command = commands[localIterator];\r\n    while (command) {\r\n        switch (command) {\r\n            case Commands.TIME:\r\n                this._time = commands[++localIterator];\r\n                break;\r\n            case Commands.WITH:\r\n                localIterator = this.handleWith(++localIterator, commands);\r\n                break;\r\n            case Commands.NEED_SIZE_FOR:\r\n                this.giveSizeFor(++localIterator, commands);\r\n                break;\r\n        }\r\n        command = commands[++localIterator];\r\n    }\r\n\r\n    // TODO: Switch to associative arrays here...\r\n\r\n    for (var key in this._contexts) {\r\n        //this._contexts[key].draw();\r\n    }\r\n\r\n    if (this._resized) {\r\n        this.updateSize();\r\n    }\r\n\r\n    return this._outCommands;\r\n};\r\n\r\n\r\n/**\r\n * Updates the size of all previously registered context objects.\r\n * This results into CONTEXT_RESIZE events being sent and the root elements\r\n * used by the individual renderers being resized to the the DOMRenderer's root\r\n * size.\r\n *\r\n * @method\r\n *\r\n * @return {undefined} undefined\r\n */\r\nCompositor.prototype.updateSize = function updateSize() {\r\n    for (var selector in this._contexts) {\r\n        this._contexts[selector].updateSize();\r\n    }\r\n};\r\n\r\n/**\r\n * Used by ThreadManager to update the internal queue of incoming commands.\r\n * Receiving commands does not immediately start the rendering process.\r\n *\r\n * @method\r\n *\r\n * @param  {Array} commands command queue to be processed by the compositor's\r\n * `drawCommands` method\r\n *\r\n * @return {undefined} undefined\r\n */\r\nCompositor.prototype.receiveCommands = function receiveCommands(commands) {\r\n    var len = commands.length;\r\n    for (var i = 0; i < len; i++) {\r\n        this._inCommands.push(commands[i]);\r\n    }\r\n\r\n    for (var selector in this._contexts) {\r\n        this._contexts[selector].checkInit();\r\n    }\r\n};\r\n\r\n/**\r\n * Internal helper method used by `drawCommands`.\r\n *\r\n * @method\r\n * @private\r\n *\r\n * @param  {Number} iterator position index within the command queue\r\n * @param  {Array} commands remaining message queue received, used to\r\n * shift single messages\r\n *\r\n * @return {undefined} undefined\r\n */\r\nCompositor.prototype.giveSizeFor = function giveSizeFor(iterator, commands) {\r\n    var selector = commands[iterator];\r\n    var context = this.getContext(selector);\r\n    if (context) {\r\n        var size = context.getRootSize();\r\n        this.sendResize(selector, size);\r\n    } else {\r\n        this.getOrSetContext(selector);\r\n    }\r\n};\r\n\r\n/**\r\n * Flushes the queue of outgoing \"out\" commands.\r\n * Called by ThreadManager.\r\n *\r\n * @method\r\n *\r\n * @return {undefined} undefined\r\n */\r\nCompositor.prototype.clearCommands = function clearCommands() {\r\n    this._inCommands.length = 0;\r\n    this._outCommands.length = 0;\r\n    this._resized = false;\r\n};\r\n\r\nmodule.exports = Compositor;\r\n\n},{\"../core/Commands\":3,\"./Context\":25,\"./inject-css\":27}],25:[function(require,module,exports){\n/**\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2015 Famous Industries Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n\r\n'use strict';\r\n\r\nvar WebGLRenderer = require('../webgl-renderers/WebGLRenderer');\r\nvar Camera = require('../components/Camera');\r\nvar DOMRenderer = require('../dom-renderers/DOMRenderer');\r\nvar Commands = require('../core/Commands');\r\n\r\n/**\r\n * Context is a render layer with its own WebGLRenderer and DOMRenderer.\r\n * It is the interface between the Compositor which receives commands\r\n * and the renderers that interpret them. It also relays information to\r\n * the renderers about resizing.\r\n *\r\n * The DOMElement at the given query selector is used as the root. A\r\n * new DOMElement is appended to this root element, and used as the\r\n * parent element for all Famous DOM rendering at this context. A\r\n * canvas is added and used for all WebGL rendering at this context.\r\n *\r\n * @class Context\r\n * @constructor\r\n *\r\n * @param {String} selector Query selector used to locate root element of\r\n * context layer.\r\n * @param {Compositor} compositor Compositor reference to pass down to\r\n * WebGLRenderer.\r\n */\r\nfunction Context(selector, compositor) {\r\n    this._compositor = compositor;\r\n    this._rootEl = document.querySelector(selector);\r\n    this._selector = selector;\r\n\r\n    if (this._rootEl === null) {\r\n        throw new Error(\r\n            'Failed to create Context: ' +\r\n            'No matches for \"' + selector + '\" found.'\r\n        );\r\n    }\r\n\r\n    this._selector = selector;\r\n\r\n    // Initializes the DOMRenderer.\r\n    // Every Context has at least a DOMRenderer for now.\r\n    this._initDOMRenderer();\r\n\r\n    // WebGLRenderer will be instantiated when needed.\r\n    this._webGLRenderer = null;\r\n    this._domRenderer = new DOMRenderer(this._domRendererRootEl, selector, compositor);\r\n    this._canvasEl = null;\r\n\r\n    // State holders\r\n\r\n    this._renderState = {\r\n        projectionType: Camera.ORTHOGRAPHIC_PROJECTION,\r\n        perspectiveTransform: new Float32Array([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]),\r\n        viewTransform: new Float32Array([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]),\r\n        viewDirty: false,\r\n        perspectiveDirty: false\r\n    };\r\n\r\n    this._size = [];\r\n\r\n    this._meshTransform = new Float32Array(16);\r\n    this._meshSize = [0, 0, 0];\r\n\r\n    this._initDOM = false;\r\n\r\n    this._commandCallbacks = [];\r\n    this.initCommandCallbacks();\r\n\r\n    this.updateSize();\r\n}\r\n\r\n/**\r\n * Queries DOMRenderer size and updates canvas size. Relays size information to\r\n * WebGLRenderer.\r\n *\r\n * @method\r\n *\r\n * @return {Context} this\r\n */\r\nContext.prototype.updateSize = function () {\r\n    var width = this._rootEl.offsetWidth;\r\n    var height = this._rootEl.offsetHeight;\r\n\r\n    this._size[0] = width;\r\n    this._size[1] = height;\r\n    this._size[2] = (width > height) ? width : height;\r\n\r\n    this._compositor.sendResize(this._selector, this._size);\r\n    if (this._webGLRenderer) this._webGLRenderer.updateSize(this._size);\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * Draw function called after all commands have been handled for current frame.\r\n * Issues draw commands to all renderers with current renderState.\r\n *\r\n * @method\r\n *\r\n * @return {undefined} undefined\r\n */\r\nContext.prototype.draw = function draw() {\r\n    this._domRenderer.draw(this._renderState);\r\n    if (this._webGLRenderer) this._webGLRenderer.draw(this._renderState);\r\n\r\n    if (this._renderState.perspectiveDirty) this._renderState.perspectiveDirty = false;\r\n    if (this._renderState.viewDirty) this._renderState.viewDirty = false;\r\n};\r\n\r\n/**\r\n * Initializes the DOMRenderer by creating a root DIV element and appending it\r\n * to the context.\r\n *\r\n * @method\r\n * @private\r\n *\r\n * @return {undefined} undefined\r\n */\r\nContext.prototype._initDOMRenderer = function _initDOMRenderer() {\r\n    this._domRendererRootEl = document.createElement('div');\r\n    this._rootEl.appendChild(this._domRendererRootEl);\r\n    this._domRendererRootEl.style.visibility = 'hidden';\r\n\r\n    this._domRenderer = new DOMRenderer(\r\n        this._domRendererRootEl,\r\n        this._selector,\r\n        this._compositor\r\n    );\r\n};\r\n\r\nContext.prototype.initCommandCallbacks = function initCommandCallbacks () {\r\n    this._commandCallbacks[Commands.INIT_DOM] = initDOM;\r\n    this._commandCallbacks[Commands.DOM_RENDER_SIZE] = domRenderSize;\r\n    this._commandCallbacks[Commands.CHANGE_TRANSFORM] = changeTransform;\r\n    this._commandCallbacks[Commands.CHANGE_SIZE] = changeSize;\r\n    this._commandCallbacks[Commands.CHANGE_PROPERTY] = changeProperty;\r\n    this._commandCallbacks[Commands.CHANGE_CONTENT] = changeContent;\r\n    this._commandCallbacks[Commands.CHANGE_ATTRIBUTE] = changeAttribute;\r\n    this._commandCallbacks[Commands.ADD_CLASS] = addClass;\r\n    this._commandCallbacks[Commands.REMOVE_CLASS] = removeClass;\r\n    this._commandCallbacks[Commands.SUBSCRIBE] = subscribe;\r\n    this._commandCallbacks[Commands.UNSUBSCRIBE] = unsubscribe;\r\n    this._commandCallbacks[Commands.GL_SET_DRAW_OPTIONS] = glSetDrawOptions;\r\n    this._commandCallbacks[Commands.GL_AMBIENT_LIGHT] = glAmbientLight;\r\n    this._commandCallbacks[Commands.GL_LIGHT_POSITION] = glLightPosition;\r\n    this._commandCallbacks[Commands.GL_LIGHT_COLOR] = glLightColor;\r\n    this._commandCallbacks[Commands.MATERIAL_INPUT] = materialInput;\r\n    this._commandCallbacks[Commands.GL_SET_GEOMETRY] = glSetGeometry;\r\n    this._commandCallbacks[Commands.GL_UNIFORMS] = glUniforms;\r\n    this._commandCallbacks[Commands.GL_BUFFER_DATA] = glBufferData;\r\n    this._commandCallbacks[Commands.GL_CUTOUT_STATE] = glCutoutState;\r\n    this._commandCallbacks[Commands.GL_MESH_VISIBILITY] = glMeshVisibility;\r\n    this._commandCallbacks[Commands.GL_REMOVE_MESH] = glRemoveMesh;\r\n    this._commandCallbacks[Commands.PINHOLE_PROJECTION] = pinholeProjection;\r\n    this._commandCallbacks[Commands.ORTHOGRAPHIC_PROJECTION] = orthographicProjection;\r\n    this._commandCallbacks[Commands.CHANGE_VIEW_TRANSFORM] = changeViewTransform;\r\n    this._commandCallbacks[Commands.PREVENT_DEFAULT] = preventDefault;\r\n    this._commandCallbacks[Commands.ALLOW_DEFAULT] = allowDefault;\r\n    this._commandCallbacks[Commands.READY] = ready;\r\n};\r\n\r\n/**\r\n * Initializes the WebGLRenderer and updates it initial size.\r\n *\r\n * The Initialization process consists of the following steps:\r\n *\r\n * 1. A new `<canvas>` element is being created and appended to the root element.\r\n * 2. The WebGLRenderer is being instantiated.\r\n * 3. The size of the WebGLRenderer is being updated.\r\n *\r\n * @method\r\n * @private\r\n *\r\n * @return {undefined} undefined\r\n */\r\nContext.prototype._initWebGLRenderer = function _initWebGLRenderer() {\r\n    this._webGLRendererRootEl = document.createElement('canvas');\r\n    this._rootEl.appendChild(this._webGLRendererRootEl);\r\n\r\n    this._webGLRenderer = new WebGLRenderer(\r\n        this._webGLRendererRootEl,\r\n        this._compositor\r\n    );\r\n\r\n    // Don't read offset width and height.\r\n    this._webGLRenderer.updateSize(this._size);\r\n};\r\n\r\n/**\r\n * Gets the size of the parent element of the DOMRenderer for this context.\r\n *\r\n * @method\r\n *\r\n * @return {undefined} undefined\r\n */\r\nContext.prototype.getRootSize = function getRootSize() {\r\n    return [\r\n        this._rootEl.offsetWidth,\r\n        this._rootEl.offsetHeight\r\n    ];\r\n};\r\n\r\n\r\n/**\r\n * Initializes the context if the `READY` command has been received earlier.\r\n *\r\n * @return {undefined} undefined\r\n */\r\nContext.prototype.checkInit = function checkInit () {\r\n    if (this._initDOM) {\r\n        this._domRendererRootEl.style.visibility = 'visible';\r\n        this._initDOM = false;\r\n    }\r\n};\r\n\r\n/**\r\n * Handles delegation of commands to renderers of this context.\r\n *\r\n * @method\r\n *\r\n * @param {String} path String used as identifier of a given node in the\r\n * scene graph.\r\n * @param {Array} commands List of all commands from this frame.\r\n * @param {Number} iterator Number indicating progress through the command\r\n * queue.\r\n *\r\n * @return {Number} iterator indicating progress through the command queue.\r\n */\r\nContext.prototype.receive = function receive(path, commands, iterator) {\r\n    var localIterator = iterator;\r\n\r\n    var command = commands[++localIterator];\r\n\r\n    this._domRenderer.loadPath(path);\r\n\r\n    while (command != null) {\r\n        if (command === Commands.WITH || command === Commands.TIME) return localIterator - 1;\r\n        else localIterator = this._commandCallbacks[command](this, path, commands, localIterator) + 1;\r\n        command = commands[localIterator];\r\n    }\r\n\r\n    return localIterator;\r\n};\r\n\r\n/**\r\n * Getter method used for retrieving the used DOMRenderer.\r\n *\r\n * @method\r\n *\r\n * @return {DOMRenderer}    The DOMRenderer being used by the Context.\r\n */\r\nContext.prototype.getDOMRenderer = function getDOMRenderer() {\r\n    return this._domRenderer;\r\n};\r\n\r\n/**\r\n * Getter method used for retrieving the used WebGLRenderer (if any).\r\n *\r\n * @method\r\n *\r\n * @return {WebGLRenderer|null}    The WebGLRenderer being used by the Context.\r\n */\r\nContext.prototype.getWebGLRenderer = function getWebGLRenderer() {\r\n    return this._webGLRenderer;\r\n};\r\n\r\n// Command Callbacks\r\nfunction preventDefault (context, path, commands, iterator) {\r\n    if (context._webGLRenderer) context._webGLRenderer.getOrSetCutout(path);\r\n    context._domRenderer.preventDefault(commands[++iterator]);\r\n    return iterator;\r\n}\r\n\r\nfunction allowDefault (context, path, commands, iterator) {\r\n    if (context._webGLRenderer) context._webGLRenderer.getOrSetCutout(path);\r\n    context._domRenderer.allowDefault(commands[++iterator]);\r\n    return iterator;\r\n}\r\n\r\nfunction ready (context, path, commands, iterator) {\r\n    context._initDOM = true;\r\n    return iterator;\r\n}\r\n\r\nfunction initDOM (context, path, commands, iterator) {\r\n    context._domRenderer.insertEl(commands[++iterator]);\r\n    return iterator;\r\n}\r\n\r\nfunction domRenderSize (context, path, commands, iterator) {\r\n    context._domRenderer.getSizeOf(commands[++iterator]);\r\n    return iterator;\r\n}\r\n\r\nfunction changeTransform (context, path, commands, iterator) {\r\n    var temp = context._meshTransform;\r\n\r\n    temp[0] = commands[++iterator];\r\n    temp[1] = commands[++iterator];\r\n    temp[2] = commands[++iterator];\r\n    temp[3] = commands[++iterator];\r\n    temp[4] = commands[++iterator];\r\n    temp[5] = commands[++iterator];\r\n    temp[6] = commands[++iterator];\r\n    temp[7] = commands[++iterator];\r\n    temp[8] = commands[++iterator];\r\n    temp[9] = commands[++iterator];\r\n    temp[10] = commands[++iterator];\r\n    temp[11] = commands[++iterator];\r\n    temp[12] = commands[++iterator];\r\n    temp[13] = commands[++iterator];\r\n    temp[14] = commands[++iterator];\r\n    temp[15] = commands[++iterator];\r\n\r\n    context._domRenderer.setMatrix(temp);\r\n\r\n    if (context._webGLRenderer)\r\n        context._webGLRenderer.setCutoutUniform(path, 'u_transform', temp);\r\n\r\n    return iterator;\r\n}\r\n\r\nfunction changeSize (context, path, commands, iterator) {\r\n    var width = commands[++iterator];\r\n    var height = commands[++iterator];\r\n\r\n    context._domRenderer.setSize(width, height);\r\n    if (context._webGLRenderer) {\r\n        context._meshSize[0] = width;\r\n        context._meshSize[1] = height;\r\n        context._webGLRenderer.setCutoutUniform(path, 'u_size', context._meshSize);\r\n    }\r\n\r\n    return iterator;\r\n}\r\n\r\nfunction changeProperty (context, path, commands, iterator) {\r\n    if (context._webGLRenderer) context._webGLRenderer.getOrSetCutout(path);\r\n    context._domRenderer.setProperty(commands[++iterator], commands[++iterator]);\r\n    return iterator;\r\n}\r\n\r\nfunction changeContent (context, path, commands, iterator) {\r\n    if (context._webGLRenderer) context._webGLRenderer.getOrSetCutout(path);\r\n    context._domRenderer.setContent(commands[++iterator]);\r\n    return iterator;\r\n}\r\n\r\nfunction changeAttribute (context, path, commands, iterator) {\r\n    if (context._webGLRenderer) context._webGLRenderer.getOrSetCutout(path);\r\n    context._domRenderer.setAttribute(commands[++iterator], commands[++iterator]);\r\n    return iterator;\r\n}\r\n\r\nfunction addClass (context, path, commands, iterator) {\r\n    if (context._webGLRenderer) context._webGLRenderer.getOrSetCutout(path);\r\n    context._domRenderer.addClass(commands[++iterator]);\r\n    return iterator;\r\n}\r\n\r\nfunction removeClass (context, path, commands, iterator) {\r\n    if (context._webGLRenderer) context._webGLRenderer.getOrSetCutout(path);\r\n    context._domRenderer.removeClass(commands[++iterator]);\r\n    return iterator;\r\n}\r\n\r\nfunction subscribe (context, path, commands, iterator) {\r\n    if (context._webGLRenderer) context._webGLRenderer.getOrSetCutout(path);\r\n    context._domRenderer.subscribe(commands[++iterator]);\r\n    return iterator;\r\n}\r\n\r\nfunction unsubscribe (context, path, commands, iterator) {\r\n    if (context._webGLRenderer) context._webGLRenderer.getOrSetCutout(path);\r\n    context._domRenderer.unsubscribe(commands[++iterator]);\r\n    return iterator;\r\n}\r\n\r\nfunction glSetDrawOptions (context, path, commands, iterator) {\r\n    if (!context._webGLRenderer) context._initWebGLRenderer();\r\n    context._webGLRenderer.setMeshOptions(path, commands[++iterator]);\r\n    return iterator;\r\n}\r\n\r\nfunction glAmbientLight (context, path, commands, iterator) {\r\n    if (!context._webGLRenderer) context._initWebGLRenderer();\r\n    context._webGLRenderer.setAmbientLightColor(\r\n        path,\r\n        commands[++iterator],\r\n        commands[++iterator],\r\n        commands[++iterator]\r\n    );\r\n    return iterator;\r\n}\r\n\r\nfunction glLightPosition (context, path, commands, iterator) {\r\n    if (!context._webGLRenderer) context._initWebGLRenderer();\r\n    context._webGLRenderer.setLightPosition(\r\n        path,\r\n        commands[++iterator],\r\n        commands[++iterator],\r\n        commands[++iterator]\r\n    );\r\n    return iterator;\r\n}\r\n\r\nfunction glLightColor (context, path, commands, iterator) {\r\n    if (!context._webGLRenderer) context._initWebGLRenderer();\r\n    context._webGLRenderer.setLightColor(\r\n        path,\r\n        commands[++iterator],\r\n        commands[++iterator],\r\n        commands[++iterator]\r\n    );\r\n    return iterator;\r\n}\r\n\r\nfunction materialInput (context, path, commands, iterator) {\r\n    if (!context._webGLRenderer) context._initWebGLRenderer();\r\n    context._webGLRenderer.handleMaterialInput(\r\n        path,\r\n        commands[++iterator],\r\n        commands[++iterator]\r\n    );\r\n    return iterator;\r\n}\r\n\r\nfunction glSetGeometry (context, path, commands, iterator) {\r\n    if (!context._webGLRenderer) context._initWebGLRenderer();\r\n    context._webGLRenderer.setGeometry(\r\n        path,\r\n        commands[++iterator],\r\n        commands[++iterator],\r\n        commands[++iterator]\r\n    );\r\n    return iterator;\r\n}\r\n\r\nfunction glUniforms (context, path, commands, iterator) {\r\n    if (!context._webGLRenderer) context._initWebGLRenderer();\r\n    context._webGLRenderer.setMeshUniform(\r\n        path,\r\n        commands[++iterator],\r\n        commands[++iterator]\r\n    );\r\n    return iterator;\r\n}\r\n\r\nfunction glBufferData (context, path, commands, iterator) {\r\n    if (!context._webGLRenderer) context._initWebGLRenderer();\r\n    context._webGLRenderer.bufferData(\r\n        commands[++iterator],\r\n        commands[++iterator],\r\n        commands[++iterator],\r\n        commands[++iterator],\r\n        commands[++iterator]\r\n    );\r\n    return iterator;\r\n}\r\n\r\nfunction glCutoutState (context, path, commands, iterator) {\r\n    if (!context._webGLRenderer) context._initWebGLRenderer();\r\n    context._webGLRenderer.setCutoutState(path, commands[++iterator]);\r\n    return iterator;\r\n}\r\n\r\nfunction glMeshVisibility (context, path, commands, iterator) {\r\n    if (!context._webGLRenderer) context._initWebGLRenderer();\r\n    context._webGLRenderer.setMeshVisibility(path, commands[++iterator]);\r\n    return iterator;\r\n}\r\n\r\nfunction glRemoveMesh (context, path, commands, iterator) {\r\n    if (!context._webGLRenderer) context._initWebGLRenderer();\r\n    context._webGLRenderer.removeMesh(path);\r\n    return iterator;\r\n}\r\n\r\nfunction pinholeProjection (context, path, commands, iterator) {\r\n    context._renderState.projectionType = Camera.PINHOLE_PROJECTION;\r\n    context._renderState.perspectiveTransform[11] = -1 / commands[++iterator];\r\n    context._renderState.perspectiveDirty = true;\r\n    return iterator;\r\n}\r\n\r\nfunction orthographicProjection (context, path, commands, iterator) {\r\n    context._renderState.projectionType = Camera.ORTHOGRAPHIC_PROJECTION;\r\n    context._renderState.perspectiveTransform[11] = 0;\r\n    context._renderState.perspectiveDirty = true;\r\n    return iterator;\r\n}\r\n\r\nfunction changeViewTransform (context, path, commands, iterator) {\r\n    context._renderState.viewTransform[0] = commands[++iterator];\r\n    context._renderState.viewTransform[1] = commands[++iterator];\r\n    context._renderState.viewTransform[2] = commands[++iterator];\r\n    context._renderState.viewTransform[3] = commands[++iterator];\r\n\r\n    context._renderState.viewTransform[4] = commands[++iterator];\r\n    context._renderState.viewTransform[5] = commands[++iterator];\r\n    context._renderState.viewTransform[6] = commands[++iterator];\r\n    context._renderState.viewTransform[7] = commands[++iterator];\r\n\r\n    context._renderState.viewTransform[8] = commands[++iterator];\r\n    context._renderState.viewTransform[9] = commands[++iterator];\r\n    context._renderState.viewTransform[10] = commands[++iterator];\r\n    context._renderState.viewTransform[11] = commands[++iterator];\r\n\r\n    context._renderState.viewTransform[12] = commands[++iterator];\r\n    context._renderState.viewTransform[13] = commands[++iterator];\r\n    context._renderState.viewTransform[14] = commands[++iterator];\r\n    context._renderState.viewTransform[15] = commands[++iterator];\r\n\r\n    context._renderState.viewDirty = true;\r\n    return iterator;\r\n}\r\n\r\nmodule.exports = Context;\r\n\n},{\"../components/Camera\":1,\"../core/Commands\":3,\"../dom-renderers/DOMRenderer\":6,\"../webgl-renderers/WebGLRenderer\":39}],26:[function(require,module,exports){\n/**\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2015 Famous Industries Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n\r\n'use strict';\r\n\r\nvar Commands = require('../core/Commands');\r\nvar Chan = require('../core/Chan');\r\n/**\r\n * The UIManager is being updated by an Engine by consecutively calling its\r\n * `update` method. It can either manage a real Web-Worker or the global\r\n * FamousEngine core singleton.\r\n *\r\n * @example\r\n * var compositor = new Compositor();\r\n * var engine = new Engine();\r\n *\r\n * // Using a Web Worker\r\n * var worker = new Worker('worker.bundle.js');\r\n * var threadmanger = new UIManager(worker, compositor, engine);\r\n *\r\n * // Without using a Web Worker\r\n * var threadmanger = new UIManager(Famous, compositor, engine);\r\n *\r\n * @class  UIManager\r\n * @constructor\r\n *\r\n * @param {Famous|Worker} thread The thread being used to receive messages\r\n * from and post messages to. Expected to expose a WebWorker-like API, which\r\n * means providing a way to listen for updates by setting its `onmessage`\r\n * property and sending updates using `postMessage`.\r\n * @param {Compositor} compositor an instance of Compositor used to extract\r\n * enqueued draw commands from to be sent to the thread.\r\n * @param {RenderLoop} renderLoop an instance of Engine used for executing\r\n * the `ENGINE` commands on.\r\n */\r\nfunction UIManager (thread, compositor, renderLoop) {\r\n    this._thread = thread;\r\n    this._compositor = compositor;\r\n    this._renderLoop = renderLoop;\r\n    Chan.setChannel(thread);\r\n    this._renderLoop.update(this);\r\n\r\n    var _this = this;\r\n    this._thread.onmessage = function (ev) {\r\n        var message = ev.data ? ev.data : ev;\r\n        if (message[0] === Commands.ENGINE) {\r\n            switch (message[1]) {\r\n                case Commands.CROSS_THREAD:\r\n                    Chan.callback(message[2]);\r\n                    break;\r\n                case Commands.START:\r\n                    _this._engine.start();\r\n                    break;\r\n                case Commands.STOP:\r\n                    _this._engine.stop();\r\n                    break;\r\n                default:\r\n                    console.error(\r\n                        'Unknown ENGINE command \"' + message[1] + '\"'\r\n                    );\r\n                    break;\r\n            }\r\n        }\r\n        else {\r\n            _this._compositor.receiveCommands(message);\r\n        }\r\n    };\r\n    this._thread.onerror = function (error) {\r\n        console.error(error);\r\n    };\r\n}\r\n\r\n/**\r\n * Returns the thread being used by the UIManager.\r\n * This could either be an an actual web worker or a `FamousEngine` singleton.\r\n *\r\n * @method\r\n *\r\n * @return {Worker|FamousEngine} Either a web worker or a `FamousEngine` singleton.\r\n */\r\nUIManager.prototype.getThread = function getThread() {\r\n    return this._thread;\r\n};\r\n\r\n/**\r\n * Returns the compositor being used by this UIManager.\r\n *\r\n * @method\r\n *\r\n * @return {Compositor} The compositor used by the UIManager.\r\n */\r\nUIManager.prototype.getCompositor = function getCompositor() {\r\n    return this._compositor;\r\n};\r\n\r\n/**\r\n * Returns the engine being used by this UIManager.\r\n *\r\n * @method\r\n * @deprecated Use {@link UIManager#getRenderLoop instead!}\r\n *\r\n * @return {Engine} The engine used by the UIManager.\r\n */\r\nUIManager.prototype.getEngine = function getEngine() {\r\n    return this._renderLoop;\r\n};\r\n\r\n\r\n/**\r\n * Returns the render loop currently being used by the UIManager.\r\n *\r\n * @method\r\n *\r\n * @return {RenderLoop}  The registered render loop used for updating the\r\n * UIManager.\r\n */\r\nUIManager.prototype.getRenderLoop = function getRenderLoop() {\r\n    return this._renderLoop;\r\n};\r\n\r\n/**\r\n * Update method being invoked by the Engine on every `requestAnimationFrame`.\r\n * Used for updating the notion of time within the managed thread by sending\r\n * a FRAME command and sending messages to\r\n *\r\n * @method\r\n *\r\n * @param  {Number} time unix timestamp to be passed down to the worker as a\r\n * FRAME command\r\n * @return {undefined} undefined\r\n */\r\nUIManager.prototype.update = function update (time) {\r\n    this._thread.postMessage([Commands.FRAME, time]);\r\n    var threadMessages = this._compositor.drawCommands();\r\n    this._thread.postMessage(threadMessages);\r\n    this._compositor.clearCommands();\r\n};\r\n\r\nmodule.exports = UIManager;\r\n\n},{\"../core/Chan\":2,\"../core/Commands\":3}],27:[function(require,module,exports){\n/**\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2015 Famous Industries Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n\r\n'use strict';\r\n\r\nvar css = '.famous-dom-renderer {' +\r\n    'width:100%;' +\r\n    'height:100%;' +\r\n    'transform-style:preserve-3d;' +\r\n    '-webkit-transform-style:preserve-3d;' +\r\n'}' +\r\n\r\n'.famous-dom-element {' +\r\n    '-webkit-transform-origin:0% 0%;' +\r\n    'transform-origin:0% 0%;' +\r\n    '-webkit-backface-visibility:visible;' +\r\n    'backface-visibility:visible;' +\r\n    '-webkit-transform-style:preserve-3d;' +\r\n    'transform-style:preserve-3d;' +\r\n    '-webkit-tap-highlight-color:transparent;' +\r\n    'pointer-events:auto;' +\r\n    'z-index:1;' +\r\n'}' +\r\n\r\n'.famous-dom-element-content,' +\r\n'.famous-dom-element {' +\r\n    'position:absolute;' +\r\n    'box-sizing:border-box;' +\r\n    '-moz-box-sizing:border-box;' +\r\n    '-webkit-box-sizing:border-box;' +\r\n'}' +\r\n\r\n'.famous-webgl-renderer {' +\r\n    '-webkit-transform:translateZ(1000000px);' +  /* TODO: Fix when Safari Fixes*/\r\n    'transform:translateZ(1000000px);' +\r\n    'pointer-events:none;' +\r\n    'position:absolute;' +\r\n    'z-index:1;' +\r\n    'top:0;' +\r\n    'width:100%;' +\r\n    'height:100%;' +\r\n'}';\r\n\r\nvar INJECTED = typeof document === 'undefined';\r\n\r\nfunction injectCSS() {\r\n    if (INJECTED) return;\r\n    INJECTED = true;\r\n    if (document.createStyleSheet) {\r\n        var sheet = document.createStyleSheet();\r\n        sheet.cssText = css;\r\n    }\r\n    else {\r\n        var head = document.getElementsByTagName('head')[0];\r\n        var style = document.createElement('style');\r\n\r\n        if (style.styleSheet) {\r\n            style.styleSheet.cssText = css;\r\n        }\r\n        else {\r\n            style.appendChild(document.createTextNode(css));\r\n        }\r\n\r\n        (head ? head : document.documentElement).appendChild(style);\r\n    }\r\n}\r\n\r\nmodule.exports = injectCSS;\r\n\n},{}],28:[function(require,module,exports){\n/**\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2015 Famous Industries Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n\r\n'use strict';\r\n\r\n/**\r\n * A lightweight, featureless EventEmitter.\r\n *\r\n * @class CallbackStore\r\n * @constructor\r\n */\r\nfunction CallbackStore () {\r\n    this._events = {};\r\n}\r\n\r\n/**\r\n * Adds a listener for the specified event (= key).\r\n *\r\n * @method on\r\n * @chainable\r\n *\r\n * @param  {String}   key       The event type (e.g. `click`).\r\n * @param  {Function} callback  A callback function to be invoked whenever `key`\r\n *                              event is being triggered.\r\n * @return {Function} destroy   A function to call if you want to remove the\r\n *                              callback.\r\n */\r\nCallbackStore.prototype.on = function on (key, callback) {\r\n    if (!this._events[key]) this._events[key] = [];\r\n    var callbackList = this._events[key];\r\n    callbackList.push(callback);\r\n    return function () {\r\n        callbackList.splice(callbackList.indexOf(callback), 1);\r\n    };\r\n};\r\n\r\n/**\r\n * Removes a previously added event listener.\r\n *\r\n * @method off\r\n * @chainable\r\n *\r\n * @param  {String} key         The event type from which the callback function\r\n *                              should be removed.\r\n * @param  {Function} callback  The callback function to be removed from the\r\n *                              listeners for key.\r\n * @return {CallbackStore} this\r\n */\r\nCallbackStore.prototype.off = function off (key, callback) {\r\n    var events = this._events[key];\r\n    if (events) events.splice(events.indexOf(callback), 1);\r\n    return this;\r\n};\r\n\r\n/**\r\n * Invokes all the previously for this key registered callbacks.\r\n *\r\n * @method trigger\r\n * @chainable\r\n *\r\n * @param  {String}        key      The event type.\r\n * @param  {Object}        payload  The event payload (event object).\r\n * @return {CallbackStore} this\r\n */\r\nCallbackStore.prototype.trigger = function trigger (key, payload) {\r\n    var events = this._events[key];\r\n    if (events) {\r\n        var i = 0;\r\n        var len = events.length;\r\n        for (; i < len ; i++) events[i](payload);\r\n    }\r\n    return this;\r\n};\r\n\r\nmodule.exports = CallbackStore;\r\n\n},{}],29:[function(require,module,exports){\n'use strict';\r\n\r\nfunction Registry () {\r\n    this._keyToValue = {};\r\n    this._values = [];\r\n    this._keys = [];\r\n    this._keyToIndex = {};\r\n    this._freedIndices = [];\r\n}\r\n\r\nRegistry.prototype.register = function register (key, value) {\r\n    var index = this._keyToIndex[key];\r\n    if (index == null) {\r\n        index = this._freedIndices.pop();\r\n        if (index === undefined) index = this._values.length;\r\n\r\n        this._values[index] = value;\r\n        this._keys[index] = key;\r\n\r\n        this._keyToIndex[key] = index;\r\n        this._keyToValue[key] = value;\r\n    }\r\n    else {\r\n        this._keyToValue[key] = value;\r\n        this._values[index] = value;\r\n    }\r\n};\r\n\r\nRegistry.prototype.unregister = function unregister (key) {\r\n    var index = this._keyToIndex[key];\r\n\r\n    if (index != null) {\r\n        this._freedIndices.push(index);\r\n        this._keyToValue[key] = null;\r\n        this._keyToIndex[key] = null;\r\n        this._values[index] = null;\r\n        this._keys[index] = null;\r\n    }\r\n};\r\n\r\nRegistry.prototype.get = function get (key) {\r\n    return this._keyToValue[key];\r\n};\r\n\r\nRegistry.prototype.getValues = function getValues () {\r\n    return this._values;\r\n};\r\n\r\nRegistry.prototype.getKeys = function getKeys () {\r\n    return this._keys;\r\n};\r\n\r\nRegistry.prototype.getKeyToValue = function getKeyToValue () {\r\n    return this._keyToValue;\r\n};\r\n\r\nmodule.exports = Registry;\r\n\n},{}],30:[function(require,module,exports){\n/**\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2015 Famous Industries Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n\r\n'use strict';\r\n\r\n/**\r\n * Deep clone an object.\r\n *\r\n * @method  clone\r\n *\r\n * @param {Object} b       Object to be cloned.\r\n * @return {Object} a      Cloned object (deep equality).\r\n */\r\nvar clone = function clone(b) {\r\n    var a;\r\n    if (typeof b === 'object') {\r\n        a = (b instanceof Array) ? [] : {};\r\n        for (var key in b) {\r\n            if (typeof b[key] === 'object' && b[key] !== null) {\r\n                if (b[key] instanceof Array) {\r\n                    a[key] = new Array(b[key].length);\r\n                    for (var i = 0; i < b[key].length; i++) {\r\n                        a[key][i] = clone(b[key][i]);\r\n                    }\r\n                }\r\n                else {\r\n                  a[key] = clone(b[key]);\r\n                }\r\n            }\r\n            else {\r\n                a[key] = b[key];\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        a = b;\r\n    }\r\n    return a;\r\n};\r\n\r\nmodule.exports = clone;\r\n\n},{}],31:[function(require,module,exports){\n'use strict';\r\n\r\n/**\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2015 Famous Industries Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n\r\n/**\r\n * Takes an object containing keys and values and returns an object\r\n * comprising two \"associate\" arrays, one with the keys and the other\r\n * with the values.\r\n *\r\n * @method keyValuesToArrays\r\n *\r\n * @param {Object} obj                      Objects where to extract keys and values\r\n *                                          from.\r\n * @return {Object}         result\r\n *         {Array.<String>} result.keys     Keys of `result`, as returned by\r\n *                                          `Object.keys()`\r\n *         {Array}          result.values   Values of passed in object.\r\n */\r\nmodule.exports = function keyValuesToArrays(obj) {\r\n    var keysArray = [], valuesArray = [];\r\n    var i = 0;\r\n    for(var key in obj) {\r\n        if (obj.hasOwnProperty(key)) {\r\n            keysArray[i] = key;\r\n            valuesArray[i] = obj[key];\r\n            i++;\r\n        }\r\n    }\r\n    return {\r\n        keys: keysArray,\r\n        values: valuesArray\r\n    };\r\n};\r\n\n},{}],32:[function(require,module,exports){\n/**\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2015 Famous Industries Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n\r\n'use strict';\r\n\r\nvar PREFIXES = ['', '-ms-', '-webkit-', '-moz-', '-o-'];\r\n\r\n/**\r\n * A helper function used for determining the vendor prefixed version of the\r\n * passed in CSS property.\r\n *\r\n * Vendor checks are being conducted in the following order:\r\n *\r\n * 1. (no prefix)\r\n * 2. `-mz-`\r\n * 3. `-webkit-`\r\n * 4. `-moz-`\r\n * 5. `-o-`\r\n *\r\n * @method vendorPrefix\r\n *\r\n * @param {String} property     CSS property (no camelCase), e.g.\r\n *                              `border-radius`.\r\n * @return {String} prefixed    Vendor prefixed version of passed in CSS\r\n *                              property (e.g. `-webkit-border-radius`).\r\n */\r\nfunction vendorPrefix(property) {\r\n    for (var i = 0; i < PREFIXES.length; i++) {\r\n        var prefixed = PREFIXES[i] + property;\r\n        if (document.documentElement.style[prefixed] === '') {\r\n            return prefixed;\r\n        }\r\n    }\r\n    return property;\r\n}\r\n\r\nmodule.exports = vendorPrefix;\r\n\n},{}],33:[function(require,module,exports){\n/**\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2015 Famous Industries Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n\r\n'use strict';\r\n\r\n/**\r\n * Buffer is a private class that wraps the vertex data that defines\r\n * the the points of the triangles that webgl draws. Each buffer\r\n * maps to one attribute of a mesh.\r\n *\r\n * @class Buffer\r\n * @constructor\r\n *\r\n * @param {Number} target The bind target of the buffer to update: ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER\r\n * @param {Object} type Array type to be used in calls to gl.bufferData.\r\n * @param {WebGLContext} gl The WebGL context that the buffer is hosted by.\r\n *\r\n * @return {undefined} undefined\r\n */\r\nfunction Buffer(target, type, gl) {\r\n    this.buffer = null;\r\n    this.target = target;\r\n    this.type = type;\r\n    this.data = [];\r\n    this.gl = gl;\r\n}\r\n\r\n/**\r\n * Creates a WebGL buffer if one does not yet exist and binds the buffer to\r\n * to the context. Runs bufferData with appropriate data.\r\n *\r\n * @method\r\n *\r\n * @return {undefined} undefined\r\n */\r\nBuffer.prototype.subData = function subData() {\r\n    var gl = this.gl;\r\n    var data = [];\r\n\r\n    // to prevent against maximum call-stack issue.\r\n    for (var i = 0, chunk = 10000; i < this.data.length; i += chunk)\r\n        data = Array.prototype.concat.apply(data, this.data.slice(i, i + chunk));\r\n\r\n    this.buffer = this.buffer || gl.createBuffer();\r\n    gl.bindBuffer(this.target, this.buffer);\r\n    gl.bufferData(this.target, new this.type(data), gl.STATIC_DRAW);\r\n};\r\n\r\nmodule.exports = Buffer;\r\n\n},{}],34:[function(require,module,exports){\n/**\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2015 Famous Industries Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n\r\n'use strict';\r\n\r\nvar INDICES = 'indices';\r\n\r\nvar Buffer = require('./Buffer');\r\n\r\n/**\r\n * BufferRegistry is a class that manages allocation of buffers to\r\n * input geometries.\r\n *\r\n * @class BufferRegistry\r\n * @constructor\r\n *\r\n * @param {WebGLContext} context WebGL drawing context to be passed to buffers.\r\n *\r\n * @return {undefined} undefined\r\n */\r\nfunction BufferRegistry(context) {\r\n    this.gl = context;\r\n\r\n    this.registry = {};\r\n    this._dynamicBuffers = [];\r\n    this._staticBuffers = [];\r\n\r\n    this._arrayBufferMax = 30000;\r\n    this._elementBufferMax = 30000;\r\n}\r\n\r\n/**\r\n * Binds and fills all the vertex data into webgl buffers.  Will reuse buffers if\r\n * possible.  Populates registry with the name of the buffer, the WebGL buffer\r\n * object, spacing of the attribute, the attribute's offset within the buffer,\r\n * and finally the length of the buffer.  This information is later accessed by\r\n * the root to draw the buffers.\r\n *\r\n * @method\r\n *\r\n * @param {Number} geometryId Id of the geometry instance that holds the buffers.\r\n * @param {String} name Key of the input buffer in the geometry.\r\n * @param {Array} value Flat array containing input data for buffer.\r\n * @param {Number} spacing The spacing, or itemSize, of the input buffer.\r\n * @param {Boolean} dynamic Boolean denoting whether a geometry is dynamic or static.\r\n *\r\n * @return {undefined} undefined\r\n */\r\nBufferRegistry.prototype.allocate = function allocate(geometryId, name, value, spacing, dynamic) {\r\n    var vertexBuffers = this.registry[geometryId] || (this.registry[geometryId] = { keys: [], values: [], spacing: [], offset: [], length: [] });\r\n\r\n    var j = vertexBuffers.keys.indexOf(name);\r\n    var isIndex = name === INDICES;\r\n    var bufferFound = false;\r\n    var newOffset;\r\n    var offset = 0;\r\n    var length;\r\n    var buffer;\r\n    var k;\r\n\r\n    if (j === -1) {\r\n        j = vertexBuffers.keys.length;\r\n        length = isIndex ? value.length : Math.floor(value.length / spacing);\r\n\r\n        if (!dynamic) {\r\n\r\n            // Use a previously created buffer if available.\r\n\r\n            for (k = 0; k < this._staticBuffers.length; k++) {\r\n\r\n                if (isIndex === this._staticBuffers[k].isIndex) {\r\n                    newOffset = this._staticBuffers[k].offset + value.length;\r\n                    if ((!isIndex && newOffset < this._arrayBufferMax) || (isIndex && newOffset < this._elementBufferMax)) {\r\n                        buffer = this._staticBuffers[k].buffer;\r\n                        offset = this._staticBuffers[k].offset;\r\n                        this._staticBuffers[k].offset += value.length;\r\n                        bufferFound = true;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Create a new static buffer in none were found.\r\n\r\n            if (!bufferFound) {\r\n                buffer = new Buffer(\r\n                    isIndex ? this.gl.ELEMENT_ARRAY_BUFFER : this.gl.ARRAY_BUFFER,\r\n                    isIndex ? Uint16Array : Float32Array,\r\n                    this.gl\r\n                );\r\n\r\n                this._staticBuffers.push({ buffer: buffer, offset: value.length, isIndex: isIndex });\r\n            }\r\n        }\r\n        else {\r\n\r\n            // For dynamic geometries, always create new buffer.\r\n\r\n            buffer = new Buffer(\r\n                isIndex ? this.gl.ELEMENT_ARRAY_BUFFER : this.gl.ARRAY_BUFFER,\r\n                isIndex ? Uint16Array : Float32Array,\r\n                this.gl\r\n            );\r\n\r\n            this._dynamicBuffers.push({ buffer: buffer, offset: value.length, isIndex: isIndex });\r\n        }\r\n\r\n        // Update the registry for the spec with buffer information.\r\n\r\n        vertexBuffers.keys.push(name);\r\n        vertexBuffers.values.push(buffer);\r\n        vertexBuffers.spacing.push(spacing);\r\n        vertexBuffers.offset.push(offset);\r\n        vertexBuffers.length.push(length);\r\n    }\r\n\r\n    var len = value.length;\r\n    for (k = 0; k < len; k++) {\r\n        vertexBuffers.values[j].data[offset + k] = value[k];\r\n    }\r\n    vertexBuffers.values[j].subData();\r\n};\r\n\r\nmodule.exports = BufferRegistry;\r\n\n},{\"./Buffer\":33}],35:[function(require,module,exports){\n'use strict';\r\n\r\n/**\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2015 Famous Industries Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n\r\n/**\r\n * Takes the original rendering contexts' compiler function\r\n * and augments it with added functionality for parsing and\r\n * displaying errors.\r\n *\r\n * @method\r\n *\r\n * @returns {Function} Augmented function\r\n */\r\nfunction Debug() {\r\n    return _augmentFunction(\r\n        this.gl.compileShader,\r\n        function(shader) {\r\n            if (!this.getShaderParameter(shader, this.COMPILE_STATUS)) {\r\n                var errors = this.getShaderInfoLog(shader);\r\n                var source = this.getShaderSource(shader);\r\n                _processErrors(errors, source);\r\n            }\r\n        }\r\n    );\r\n}\r\n\r\n// Takes a function, keeps the reference and replaces it by a closure that\r\n// executes the original function and the provided callback.\r\nfunction _augmentFunction(func, callback) {\r\n    return function() {\r\n        var res = func.apply(this, arguments);\r\n        callback.apply(this, arguments);\r\n        return res;\r\n    };\r\n}\r\n\r\n// Parses errors and failed source code from shaders in order\r\n// to build displayable error blocks.\r\n// Inspired by Jaume Sanchez Elias.\r\nfunction _processErrors(errors, source) {\r\n\r\n    var css = 'body,html{background:#e3e3e3;font-family:monaco,monospace;font-size:14px;line-height:1.7em}' +\r\n              '#shaderReport{left:0;top:0;right:0;box-sizing:border-box;position:absolute;z-index:1000;color:' +\r\n              '#222;padding:15px;white-space:normal;list-style-type:none;margin:50px auto;max-width:1200px}' +\r\n              '#shaderReport li{background-color:#fff;margin:13px 0;box-shadow:0 1px 2px rgba(0,0,0,.15);' +\r\n              'padding:20px 30px;border-radius:2px;border-left:20px solid #e01111}span{color:#e01111;' +\r\n              'text-decoration:underline;font-weight:700}#shaderReport li p{padding:0;margin:0}' +\r\n              '#shaderReport li:nth-child(even){background-color:#f4f4f4}' +\r\n              '#shaderReport li p:first-child{margin-bottom:10px;color:#666}';\r\n\r\n    var el = document.createElement('style');\r\n    document.getElementsByTagName('head')[0].appendChild(el);\r\n    el.textContent = css;\r\n\r\n    var report = document.createElement('ul');\r\n    report.setAttribute('id', 'shaderReport');\r\n    document.body.appendChild(report);\r\n\r\n    var re = /ERROR: [\\d]+:([\\d]+): (.+)/gmi;\r\n    var lines = source.split('\\n');\r\n\r\n    var m;\r\n    while ((m = re.exec(errors)) != null) {\r\n        if (m.index === re.lastIndex) re.lastIndex++;\r\n        var li = document.createElement('li');\r\n        var code = '<p><span>ERROR</span> \"' + m[2] + '\" in line ' + m[1] + '</p>';\r\n        code += '<p><b>' + lines[m[1] - 1].replace(/^[ \\t]+/g, '') + '</b></p>';\r\n        li.innerHTML = code;\r\n        report.appendChild(li);\r\n    }\r\n}\r\n\r\nmodule.exports = Debug;\r\n\n},{}],36:[function(require,module,exports){\n/**\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2015 Famous Industries Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n\r\n'use strict';\r\n\r\nvar clone = require('../utilities/clone');\r\nvar keyValueToArrays = require('../utilities/keyValueToArrays');\r\n\r\nvar vertexWrapper = require('../webgl-shaders').vertex;\r\nvar fragmentWrapper = require('../webgl-shaders').fragment;\r\nvar Debug = require('./Debug');\r\n\r\nvar VERTEX_SHADER = 35633;\r\nvar FRAGMENT_SHADER = 35632;\r\nvar identityMatrix = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\r\n\r\nvar header = 'precision mediump float;\\n';\r\n\r\nvar TYPES = {\r\n    undefined: 'float ',\r\n    1: 'float ',\r\n    2: 'vec2 ',\r\n    3: 'vec3 ',\r\n    4: 'vec4 ',\r\n    16: 'mat4 '\r\n};\r\n\r\nvar inputTypes = {\r\n    u_baseColor: 'vec4',\r\n    u_normals: 'vert',\r\n    u_glossiness: 'vec4',\r\n    u_positionOffset: 'vert'\r\n};\r\n\r\nvar masks =  {\r\n    vert: 1,\r\n    vec3: 2,\r\n    vec4: 4,\r\n    float: 8\r\n};\r\n\r\n/**\r\n * Uniform keys and values\r\n */\r\nvar uniforms = keyValueToArrays({\r\n    u_perspective: identityMatrix,\r\n    u_view: identityMatrix,\r\n    u_resolution: [0, 0, 0],\r\n    u_transform: identityMatrix,\r\n    u_size: [1, 1, 1],\r\n    u_time: 0,\r\n    u_opacity: 1,\r\n    u_metalness: 0,\r\n    u_glossiness: [0, 0, 0, 0],\r\n    u_baseColor: [1, 1, 1, 1],\r\n    u_normals: [1, 1, 1],\r\n    u_positionOffset: [0, 0, 0],\r\n    u_lightPosition: identityMatrix,\r\n    u_lightColor: identityMatrix,\r\n    u_ambientLight: [0, 0, 0],\r\n    u_flatShading: 0,\r\n    u_numLights: 0\r\n});\r\n\r\n/**\r\n * Attributes keys and values\r\n */\r\nvar attributes = keyValueToArrays({\r\n    a_pos: [0, 0, 0],\r\n    a_texCoord: [0, 0],\r\n    a_normals: [0, 0, 0]\r\n});\r\n\r\n/**\r\n * Varyings keys and values\r\n */\r\nvar varyings = keyValueToArrays({\r\n    v_textureCoordinate: [0, 0],\r\n    v_normal: [0, 0, 0],\r\n    v_position: [0, 0, 0],\r\n    v_eyeVector: [0, 0, 0]\r\n});\r\n\r\n/**\r\n * A class that handles interactions with the WebGL shader program\r\n * used by a specific context.  It manages creation of the shader program\r\n * and the attached vertex and fragment shaders.  It is also in charge of\r\n * passing all uniforms to the WebGLContext.\r\n *\r\n * @class Program\r\n * @constructor\r\n *\r\n * @param {WebGL_Context} gl Context to be used to create the shader program\r\n * @param {Object} options Program options\r\n *\r\n * @return {undefined} undefined\r\n */\r\nfunction Program(gl, options) {\r\n    this.gl = gl;\r\n    this.options = options || {};\r\n\r\n    this.registeredMaterials = {};\r\n    this.cachedUniforms = {};\r\n    this.uniformTypes = [];\r\n\r\n    this.definitionVec4 = [];\r\n    this.definitionVec3 = [];\r\n    this.definitionFloat = [];\r\n    this.applicationVec3 = [];\r\n    this.applicationVec4 = [];\r\n    this.applicationFloat = [];\r\n    this.applicationVert = [];\r\n    this.definitionVert = [];\r\n\r\n    if (this.options.debug) {\r\n        this.gl.compileShader = Debug.call(this);\r\n    }\r\n\r\n    this.resetProgram();\r\n}\r\n\r\n/**\r\n * Determines whether a material has already been registered to\r\n * the shader program.\r\n *\r\n * @method\r\n *\r\n * @param {String} name Name of target input of material.\r\n * @param {Object} material Compiled material object being verified.\r\n *\r\n * @return {Program} this Current program.\r\n */\r\nProgram.prototype.registerMaterial = function registerMaterial(name, material) {\r\n    var compiled = material;\r\n    var type = inputTypes[name];\r\n    var mask = masks[type];\r\n\r\n    if ((this.registeredMaterials[material._id] & mask) === mask) return this;\r\n\r\n    var k;\r\n\r\n    for (k in compiled.uniforms) {\r\n        if (uniforms.keys.indexOf(k) === -1) {\r\n            uniforms.keys.push(k);\r\n            uniforms.values.push(compiled.uniforms[k]);\r\n        }\r\n    }\r\n\r\n    for (k in compiled.varyings) {\r\n        if (varyings.keys.indexOf(k) === -1) {\r\n            varyings.keys.push(k);\r\n            varyings.values.push(compiled.varyings[k]);\r\n        }\r\n    }\r\n\r\n    for (k in compiled.attributes) {\r\n        if (attributes.keys.indexOf(k) === -1) {\r\n            attributes.keys.push(k);\r\n            attributes.values.push(compiled.attributes[k]);\r\n        }\r\n    }\r\n\r\n    this.registeredMaterials[material._id] |= mask;\r\n\r\n    if (type === 'float') {\r\n        this.definitionFloat.push(material.defines);\r\n        this.definitionFloat.push('float fa_' + material._id + '() {\\n '  + compiled.glsl + ' \\n}');\r\n        this.applicationFloat.push('if (int(abs(ID)) == ' + material._id + ') return fa_' + material._id  + '();');\r\n    }\r\n\r\n    if (type === 'vec3') {\r\n        this.definitionVec3.push(material.defines);\r\n        this.definitionVec3.push('vec3 fa_' + material._id + '() {\\n '  + compiled.glsl + ' \\n}');\r\n        this.applicationVec3.push('if (int(abs(ID.x)) == ' + material._id + ') return fa_' + material._id + '();');\r\n    }\r\n\r\n    if (type === 'vec4') {\r\n        this.definitionVec4.push(material.defines);\r\n        this.definitionVec4.push('vec4 fa_' + material._id + '() {\\n '  + compiled.glsl + ' \\n}');\r\n        this.applicationVec4.push('if (int(abs(ID.x)) == ' + material._id + ') return fa_' + material._id + '();');\r\n    }\r\n\r\n    if (type === 'vert') {\r\n        this.definitionVert.push(material.defines);\r\n        this.definitionVert.push('vec3 fa_' + material._id + '() {\\n '  + compiled.glsl + ' \\n}');\r\n        this.applicationVert.push('if (int(abs(ID.x)) == ' + material._id + ') return fa_' + material._id + '();');\r\n    }\r\n\r\n    return this.resetProgram();\r\n};\r\n\r\n/**\r\n * Clears all cached uniforms and attribute locations.  Assembles\r\n * new fragment and vertex shaders and based on material from\r\n * currently registered materials.  Attaches said shaders to new\r\n * shader program and upon success links program to the WebGL\r\n * context.\r\n *\r\n * @method\r\n *\r\n * @return {Program} Current program.\r\n */\r\nProgram.prototype.resetProgram = function resetProgram() {\r\n    var vertexHeader = [header];\r\n    var fragmentHeader = [header];\r\n\r\n    var fragmentSource;\r\n    var vertexSource;\r\n    var program;\r\n    var name;\r\n    var value;\r\n    var i;\r\n\r\n    this.uniformLocations   = [];\r\n    this.attributeLocations = {};\r\n\r\n    this.uniformTypes = {};\r\n\r\n    this.attributeNames = clone(attributes.keys);\r\n    this.attributeValues = clone(attributes.values);\r\n\r\n    this.varyingNames = clone(varyings.keys);\r\n    this.varyingValues = clone(varyings.values);\r\n\r\n    this.uniformNames = clone(uniforms.keys);\r\n    this.uniformValues = clone(uniforms.values);\r\n\r\n    this.cachedUniforms = {};\r\n\r\n    fragmentHeader.push('uniform sampler2D u_textures[7];\\n');\r\n\r\n    if (this.applicationVert.length) {\r\n        vertexHeader.push('uniform sampler2D u_textures[7];\\n');\r\n    }\r\n\r\n    for(i = 0; i < this.uniformNames.length; i++) {\r\n        name = this.uniformNames[i];\r\n        value = this.uniformValues[i];\r\n        vertexHeader.push('uniform ' + TYPES[value.length] + name + ';\\n');\r\n        fragmentHeader.push('uniform ' + TYPES[value.length] + name + ';\\n');\r\n    }\r\n\r\n    for(i = 0; i < this.attributeNames.length; i++) {\r\n        name = this.attributeNames[i];\r\n        value = this.attributeValues[i];\r\n        vertexHeader.push('attribute ' + TYPES[value.length] + name + ';\\n');\r\n    }\r\n\r\n    for(i = 0; i < this.varyingNames.length; i++) {\r\n        name = this.varyingNames[i];\r\n        value = this.varyingValues[i];\r\n        vertexHeader.push('varying ' + TYPES[value.length]  + name + ';\\n');\r\n        fragmentHeader.push('varying ' + TYPES[value.length] + name + ';\\n');\r\n    }\r\n\r\n    vertexSource = vertexHeader.join('') + vertexWrapper\r\n        .replace('#vert_definitions', this.definitionVert.join('\\n'))\r\n        .replace('#vert_applications', this.applicationVert.join('\\n'));\r\n\r\n    fragmentSource = fragmentHeader.join('') + fragmentWrapper\r\n        .replace('#vec3_definitions', this.definitionVec3.join('\\n'))\r\n        .replace('#vec3_applications', this.applicationVec3.join('\\n'))\r\n        .replace('#vec4_definitions', this.definitionVec4.join('\\n'))\r\n        .replace('#vec4_applications', this.applicationVec4.join('\\n'))\r\n        .replace('#float_definitions', this.definitionFloat.join('\\n'))\r\n        .replace('#float_applications', this.applicationFloat.join('\\n'));\r\n\r\n    program = this.gl.createProgram();\r\n\r\n    this.gl.attachShader(\r\n        program,\r\n        this.compileShader(this.gl.createShader(VERTEX_SHADER), vertexSource)\r\n    );\r\n\r\n    this.gl.attachShader(\r\n        program,\r\n        this.compileShader(this.gl.createShader(FRAGMENT_SHADER), fragmentSource)\r\n    );\r\n\r\n    this.gl.linkProgram(program);\r\n\r\n    if (! this.gl.getProgramParameter(program, this.gl.LINK_STATUS)) {\r\n        console.error('link error: ' + this.gl.getProgramInfoLog(program));\r\n        this.program = null;\r\n    }\r\n    else {\r\n        this.program = program;\r\n        this.gl.useProgram(this.program);\r\n    }\r\n\r\n    this.setUniforms(this.uniformNames, this.uniformValues);\r\n\r\n    var textureLocation = this.gl.getUniformLocation(this.program, 'u_textures[0]');\r\n    this.gl.uniform1iv(textureLocation, [0, 1, 2, 3, 4, 5, 6]);\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * Compares the value of the input uniform value against\r\n * the cached value stored on the Program class.  Updates and\r\n * creates new entries in the cache when necessary.\r\n *\r\n * @method\r\n * @param {String} targetName Key of uniform spec being evaluated.\r\n * @param {Number|Array} value Value of uniform spec being evaluated.\r\n *\r\n * @return {Boolean} boolean Indicating whether the uniform being set is cached.\r\n */\r\nProgram.prototype.uniformIsCached = function(targetName, value) {\r\n    if(this.cachedUniforms[targetName] == null) {\r\n        if (value.length) {\r\n            this.cachedUniforms[targetName] = new Float32Array(value);\r\n        }\r\n        else {\r\n            this.cachedUniforms[targetName] = value;\r\n        }\r\n        return false;\r\n    }\r\n    else if (value.length) {\r\n        var i = value.length;\r\n        while (i--) {\r\n            if(value[i] !== this.cachedUniforms[targetName][i]) {\r\n                i = value.length;\r\n                while(i--) this.cachedUniforms[targetName][i] = value[i];\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n\r\n    else if (this.cachedUniforms[targetName] !== value) {\r\n        this.cachedUniforms[targetName] = value;\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n};\r\n\r\n/**\r\n * Handles all passing of uniforms to WebGL drawing context.  This\r\n * function will find the uniform location and then, based on\r\n * a type inferred from the javascript value of the uniform, it will call\r\n * the appropriate function to pass the uniform to WebGL.  Finally,\r\n * setUniforms will iterate through the passed in shaderChunks (if any)\r\n * and set the appropriate uniforms to specify which chunks to use.\r\n *\r\n * @method\r\n * @param {Array} uniformNames Array containing the keys of all uniforms to be set.\r\n * @param {Array} uniformValue Array containing the values of all uniforms to be set.\r\n *\r\n * @return {Program} Current program.\r\n */\r\nProgram.prototype.setUniforms = function (uniformNames, uniformValue) {\r\n    var gl = this.gl;\r\n    var location;\r\n    var value;\r\n    var name;\r\n    var len;\r\n    var i;\r\n\r\n    if (!this.program) return this;\r\n\r\n    len = uniformNames.length;\r\n    for (i = 0; i < len; i++) {\r\n        name = uniformNames[i];\r\n        value = uniformValue[i];\r\n\r\n        // Retreive the cached location of the uniform,\r\n        // requesting a new location from the WebGL context\r\n        // if it does not yet exist.\r\n\r\n        location = this.uniformLocations[name];\r\n\r\n        if (location === null) continue;\r\n        if (location === undefined) {\r\n            location = gl.getUniformLocation(this.program, name);\r\n            this.uniformLocations[name] = location;\r\n        }\r\n\r\n        // Check if the value is already set for the\r\n        // given uniform.\r\n        if (this.uniformIsCached(name, value)) continue;\r\n\r\n        // Determine the correct function and pass the uniform\r\n        // value to WebGL.\r\n        if (!this.uniformTypes[name]) {\r\n            this.uniformTypes[name] = this.getUniformTypeFromValue(value);\r\n        }\r\n\r\n        // Call uniform setter function on WebGL context with correct value\r\n\r\n        switch (this.uniformTypes[name]) {\r\n            case 'uniform4fv': gl.uniform4fv(location, value); break;\r\n            case 'uniform3fv': gl.uniform3fv(location, value); break;\r\n            case 'uniform2fv': gl.uniform2fv(location, value); break;\r\n            case 'uniform1fv': gl.uniform1fv(location, value); break;\r\n            case 'uniform1f' : gl.uniform1f(location, value); break;\r\n            case 'uniformMatrix3fv': gl.uniformMatrix3fv(location, false, value); break;\r\n            case 'uniformMatrix4fv': gl.uniformMatrix4fv(location, false, value); break;\r\n        }\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * Infers uniform setter function to be called on the WebGL context, based\r\n * on an input value.\r\n *\r\n * @method\r\n *\r\n * @param {Number|Array} value Value from which uniform type is inferred.\r\n *\r\n * @return {String} Name of uniform function for given value.\r\n */\r\nProgram.prototype.getUniformTypeFromValue = function getUniformTypeFromValue(value) {\r\n    if (Array.isArray(value) || value instanceof Float32Array) {\r\n        switch (value.length) {\r\n            case 1:  return 'uniform1fv';\r\n            case 2:  return 'uniform2fv';\r\n            case 3:  return 'uniform3fv';\r\n            case 4:  return 'uniform4fv';\r\n            case 9:  return 'uniformMatrix3fv';\r\n            case 16: return 'uniformMatrix4fv';\r\n        }\r\n    }\r\n    else if (!isNaN(parseFloat(value)) && isFinite(value)) {\r\n        return 'uniform1f';\r\n    }\r\n\r\n    throw 'cant load uniform \"' + name + '\" with value:' + JSON.stringify(value);\r\n};\r\n\r\n/**\r\n * Adds shader source to shader and compiles the input shader.  Checks\r\n * compile status and logs error if necessary.\r\n *\r\n * @method\r\n *\r\n * @param {Object} shader Program to be compiled.\r\n * @param {String} source Source to be used in the shader.\r\n *\r\n * @return {Object} Compiled shader.\r\n */\r\nProgram.prototype.compileShader = function compileShader(shader, source) {\r\n    var i = 1;\r\n\r\n    this.gl.shaderSource(shader, source);\r\n    this.gl.compileShader(shader);\r\n    if (!this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS)) {\r\n        console.error('compile error: ' + this.gl.getShaderInfoLog(shader));\r\n        console.error('1: ' + source.replace(/\\n/g, function () {\r\n            return '\\n' + (i+=1) + ': ';\r\n        }));\r\n    }\r\n\r\n    return shader;\r\n};\r\n\r\nmodule.exports = Program;\r\n\n},{\"../utilities/clone\":30,\"../utilities/keyValueToArrays\":31,\"../webgl-shaders\":43,\"./Debug\":35}],37:[function(require,module,exports){\n/**\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2015 Famous Industries Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n\r\n'use strict';\r\n\r\n/**\r\n * Texture is a private class that stores image data\r\n * to be accessed from a shader or used as a render target.\r\n *\r\n * @class Texture\r\n * @constructor\r\n *\r\n * @param {GL} gl GL\r\n * @param {Object} options Options\r\n *\r\n * @return {undefined} undefined\r\n */\r\nfunction Texture(gl, options) {\r\n    options = options || {};\r\n    this.id = gl.createTexture();\r\n    this.width = options.width || 0;\r\n    this.height = options.height || 0;\r\n    this.mipmap = options.mipmap;\r\n    this.format = options.format || 'RGBA';\r\n    this.type = options.type || 'UNSIGNED_BYTE';\r\n    this.gl = gl;\r\n\r\n    this.bind();\r\n\r\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, options.flipYWebgl || false);\r\n    gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, options.premultiplyAlphaWebgl || false);\r\n\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl[options.magFilter] || gl.NEAREST);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl[options.minFilter] || gl.NEAREST);\r\n\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl[options.wrapS] || gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl[options.wrapT] || gl.CLAMP_TO_EDGE);\r\n}\r\n\r\n/**\r\n * Binds this texture as the selected target.\r\n *\r\n * @method\r\n * @return {Object} Current texture instance.\r\n */\r\nTexture.prototype.bind = function bind() {\r\n    this.gl.bindTexture(this.gl.TEXTURE_2D, this.id);\r\n    return this;\r\n};\r\n\r\n/**\r\n * Erases the texture data in the given texture slot.\r\n *\r\n * @method\r\n * @return {Object} Current texture instance.\r\n */\r\nTexture.prototype.unbind = function unbind() {\r\n    this.gl.bindTexture(this.gl.TEXTURE_2D, null);\r\n    return this;\r\n};\r\n\r\n/**\r\n * Replaces the image data in the texture with the given image.\r\n *\r\n * @method\r\n *\r\n * @param {Image}   img     The image object to upload pixel data from.\r\n * @return {Object}         Current texture instance.\r\n */\r\nTexture.prototype.setImage = function setImage(img) {\r\n    this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl[this.format], this.gl[this.format], this.gl[this.type], img);\r\n    if (this.mipmap) this.gl.generateMipmap(this.gl.TEXTURE_2D);\r\n    return this;\r\n};\r\n\r\n/**\r\n * Replaces the image data in the texture with an array of arbitrary data.\r\n *\r\n * @method\r\n *\r\n * @param {Array}   input   Array to be set as data to texture.\r\n * @return {Object}         Current texture instance.\r\n */\r\nTexture.prototype.setArray = function setArray(input) {\r\n    this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl[this.format], this.width, this.height, 0, this.gl[this.format], this.gl[this.type], input);\r\n    return this;\r\n};\r\n\r\n/**\r\n * Dumps the rgb-pixel contents of a texture into an array for debugging purposes\r\n *\r\n * @method\r\n *\r\n * @param {Number} x        x-offset between texture coordinates and snapshot\r\n * @param {Number} y        y-offset between texture coordinates and snapshot\r\n * @param {Number} width    x-depth of the snapshot\r\n * @param {Number} height   y-depth of the snapshot\r\n *\r\n * @return {Array}          An array of the pixels contained in the snapshot.\r\n */\r\nTexture.prototype.readBack = function readBack(x, y, width, height) {\r\n    var gl = this.gl;\r\n    var pixels;\r\n    x = x || 0;\r\n    y = y || 0;\r\n    width = width || this.width;\r\n    height = height || this.height;\r\n    var fb = gl.createFramebuffer();\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, fb);\r\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.id, 0);\r\n    if (gl.checkFramebufferStatus(gl.FRAMEBUFFER) === gl.FRAMEBUFFER_COMPLETE) {\r\n        pixels = new Uint8Array(width * height * 4);\r\n        gl.readPixels(x, y, width, height, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\r\n    }\r\n    return pixels;\r\n};\r\n\r\nmodule.exports = Texture;\r\n\n},{}],38:[function(require,module,exports){\n/**\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2015 Famous Industries Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n'use strict';\r\n\r\nvar Texture = require('./Texture');\r\nvar createCheckerboard = require('./createCheckerboard');\r\n\r\n/**\r\n * Handles loading, binding, and resampling of textures for WebGLRenderer.\r\n *\r\n * @class TextureManager\r\n * @constructor\r\n *\r\n * @param {WebGL_Context} gl Context used to create and bind textures.\r\n *\r\n * @return {undefined} undefined\r\n */\r\nfunction TextureManager(gl) {\r\n    this.registry = [];\r\n    this._needsResample = [];\r\n\r\n    this._activeTexture = 0;\r\n    this._boundTexture = null;\r\n\r\n    this._checkerboard = createCheckerboard();\r\n\r\n    this.gl = gl;\r\n}\r\n\r\n/**\r\n * Update function used by WebGLRenderer to queue resamples on\r\n * registered textures.\r\n *\r\n * @method\r\n *\r\n * @param {Number}      time    Time in milliseconds according to the compositor.\r\n * @return {undefined}          undefined\r\n */\r\nTextureManager.prototype.update = function update(time) {\r\n    var registryLength = this.registry.length;\r\n\r\n    for (var i = 1; i < registryLength; i++) {\r\n        var texture = this.registry[i];\r\n\r\n        if (texture && texture.isLoaded && texture.resampleRate) {\r\n            if (!texture.lastResample || time - texture.lastResample > texture.resampleRate) {\r\n                if (!this._needsResample[texture.id]) {\r\n                    this._needsResample[texture.id] = true;\r\n                    texture.lastResample = time;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Creates a spec and creates a texture based on given texture data.\r\n * Handles loading assets if necessary.\r\n *\r\n * @method\r\n *\r\n * @param {Object}  input   Object containing texture id, texture data\r\n *                          and options used to draw texture.\r\n * @param {Number}  slot    Texture slot to bind generated texture to.\r\n * @return {undefined}      undefined\r\n */\r\nTextureManager.prototype.register = function register(input, slot) {\r\n    var _this = this;\r\n\r\n    var source = input.data;\r\n    var textureId = input.id;\r\n    var options = input.options || {};\r\n    var texture = this.registry[textureId];\r\n    var spec;\r\n\r\n    if (!texture) {\r\n\r\n        texture = new Texture(this.gl, options);\r\n        texture.setImage(this._checkerboard);\r\n\r\n        // Add texture to registry\r\n\r\n        spec = this.registry[textureId] = {\r\n            resampleRate: options.resampleRate || null,\r\n            lastResample: null,\r\n            isLoaded: false,\r\n            texture: texture,\r\n            source: source,\r\n            id: textureId,\r\n            slot: slot\r\n        };\r\n\r\n        // Handle array\r\n\r\n        if (Array.isArray(source) || source instanceof Uint8Array || source instanceof Float32Array) {\r\n            this.bindTexture(textureId);\r\n            texture.setArray(source);\r\n            spec.isLoaded = true;\r\n        }\r\n\r\n        // Handle video\r\n\r\n        else if (source instanceof HTMLVideoElement) {\r\n            source.addEventListener('loadeddata', function() {\r\n                _this.bindTexture(textureId);\r\n                texture.setImage(source);\r\n\r\n                spec.isLoaded = true;\r\n                spec.source = source;\r\n            });\r\n        }\r\n\r\n        // Handle image url\r\n\r\n        else if (typeof source === 'string') {\r\n            loadImage(source, function (img) {\r\n                _this.bindTexture(textureId);\r\n                texture.setImage(img);\r\n\r\n                spec.isLoaded = true;\r\n                spec.source = img;\r\n            });\r\n        }\r\n    }\r\n\r\n    return textureId;\r\n};\r\n\r\n/**\r\n * Loads an image from a string or Image object and executes a callback function.\r\n *\r\n * @method\r\n * @private\r\n *\r\n * @param {Object|String} input The input image data to load as an asset.\r\n * @param {Function} callback The callback function to be fired when the image has finished loading.\r\n *\r\n * @return {Object} Image object being loaded.\r\n */\r\nfunction loadImage (input, callback) {\r\n    var image = (typeof input === 'string' ? new Image() : input) || {};\r\n        image.crossOrigin = 'anonymous';\r\n\r\n    if (!image.src) image.src = input;\r\n    if (!image.complete) {\r\n        image.onload = function () {\r\n            callback(image);\r\n        };\r\n    }\r\n    else {\r\n        callback(image);\r\n    }\r\n\r\n    return image;\r\n}\r\n\r\n/**\r\n * Sets active texture slot and binds target texture.  Also handles\r\n * resampling when necessary.\r\n *\r\n * @method\r\n *\r\n * @param {Number} id Identifier used to retreive texture spec\r\n *\r\n * @return {undefined} undefined\r\n */\r\nTextureManager.prototype.bindTexture = function bindTexture(id) {\r\n    var spec = this.registry[id];\r\n\r\n    if (this._activeTexture !== spec.slot) {\r\n        this.gl.activeTexture(this.gl.TEXTURE0 + spec.slot);\r\n        this._activeTexture = spec.slot;\r\n    }\r\n\r\n    if (this._boundTexture !== id) {\r\n        this._boundTexture = id;\r\n        spec.texture.bind();\r\n    }\r\n\r\n    if (this._needsResample[spec.id]) {\r\n\r\n        // TODO: Account for resampling of arrays.\r\n\r\n        spec.texture.setImage(spec.source);\r\n        this._needsResample[spec.id] = false;\r\n    }\r\n};\r\n\r\nmodule.exports = TextureManager;\r\n\n},{\"./Texture\":37,\"./createCheckerboard\":41}],39:[function(require,module,exports){\n/**\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2015 Famous Industries Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n\r\n'use strict';\r\n\r\nvar Program = require('./Program');\r\nvar BufferRegistry = require('./BufferRegistry');\r\nvar sorter = require('./radixSort');\r\nvar keyValueToArrays = require('../utilities/keyValueToArrays');\r\nvar TextureManager = require('./TextureManager');\r\nvar compileMaterial = require('./compileMaterial');\r\nvar Registry = require('../utilities/Registry');\r\n\r\nvar identity = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\r\n\r\nvar globalUniforms = keyValueToArrays({\r\n    'u_numLights': 0,\r\n    'u_ambientLight': new Array(3),\r\n    'u_lightPosition': new Array(3),\r\n    'u_lightColor': new Array(3),\r\n    'u_perspective': new Array(16),\r\n    'u_time': 0,\r\n    'u_view': new Array(16)\r\n});\r\n\r\n/**\r\n * WebGLRenderer is a private class that manages all interactions with the WebGL\r\n * API. Each frame it receives commands from the compositor and updates its\r\n * registries accordingly. Subsequently, the draw function is called and the\r\n * WebGLRenderer issues draw calls for all meshes in its registry.\r\n *\r\n * @class WebGLRenderer\r\n * @constructor\r\n *\r\n * @param {Element} canvas The DOM element that GL will paint itself onto.\r\n * @param {Compositor} compositor Compositor used for querying the time from.\r\n *\r\n * @return {undefined} undefined\r\n */\r\nfunction WebGLRenderer(canvas, compositor) {\r\n    canvas.classList.add('famous-webgl-renderer');\r\n\r\n    this.canvas = canvas;\r\n    this.compositor = compositor;\r\n\r\n    var gl = this.gl = this.getWebGLContext(this.canvas);\r\n\r\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\r\n    gl.polygonOffset(0.1, 0.1);\r\n    gl.enable(gl.POLYGON_OFFSET_FILL);\r\n    gl.enable(gl.DEPTH_TEST);\r\n    gl.enable(gl.BLEND);\r\n    gl.depthFunc(gl.LEQUAL);\r\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\r\n    gl.enable(gl.CULL_FACE);\r\n    gl.cullFace(gl.BACK);\r\n\r\n    this.meshRegistry = new Registry();\r\n    this.cutoutRegistry = new Registry();\r\n    this.lightRegistry = new Registry();\r\n\r\n    this.numLights = 0;\r\n    this.ambientLightColor = [0, 0, 0];\r\n    this.lightPositions = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n    this.lightColors = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n\r\n    this.textureManager = new TextureManager(gl);\r\n    this.bufferRegistry = new BufferRegistry(gl);\r\n    this.program = new Program(gl, { debug: true });\r\n\r\n    this.state = {\r\n        boundArrayBuffer: null,\r\n        boundElementBuffer: null,\r\n        lastDrawn: null,\r\n        enabledAttributes: {},\r\n        enabledAttributesKeys: []\r\n    };\r\n\r\n    this.resolutionName = ['u_resolution'];\r\n    this.resolutionValues = [[0, 0, 0]];\r\n\r\n    this.cachedSize = [];\r\n\r\n    /*\r\n    The projectionTransform has some constant components, i.e. the z scale, and the x and y translation.\r\n\r\n    The z scale keeps the final z position of any vertex within the clip's domain by scaling it by an\r\n    arbitrarily small coefficient. This has the advantage of being a useful default in the event of the\r\n    user forgoing a near and far plane, an alien convention in dom space as in DOM overlapping is\r\n    conducted via painter's algorithm.\r\n\r\n    The x and y translation transforms the world space origin to the top left corner of the screen.\r\n\r\n    The final component (this.projectionTransform[15]) is initialized as 1 because certain projection models,\r\n    e.g. the WC3 specified model, keep the XY plane as the projection hyperplane.\r\n    */\r\n    this.projectionTransform = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, -0.000001, 0, -1, 1, 0, 1];\r\n\r\n    // TODO: remove this hack\r\n\r\n    var cutout = this.cutoutGeometry = {\r\n        spec: {\r\n            id: -1,\r\n            bufferValues: [[-1, -1, 0, 1, -1, 0, -1, 1, 0, 1, 1, 0]],\r\n            bufferNames: ['a_pos'],\r\n            type: 'TRIANGLE_STRIP'\r\n        }\r\n    };\r\n\r\n    this.bufferRegistry.allocate(\r\n        this.cutoutGeometry.spec.id,\r\n        cutout.spec.bufferNames[0],\r\n        cutout.spec.bufferValues[0],\r\n        3\r\n    );\r\n}\r\n\r\n/**\r\n * Attempts to retreive the WebGLRenderer context using several\r\n * accessors. For browser compatability. Throws on error.\r\n *\r\n * @method\r\n *\r\n * @param {Object} canvas Canvas element from which the context is retreived\r\n *\r\n * @return {Object} WebGLContext WebGL context\r\n */\r\nWebGLRenderer.prototype.getWebGLContext = function getWebGLContext(canvas) {\r\n    var names = ['webgl', 'experimental-webgl', 'webkit-3d', 'moz-webgl'];\r\n    var context;\r\n\r\n    for (var i = 0, len = names.length; i < len; i++) {\r\n        try {\r\n            context = canvas.getContext(names[i]);\r\n        }\r\n        catch (error) {\r\n            console.error('Error creating WebGL context: ' + error.toString());\r\n        }\r\n        if (context) return context;\r\n    }\r\n\r\n    if (!context) {\r\n        console.error('Could not retrieve WebGL context. Please refer to https://www.khronos.org/webgl/ for requirements');\r\n        return false;\r\n    }\r\n\r\n};\r\n\r\n/**\r\n * Adds a new base spec to the light registry at a given path.\r\n *\r\n * @method\r\n *\r\n * @param {String} path Path used as id of new light in lightRegistry\r\n *\r\n * @return {Object} Newly created light spec\r\n */\r\nWebGLRenderer.prototype.createLight = function createLight(path) {\r\n    this.numLights++;\r\n    var light = {\r\n        color: [0, 0, 0],\r\n        position: [0, 0, 0]\r\n    };\r\n    this.lightRegistry.register(path, light);\r\n    return light;\r\n};\r\n\r\n/**\r\n * Adds a new base spec to the mesh registry at a given path.\r\n *\r\n * @method\r\n *\r\n * @param {String} path Path used as id of new mesh in meshRegistry.\r\n *\r\n * @return {Object} Newly created mesh spec.\r\n */\r\nWebGLRenderer.prototype.createMesh = function createMesh(path) {\r\n    var uniforms = keyValueToArrays({\r\n        u_opacity: 1,\r\n        u_transform: identity,\r\n        u_size: [0, 0, 0],\r\n        u_baseColor: [0.5, 0.5, 0.5, 1],\r\n        u_positionOffset: [0, 0, 0],\r\n        u_normals: [0, 0, 0],\r\n        u_flatShading: 0,\r\n        u_glossiness: [0, 0, 0, 0]\r\n    });\r\n    var mesh = {\r\n        depth: null,\r\n        uniformKeys: uniforms.keys,\r\n        uniformValues: uniforms.values,\r\n        buffers: {},\r\n        geometry: null,\r\n        drawType: null,\r\n        textures: [],\r\n        visible: true\r\n    };\r\n\r\n    this.meshRegistry.register(path, mesh);\r\n    return mesh;\r\n};\r\n\r\n/**\r\n * Sets flag on indicating whether to do skip draw phase for\r\n * cutout mesh at given path.\r\n *\r\n * @method\r\n *\r\n * @param {String} path Path used as id of target cutout mesh.\r\n * @param {Boolean} usesCutout Indicates the presence of a cutout mesh\r\n *\r\n * @return {undefined} undefined\r\n */\r\nWebGLRenderer.prototype.setCutoutState = function setCutoutState(path, usesCutout) {\r\n    var cutout = this.getOrSetCutout(path);\r\n\r\n    cutout.visible = usesCutout;\r\n};\r\n\r\n/**\r\n * Creates or retreives cutout\r\n *\r\n * @method\r\n *\r\n * @param {String} path Path used as id of target cutout mesh.\r\n *\r\n * @return {Object} Newly created cutout spec.\r\n */\r\nWebGLRenderer.prototype.getOrSetCutout = function getOrSetCutout(path) {\r\n    var cutout = this.cutoutRegistry.get(path);\r\n\r\n    if (!cutout) {\r\n        var uniforms = keyValueToArrays({\r\n            u_opacity: 0,\r\n            u_transform: identity.slice(),\r\n            u_size: [0, 0, 0],\r\n            u_origin: [0, 0, 0],\r\n            u_baseColor: [0, 0, 0, 1]\r\n        });\r\n\r\n        cutout = {\r\n            uniformKeys: uniforms.keys,\r\n            uniformValues: uniforms.values,\r\n            geometry: this.cutoutGeometry.spec.id,\r\n            drawType: this.cutoutGeometry.spec.type,\r\n            visible: true\r\n        };\r\n\r\n        this.cutoutRegistry.register(path, cutout);\r\n    }\r\n\r\n    return cutout;\r\n};\r\n\r\n/**\r\n * Sets flag on indicating whether to do skip draw phase for\r\n * mesh at given path.\r\n *\r\n * @method\r\n * @param {String} path Path used as id of target mesh.\r\n * @param {Boolean} visibility Indicates the visibility of target mesh.\r\n *\r\n * @return {undefined} undefined\r\n */\r\nWebGLRenderer.prototype.setMeshVisibility = function setMeshVisibility(path, visibility) {\r\n    var mesh = this.meshRegistry.get(path) || this.createMesh(path);\r\n\r\n    mesh.visible = visibility;\r\n};\r\n\r\n/**\r\n * Deletes a mesh from the meshRegistry.\r\n *\r\n * @method\r\n * @param {String} path Path used as id of target mesh.\r\n *\r\n * @return {undefined} undefined\r\n */\r\nWebGLRenderer.prototype.removeMesh = function removeMesh(path) {\r\n    this.meshRegistry.unregister(path);\r\n};\r\n\r\n/**\r\n * Creates or retreives cutout\r\n *\r\n * @method\r\n * @param {String} path Path used as id of cutout in cutout registry.\r\n * @param {String} uniformName Identifier used to upload value\r\n * @param {Array} uniformValue Value of uniform data\r\n *\r\n * @return {undefined} undefined\r\n */\r\nWebGLRenderer.prototype.setCutoutUniform = function setCutoutUniform(path, uniformName, uniformValue) {\r\n    var cutout = this.getOrSetCutout(path);\r\n\r\n    var index = cutout.uniformKeys.indexOf(uniformName);\r\n\r\n    if (uniformValue.length) {\r\n        for (var i = 0, len = uniformValue.length; i < len; i++) {\r\n            cutout.uniformValues[index][i] = uniformValue[i];\r\n        }\r\n    }\r\n    else {\r\n        cutout.uniformValues[index] = uniformValue;\r\n    }\r\n};\r\n\r\n/**\r\n * Edits the options field on a mesh\r\n *\r\n * @method\r\n * @param {String} path Path used as id of target mesh\r\n * @param {Object} options Map of draw options for mesh\r\n *\r\n * @return {WebGLRenderer} this\r\n */\r\nWebGLRenderer.prototype.setMeshOptions = function(path, options) {\r\n    var mesh = this.meshRegistry.get(path) || this.createMesh(path);\r\n\r\n    mesh.options = options;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Changes the color of the fixed intensity lighting in the scene\r\n *\r\n * @method\r\n *\r\n * @param {String} path Path used as id of light\r\n * @param {Number} r red channel\r\n * @param {Number} g green channel\r\n * @param {Number} b blue channel\r\n *\r\n * @return {WebGLRenderer} this\r\n */\r\nWebGLRenderer.prototype.setAmbientLightColor = function setAmbientLightColor(path, r, g, b) {\r\n    this.ambientLightColor[0] = r;\r\n    this.ambientLightColor[1] = g;\r\n    this.ambientLightColor[2] = b;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Changes the location of the light in the scene\r\n *\r\n * @method\r\n *\r\n * @param {String} path Path used as id of light\r\n * @param {Number} x x position\r\n * @param {Number} y y position\r\n * @param {Number} z z position\r\n *\r\n * @return {WebGLRenderer} this\r\n */\r\nWebGLRenderer.prototype.setLightPosition = function setLightPosition(path, x, y, z) {\r\n    var light = this.lightRegistry.get(path) || this.createLight(path);\r\n    light.position[0] = x;\r\n    light.position[1] = y;\r\n    light.position[2] = z;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Changes the color of a dynamic intensity lighting in the scene\r\n *\r\n * @method\r\n *\r\n * @param {String} path Path used as id of light in light Registry.\r\n * @param {Number} r red channel\r\n * @param {Number} g green channel\r\n * @param {Number} b blue channel\r\n *\r\n * @return {WebGLRenderer} this\r\n */\r\nWebGLRenderer.prototype.setLightColor = function setLightColor(path, r, g, b) {\r\n    var light = this.lightRegistry.get(path) || this.createLight(path);\r\n\r\n    light.color[0] = r;\r\n    light.color[1] = g;\r\n    light.color[2] = b;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Compiles material spec into program shader\r\n *\r\n * @method\r\n *\r\n * @param {String} path Path used as id of cutout in cutout registry.\r\n * @param {String} name Name that the rendering input the material is bound to\r\n * @param {Object} material Material spec\r\n *\r\n * @return {WebGLRenderer} this\r\n */\r\nWebGLRenderer.prototype.handleMaterialInput = function handleMaterialInput(path, name, material) {\r\n    var mesh = this.meshRegistry.get(path) || this.createMesh(path);\r\n    material = compileMaterial(material, mesh.textures.length);\r\n\r\n    // Set uniforms to enable texture!\r\n\r\n    mesh.uniformValues[mesh.uniformKeys.indexOf(name)][0] = -material._id;\r\n\r\n    // Register textures!\r\n\r\n    var i = material.textures.length;\r\n    while (i--) {\r\n        mesh.textures.push(\r\n            this.textureManager.register(material.textures[i], mesh.textures.length + i)\r\n        );\r\n    }\r\n\r\n    // Register material!\r\n\r\n    this.program.registerMaterial(name, material);\r\n\r\n    return this.updateSize();\r\n};\r\n\r\n/**\r\n * Changes the geometry data of a mesh\r\n *\r\n * @method\r\n *\r\n * @param {String} path Path used as id of cutout in cutout registry.\r\n * @param {Object} geometry Geometry object containing vertex data to be drawn\r\n * @param {Number} drawType Primitive identifier\r\n * @param {Boolean} dynamic Whether geometry is dynamic\r\n *\r\n * @return {undefined} undefined\r\n */\r\nWebGLRenderer.prototype.setGeometry = function setGeometry(path, geometry, drawType, dynamic) {\r\n    var mesh = this.meshRegistry.get(path) || this.createMesh(path);\r\n\r\n    mesh.geometry = geometry;\r\n    mesh.drawType = drawType;\r\n    mesh.dynamic = dynamic;\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * Uploads a new value for the uniform data when the mesh is being drawn\r\n *\r\n * @method\r\n *\r\n * @param {String} path Path used as id of mesh in mesh registry\r\n * @param {String} uniformName Identifier used to upload value\r\n * @param {Array} uniformValue Value of uniform data\r\n *\r\n * @return {undefined} undefined\r\n */\r\nWebGLRenderer.prototype.setMeshUniform = function setMeshUniform(path, uniformName, uniformValue) {\r\n    var mesh = this.meshRegistry.get(path) || this.createMesh(path);\r\n\r\n    var index = mesh.uniformKeys.indexOf(uniformName);\r\n\r\n    if (index === -1) {\r\n        mesh.uniformKeys.push(uniformName);\r\n        mesh.uniformValues.push(uniformValue);\r\n    }\r\n    else {\r\n        mesh.uniformValues[index] = uniformValue;\r\n    }\r\n};\r\n\r\n/**\r\n * Allocates a new buffer using the internal BufferRegistry.\r\n *\r\n * @method\r\n *\r\n * @param {Number} geometryId Id of geometry in geometry registry\r\n * @param {String} bufferName Attribute location name\r\n * @param {Array} bufferValue Vertex data\r\n * @param {Number} bufferSpacing The dimensions of the vertex\r\n * @param {Boolean} isDynamic Whether geometry is dynamic\r\n *\r\n * @return {undefined} undefined\r\n */\r\nWebGLRenderer.prototype.bufferData = function bufferData(geometryId, bufferName, bufferValue, bufferSpacing, isDynamic) {\r\n    this.bufferRegistry.allocate(geometryId, bufferName, bufferValue, bufferSpacing, isDynamic);\r\n};\r\n\r\n/**\r\n * Triggers the 'draw' phase of the WebGLRenderer. Iterates through registries\r\n * to set uniforms, set attributes and issue draw commands for renderables.\r\n *\r\n * @method\r\n *\r\n * @param {Object} renderState Parameters provided by the compositor, that affect the rendering of all renderables.\r\n *\r\n * @return {undefined} undefined\r\n */\r\nWebGLRenderer.prototype.draw = function draw(renderState) {\r\n    var time = this.compositor.getTime();\r\n\r\n    this.gl.clear(this.gl.COLOR_BUFFER_BIT | this.gl.DEPTH_BUFFER_BIT);\r\n    this.textureManager.update(time);\r\n\r\n    this.meshRegistryKeys = sorter(this.meshRegistry.getKeys(), this.meshRegistry.getKeyToValue());\r\n\r\n    this.setGlobalUniforms(renderState);\r\n    this.drawCutouts();\r\n    this.drawMeshes();\r\n};\r\n\r\n/**\r\n * Iterates through and draws all registered meshes. This includes\r\n * binding textures, handling draw options, setting mesh uniforms\r\n * and drawing mesh buffers.\r\n *\r\n * @method\r\n *\r\n * @return {undefined} undefined\r\n */\r\nWebGLRenderer.prototype.drawMeshes = function drawMeshes() {\r\n    var gl = this.gl;\r\n    var buffers;\r\n    var mesh;\r\n\r\n    var meshes = this.meshRegistry.getValues();\r\n\r\n    for(var i = 0; i < meshes.length; i++) {\r\n        mesh = meshes[i];\r\n\r\n        if (!mesh) continue;\r\n\r\n        buffers = this.bufferRegistry.registry[mesh.geometry];\r\n\r\n        if (!mesh.visible) continue;\r\n\r\n        if (mesh.uniformValues[0] < 1) {\r\n            gl.depthMask(false);\r\n            gl.enable(gl.BLEND);\r\n        }\r\n        else {\r\n            gl.depthMask(true);\r\n            gl.disable(gl.BLEND);\r\n        }\r\n\r\n        if (!buffers) continue;\r\n\r\n        var j = mesh.textures.length;\r\n        while (j--) this.textureManager.bindTexture(mesh.textures[j]);\r\n\r\n        if (mesh.options) this.handleOptions(mesh.options, mesh);\r\n\r\n        this.program.setUniforms(mesh.uniformKeys, mesh.uniformValues);\r\n        this.drawBuffers(buffers, mesh.drawType, mesh.geometry);\r\n\r\n        if (mesh.options) this.resetOptions(mesh.options);\r\n    }\r\n};\r\n\r\n/**\r\n * Iterates through and draws all registered cutout meshes. Blending\r\n * is disabled, cutout uniforms are set and finally buffers are drawn.\r\n *\r\n * @method\r\n *\r\n * @return {undefined} undefined\r\n */\r\nWebGLRenderer.prototype.drawCutouts = function drawCutouts() {\r\n    var cutout;\r\n    var buffers;\r\n    var cutouts = this.cutoutRegistry.getValues();\r\n    var len = cutouts.length;\r\n\r\n    this.gl.disable(this.gl.CULL_FACE);\r\n    this.gl.enable(this.gl.BLEND);\r\n    this.gl.depthMask(true);\r\n\r\n    for (var i = 0; i < len; i++) {\r\n        cutout = cutouts[i];\r\n\r\n        if (!cutout) continue;\r\n\r\n        buffers = this.bufferRegistry.registry[cutout.geometry];\r\n\r\n        if (!cutout.visible) continue;\r\n\r\n        this.program.setUniforms(cutout.uniformKeys, cutout.uniformValues);\r\n        this.drawBuffers(buffers, cutout.drawType, cutout.geometry);\r\n    }\r\n\r\n    this.gl.enable(this.gl.CULL_FACE);\r\n};\r\n\r\n/**\r\n * Sets uniforms to be shared by all meshes.\r\n *\r\n * @method\r\n *\r\n * @param {Object} renderState Draw state options passed down from compositor.\r\n *\r\n * @return {undefined} undefined\r\n */\r\nWebGLRenderer.prototype.setGlobalUniforms = function setGlobalUniforms(renderState) {\r\n    var light;\r\n    var stride;\r\n    var lights = this.lightRegistry.getValues();\r\n    var len = lights.length;\r\n\r\n    for (var i = 0; i < len; i++) {\r\n        light = lights[i];\r\n\r\n        if (!light) continue;\r\n\r\n        stride = i * 4;\r\n\r\n        // Build the light positions' 4x4 matrix\r\n\r\n        this.lightPositions[0 + stride] = light.position[0];\r\n        this.lightPositions[1 + stride] = light.position[1];\r\n        this.lightPositions[2 + stride] = light.position[2];\r\n\r\n        // Build the light colors' 4x4 matrix\r\n\r\n        this.lightColors[0 + stride] = light.color[0];\r\n        this.lightColors[1 + stride] = light.color[1];\r\n        this.lightColors[2 + stride] = light.color[2];\r\n    }\r\n\r\n    globalUniforms.values[0] = this.numLights;\r\n    globalUniforms.values[1] = this.ambientLightColor;\r\n    globalUniforms.values[2] = this.lightPositions;\r\n    globalUniforms.values[3] = this.lightColors;\r\n\r\n    /*\r\n     * Set time and projection uniforms\r\n     * projecting world space into a 2d plane representation of the canvas.\r\n     * The x and y scale (this.projectionTransform[0] and this.projectionTransform[5] respectively)\r\n     * convert the projected geometry back into clipspace.\r\n     * The perpective divide (this.projectionTransform[11]), adds the z value of the point\r\n     * multiplied by the perspective divide to the w value of the point. In the process\r\n     * of converting from homogenous coordinates to NDC (normalized device coordinates)\r\n     * the x and y values of the point are divided by w, which implements perspective.\r\n     */\r\n    this.projectionTransform[0] = 1 / (this.cachedSize[0] * 0.5);\r\n    this.projectionTransform[5] = -1 / (this.cachedSize[1] * 0.5);\r\n    this.projectionTransform[11] = renderState.perspectiveTransform[11];\r\n\r\n    globalUniforms.values[4] = this.projectionTransform;\r\n    globalUniforms.values[5] = this.compositor.getTime() * 0.001;\r\n    globalUniforms.values[6] = renderState.viewTransform;\r\n\r\n    this.program.setUniforms(globalUniforms.keys, globalUniforms.values);\r\n};\r\n\r\n/**\r\n * Loads the buffers and issues the draw command for a geometry.\r\n *\r\n * @method\r\n *\r\n * @param {Object} vertexBuffers All buffers used to draw the geometry.\r\n * @param {Number} mode Enumerator defining what primitive to draw\r\n * @param {Number} id ID of geometry being drawn.\r\n *\r\n * @return {undefined} undefined\r\n */\r\nWebGLRenderer.prototype.drawBuffers = function drawBuffers(vertexBuffers, mode, id) {\r\n    var gl = this.gl;\r\n    var length = 0;\r\n    var attribute;\r\n    var location;\r\n    var spacing;\r\n    var offset;\r\n    var buffer;\r\n    var iter;\r\n    var j;\r\n    var i;\r\n\r\n    iter = vertexBuffers.keys.length;\r\n    for (i = 0; i < iter; i++) {\r\n        attribute = vertexBuffers.keys[i];\r\n\r\n        // Do not set vertexAttribPointer if index buffer.\r\n\r\n        if (attribute === 'indices') {\r\n            j = i; continue;\r\n        }\r\n\r\n        // Retreive the attribute location and make sure it is enabled.\r\n\r\n        location = this.program.attributeLocations[attribute];\r\n\r\n        if (location === -1) continue;\r\n        if (location === undefined) {\r\n            location = gl.getAttribLocation(this.program.program, attribute);\r\n            this.program.attributeLocations[attribute] = location;\r\n            if (location === -1) continue;\r\n        }\r\n\r\n        if (!this.state.enabledAttributes[attribute]) {\r\n            gl.enableVertexAttribArray(location);\r\n            this.state.enabledAttributes[attribute] = true;\r\n            this.state.enabledAttributesKeys.push(attribute);\r\n        }\r\n\r\n        // Retreive buffer information used to set attribute pointer.\r\n\r\n        buffer = vertexBuffers.values[i];\r\n        spacing = vertexBuffers.spacing[i];\r\n        offset = vertexBuffers.offset[i];\r\n        length = vertexBuffers.length[i];\r\n\r\n        // Skip bindBuffer if buffer is currently bound.\r\n\r\n        if (this.state.boundArrayBuffer !== buffer) {\r\n            gl.bindBuffer(buffer.target, buffer.buffer);\r\n            this.state.boundArrayBuffer = buffer;\r\n        }\r\n\r\n        if (this.state.lastDrawn !== id) {\r\n            gl.vertexAttribPointer(location, spacing, gl.FLOAT, gl.FALSE, 0, 4 * offset);\r\n        }\r\n    }\r\n\r\n    // Disable any attributes that not currently being used.\r\n\r\n    var len = this.state.enabledAttributesKeys.length;\r\n    for (i = 0; i < len; i++) {\r\n        var key = this.state.enabledAttributesKeys[i];\r\n        if (this.state.enabledAttributes[key] && vertexBuffers.keys.indexOf(key) === -1) {\r\n            gl.disableVertexAttribArray(this.program.attributeLocations[key]);\r\n            this.state.enabledAttributes[key] = false;\r\n        }\r\n    }\r\n\r\n    if (length) {\r\n\r\n        // If index buffer, use drawElements.\r\n\r\n        if (j !== undefined) {\r\n            buffer = vertexBuffers.values[j];\r\n            offset = vertexBuffers.offset[j];\r\n            spacing = vertexBuffers.spacing[j];\r\n            length = vertexBuffers.length[j];\r\n\r\n            // Skip bindBuffer if buffer is currently bound.\r\n\r\n            if (this.state.boundElementBuffer !== buffer) {\r\n                gl.bindBuffer(buffer.target, buffer.buffer);\r\n                this.state.boundElementBuffer = buffer;\r\n            }\r\n\r\n            gl.drawElements(gl[mode], length, gl.UNSIGNED_SHORT, 2 * offset);\r\n        }\r\n        else {\r\n            gl.drawArrays(gl[mode], 0, length);\r\n        }\r\n    }\r\n\r\n    this.state.lastDrawn = id;\r\n};\r\n\r\n\r\n/**\r\n * Updates the width and height of parent canvas, sets the viewport size on\r\n * the WebGL context and updates the resolution uniform for the shader program.\r\n * Size is retreived from the container object of the renderer.\r\n *\r\n * @method\r\n *\r\n * @param {Array} size width, height and depth of canvas\r\n *\r\n * @return {undefined} undefined\r\n */\r\nWebGLRenderer.prototype.updateSize = function updateSize(size) {\r\n    if (size) {\r\n        var pixelRatio = window.devicePixelRatio || 1;\r\n        var displayWidth = ~~(size[0] * pixelRatio);\r\n        var displayHeight = ~~(size[1] * pixelRatio);\r\n        this.canvas.width = displayWidth;\r\n        this.canvas.height = displayHeight;\r\n        this.gl.viewport(0, 0, displayWidth, displayHeight);\r\n\r\n        this.cachedSize[0] = size[0];\r\n        this.cachedSize[1] = size[1];\r\n        this.cachedSize[2] = (size[0] > size[1]) ? size[0] : size[1];\r\n        this.resolutionValues[0] = this.cachedSize;\r\n    }\r\n\r\n    this.program.setUniforms(this.resolutionName, this.resolutionValues);\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * Updates the state of the WebGL drawing context based on custom parameters\r\n * defined on a mesh.\r\n *\r\n * @method\r\n *\r\n * @param {Object} options Draw state options to be set to the context.\r\n * @param {Mesh} mesh Associated Mesh\r\n *\r\n * @return {undefined} undefined\r\n */\r\nWebGLRenderer.prototype.handleOptions = function handleOptions(options, mesh) {\r\n    var gl = this.gl;\r\n    if (!options) return;\r\n\r\n    if (options.blending) gl.enable(gl.BLEND);\r\n\r\n    switch (options.side) {\r\n        case 'double':\r\n            this.gl.cullFace(this.gl.FRONT);\r\n            this.drawBuffers(this.bufferRegistry.registry[mesh.geometry], mesh.drawType, mesh.geometry);\r\n            this.gl.cullFace(this.gl.BACK);\r\n            break;\r\n        case 'back':\r\n            gl.cullFace(gl.FRONT);\r\n            break;\r\n    }\r\n};\r\n\r\n/**\r\n * Resets the state of the WebGL drawing context to default values.\r\n *\r\n * @method\r\n *\r\n * @param {Object} options Draw state options to be set to the context.\r\n *\r\n * @return {undefined} undefined\r\n */\r\nWebGLRenderer.prototype.resetOptions = function resetOptions(options) {\r\n    var gl = this.gl;\r\n    if (!options) return;\r\n    if (options.blending) gl.disable(gl.BLEND);\r\n    if (options.side === 'back') gl.cullFace(gl.BACK);\r\n};\r\n\r\nmodule.exports = WebGLRenderer;\r\n\n},{\"../utilities/Registry\":29,\"../utilities/keyValueToArrays\":31,\"./BufferRegistry\":34,\"./Program\":36,\"./TextureManager\":38,\"./compileMaterial\":40,\"./radixSort\":42}],40:[function(require,module,exports){\n/**\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2015 Famous Industries Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n'use strict';\r\n\r\nvar types = {\r\n    1: 'float ',\r\n    2: 'vec2 ',\r\n    3: 'vec3 ',\r\n    4: 'vec4 '\r\n};\r\n\r\n/**\r\n * Traverses material to create a string of glsl code to be applied in\r\n * the vertex or fragment shader.\r\n *\r\n * @method\r\n *\r\n * @param {Object} material Material to be compiled.\r\n * @param {Number} textureSlot Next available texture slot for Mesh.\r\n *\r\n * @return {undefined} undefined\r\n */\r\nfunction compileMaterial(material, textureSlot) {\r\n    var glsl = '';\r\n    var uniforms = {};\r\n    var varyings = {};\r\n    var attributes = {};\r\n    var defines = [];\r\n    var textures = [];\r\n\r\n    material.traverse(function (node, depth) {\r\n        if (! node.chunk) return;\r\n\r\n        var type = types[_getOutputLength(node)];\r\n        var label = _makeLabel(node);\r\n        var output = _processGLSL(node.chunk.glsl, node.inputs, textures.length + textureSlot);\r\n\r\n        glsl += type + label + ' = ' + output + '\\n ';\r\n\r\n        if (node.uniforms) _extend(uniforms, node.uniforms);\r\n        if (node.varyings) _extend(varyings, node.varyings);\r\n        if (node.attributes) _extend(attributes, node.attributes);\r\n        if (node.chunk.defines) defines.push(node.chunk.defines);\r\n        if (node.texture) textures.push(node.texture);\r\n    });\r\n\r\n    return {\r\n        _id: material._id,\r\n        glsl: glsl + 'return ' + _makeLabel(material) + ';',\r\n        defines: defines.join('\\n'),\r\n        uniforms: uniforms,\r\n        varyings: varyings,\r\n        attributes: attributes,\r\n        textures: textures\r\n    };\r\n}\r\n\r\n// Helper function used to infer length of the output\r\n// from a given material node.\r\nfunction _getOutputLength(node) {\r\n\r\n    // Handle constant values\r\n\r\n    if (typeof node === 'number') return 1;\r\n    if (Array.isArray(node)) return node.length;\r\n\r\n    // Handle materials\r\n\r\n    var output = node.chunk.output;\r\n    if (typeof output === 'number') return output;\r\n\r\n    // Handle polymorphic output\r\n\r\n    var key = node.inputs.map(function recurse(node) {\r\n        return _getOutputLength(node);\r\n    }).join(',');\r\n\r\n    return output[key];\r\n}\r\n\r\n// Helper function to run replace inputs and texture tags with\r\n// correct glsl.\r\nfunction _processGLSL(str, inputs, textureSlot) {\r\n    return str\r\n        .replace(/%\\d/g, function (s) {\r\n            return _makeLabel(inputs[s[1]-1]);\r\n        })\r\n        .replace(/\\$TEXTURE/, 'u_textures[' + textureSlot + ']');\r\n}\r\n\r\n// Helper function used to create glsl definition of the\r\n// input material node.\r\nfunction _makeLabel (n) {\r\n    if (Array.isArray(n)) return _arrayToVec(n);\r\n    if (typeof n === 'object') return 'fa_' + (n._id);\r\n    else return n.toFixed(6);\r\n}\r\n\r\n// Helper to copy the properties of an object onto another object.\r\nfunction _extend (a, b) {\r\n\tfor (var k in b) a[k] = b[k];\r\n}\r\n\r\n// Helper to create glsl vector representation of a javascript array.\r\nfunction _arrayToVec(array) {\r\n    var len = array.length;\r\n    return 'vec' + len + '(' + array.join(',')  + ')';\r\n}\r\n\r\nmodule.exports = compileMaterial;\r\n\n},{}],41:[function(require,module,exports){\n/**\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2015 Famous Industries Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n\r\n'use strict';\r\n\r\n/**\r\n * Generates a checkerboard pattern to be used as a placeholder texture while\r\n * an image loads over the network.\r\n *\r\n * @method  createCheckerBoard\r\n *\r\n * @return {HTMLCanvasElement} The `canvas` element that has been used in order\r\n *                             to generate the pattern.\r\n */\r\nfunction createCheckerBoard() {\r\n    var context = document.createElement('canvas').getContext('2d');\r\n    context.canvas.width = context.canvas.height = 128;\r\n    for (var y = 0; y < context.canvas.height; y += 16) {\r\n        for (var x = 0; x < context.canvas.width; x += 16) {\r\n            context.fillStyle = (x ^ y) & 16 ? '#FFF' : '#DDD';\r\n            context.fillRect(x, y, 16, 16);\r\n        }\r\n    }\r\n\r\n    return context.canvas;\r\n}\r\n\r\nmodule.exports = createCheckerBoard;\r\n\n},{}],42:[function(require,module,exports){\n/**\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2015 Famous Industries Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n'use strict';\r\n\r\nvar radixBits = 11,\r\n    maxRadix = 1 << (radixBits),\r\n    radixMask = maxRadix - 1,\r\n    buckets = new Array(maxRadix * Math.ceil(64 / radixBits)),\r\n    msbMask = 1 << ((32 - 1) % radixBits),\r\n    lastMask = (msbMask << 1) - 1,\r\n    passCount = ((32 / radixBits) + 0.999999999999999) | 0,\r\n    maxOffset = maxRadix * (passCount - 1),\r\n    normalizer = Math.pow(20, 6);\r\n\r\nvar buffer = new ArrayBuffer(4);\r\nvar floatView = new Float32Array(buffer, 0, 1);\r\nvar intView = new Int32Array(buffer, 0, 1);\r\n\r\n// comparator pulls relevant sorting keys out of mesh\r\nfunction comp(list, registry, i) {\r\n    var key = list[i];\r\n    var item = registry[key];\r\n    return (item.depth ? item.depth : registry[key].uniformValues[1][14]) + normalizer;\r\n}\r\n\r\n//mutator function records mesh's place in previous pass\r\nfunction mutator(list, registry, i, value) {\r\n    var key = list[i];\r\n    registry[key].depth = intToFloat(value) - normalizer;\r\n    return key;\r\n}\r\n\r\n//clean function removes mutator function's record\r\nfunction clean(list, registry, i) {\r\n    registry[list[i]].depth = null;\r\n}\r\n\r\n//converts a javascript float to a 32bit integer using an array buffer\r\n//of size one\r\nfunction floatToInt(k) {\r\n    floatView[0] = k;\r\n    return intView[0];\r\n}\r\n//converts a 32 bit integer to a regular javascript float using an array buffer\r\n//of size one\r\nfunction intToFloat(k) {\r\n    intView[0] = k;\r\n    return floatView[0];\r\n}\r\n\r\n/**\r\n * Sorts an array of mesh IDs according to their z-depth.\r\n *\r\n * @param  {Array} list         An array of meshes.\r\n * @param  {Object} registry    A registry mapping the path names to meshes.\r\n * @return {Array}              An array of the meshes sorted by z-depth.\r\n */\r\nfunction radixSort(list, registry) {\r\n    var pass = 0;\r\n    var out = [];\r\n\r\n    var i, j, k, n, div, offset, swap, id, sum, tsum, size;\r\n\r\n    passCount = ((32 / radixBits) + 0.999999999999999) | 0;\r\n\r\n    for (i = 0, n = maxRadix * passCount; i < n; i++) buckets[i] = 0;\r\n\r\n    for (i = 0, n = list.length; i < n; i++) {\r\n        div = floatToInt(comp(list, registry, i));\r\n        div ^= div >> 31 | 0x80000000;\r\n        for (j = 0, k = 0; j < maxOffset; j += maxRadix, k += radixBits) {\r\n            buckets[j + (div >>> k & radixMask)]++;\r\n        }\r\n        buckets[j + (div >>> k & lastMask)]++;\r\n    }\r\n\r\n    for (j = 0; j <= maxOffset; j += maxRadix) {\r\n        for (id = j, sum = 0; id < j + maxRadix; id++) {\r\n            tsum = buckets[id] + sum;\r\n            buckets[id] = sum - 1;\r\n            sum = tsum;\r\n        }\r\n    }\r\n    if (--passCount) {\r\n        for (i = 0, n = list.length; i < n; i++) {\r\n            div = floatToInt(comp(list, registry, i));\r\n            out[++buckets[div & radixMask]] = mutator(list, registry, i, div ^= div >> 31 | 0x80000000);\r\n        }\r\n        \r\n        swap = out;\r\n        out = list;\r\n        list = swap;\r\n        while (++pass < passCount) {\r\n            for (i = 0, n = list.length, offset = pass * maxRadix, size = pass * radixBits; i < n; i++) {\r\n                div = floatToInt(comp(list, registry, i));\r\n                out[++buckets[offset + (div >>> size & radixMask)]] = list[i];\r\n            }\r\n\r\n            swap = out;\r\n            out = list;\r\n            list = swap;\r\n        }\r\n    }\r\n\r\n    for (i = 0, n = list.length, offset = pass * maxRadix, size = pass * radixBits; i < n; i++) {\r\n        div = floatToInt(comp(list, registry, i));\r\n        out[++buckets[offset + (div >>> size & lastMask)]] = mutator(list, registry, i, div ^ (~div >> 31 | 0x80000000));\r\n        clean(list, registry, i);\r\n    }\r\n\r\n    return out;\r\n}\r\n\r\nmodule.exports = radixSort;\r\n\n},{}],43:[function(require,module,exports){\n/**\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2015 Famous Industries Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n\r\n'use strict';\r\n\r\n\r\n\r\nvar shaders = {\r\n    vertex: \"#define GLSLIFY 1\\n/**\\r\\n * The MIT License (MIT)\\r\\n * \\r\\n * Copyright (c) 2015 Famous Industries Inc.\\r\\n * \\r\\n * Permission is hereby granted, free of charge, to any person obtaining a copy\\r\\n * of this software and associated documentation files (the \\\"Software\\\"), to deal\\r\\n * in the Software without restriction, including without limitation the rights\\r\\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\r\\n * copies of the Software, and to permit persons to whom the Software is\\r\\n * furnished to do so, subject to the following conditions:\\r\\n * \\r\\n * The above copyright notice and this permission notice shall be included in\\r\\n * all copies or substantial portions of the Software.\\r\\n * \\r\\n * THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\r\\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\r\\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\r\\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\r\\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\r\\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\r\\n * THE SOFTWARE.\\r\\n */\\r\\n\\r\\n/**\\r\\n * The MIT License (MIT)\\r\\n * \\r\\n * Copyright (c) 2015 Famous Industries Inc.\\r\\n * \\r\\n * Permission is hereby granted, free of charge, to any person obtaining a copy\\r\\n * of this software and associated documentation files (the \\\"Software\\\"), to deal\\r\\n * in the Software without restriction, including without limitation the rights\\r\\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\r\\n * copies of the Software, and to permit persons to whom the Software is\\r\\n * furnished to do so, subject to the following conditions:\\r\\n * \\r\\n * The above copyright notice and this permission notice shall be included in\\r\\n * all copies or substantial portions of the Software.\\r\\n * \\r\\n * THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\r\\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\r\\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\r\\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\r\\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\r\\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\r\\n * THE SOFTWARE.\\r\\n */\\r\\n\\r\\n/**\\r\\n * Calculates transpose inverse matrix from transform\\r\\n * \\r\\n * @method random\\r\\n * @private\\r\\n *\\r\\n *\\r\\n */\\r\\n\\r\\n\\r\\nmat3 getNormalMatrix_1_0(in mat4 t) {\\r\\n   mat3 matNorm;\\r\\n   mat4 a = t;\\r\\n\\r\\n   float a00 = a[0][0], a01 = a[0][1], a02 = a[0][2], a03 = a[0][3],\\r\\n   a10 = a[1][0], a11 = a[1][1], a12 = a[1][2], a13 = a[1][3],\\r\\n   a20 = a[2][0], a21 = a[2][1], a22 = a[2][2], a23 = a[2][3],\\r\\n   a30 = a[3][0], a31 = a[3][1], a32 = a[3][2], a33 = a[3][3],\\r\\n   b00 = a00 * a11 - a01 * a10,\\r\\n   b01 = a00 * a12 - a02 * a10,\\r\\n   b02 = a00 * a13 - a03 * a10,\\r\\n   b03 = a01 * a12 - a02 * a11,\\r\\n   b04 = a01 * a13 - a03 * a11,\\r\\n   b05 = a02 * a13 - a03 * a12,\\r\\n   b06 = a20 * a31 - a21 * a30,\\r\\n   b07 = a20 * a32 - a22 * a30,\\r\\n   b08 = a20 * a33 - a23 * a30,\\r\\n   b09 = a21 * a32 - a22 * a31,\\r\\n   b10 = a21 * a33 - a23 * a31,\\r\\n   b11 = a22 * a33 - a23 * a32,\\r\\n\\r\\n   det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\\r\\n   det = 1.0 / det;\\r\\n\\r\\n   matNorm[0][0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\\r\\n   matNorm[0][1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\\r\\n   matNorm[0][2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\\r\\n\\r\\n   matNorm[1][0] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\\r\\n   matNorm[1][1] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\\r\\n   matNorm[1][2] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\\r\\n\\r\\n   matNorm[2][0] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\\r\\n   matNorm[2][1] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\\r\\n   matNorm[2][2] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\\r\\n\\r\\n   return matNorm;\\r\\n}\\r\\n\\r\\n\\n\\n/**\\r\\n * The MIT License (MIT)\\r\\n * \\r\\n * Copyright (c) 2015 Famous Industries Inc.\\r\\n * \\r\\n * Permission is hereby granted, free of charge, to any person obtaining a copy\\r\\n * of this software and associated documentation files (the \\\"Software\\\"), to deal\\r\\n * in the Software without restriction, including without limitation the rights\\r\\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\r\\n * copies of the Software, and to permit persons to whom the Software is\\r\\n * furnished to do so, subject to the following conditions:\\r\\n * \\r\\n * The above copyright notice and this permission notice shall be included in\\r\\n * all copies or substantial portions of the Software.\\r\\n * \\r\\n * THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\r\\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\r\\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\r\\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\r\\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\r\\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\r\\n * THE SOFTWARE.\\r\\n */\\r\\n\\r\\n/**\\r\\n * Calculates a matrix that creates the identity when multiplied by m\\r\\n * \\r\\n * @method inverse\\r\\n * @private\\r\\n *\\r\\n *\\r\\n */\\r\\n\\r\\n\\r\\nfloat inverse_2_1(float m) {\\r\\n    return 1.0 / m;\\r\\n}\\r\\n\\r\\nmat2 inverse_2_1(mat2 m) {\\r\\n    return mat2(m[1][1],-m[0][1],\\r\\n               -m[1][0], m[0][0]) / (m[0][0]*m[1][1] - m[0][1]*m[1][0]);\\r\\n}\\r\\n\\r\\nmat3 inverse_2_1(mat3 m) {\\r\\n    float a00 = m[0][0], a01 = m[0][1], a02 = m[0][2];\\r\\n    float a10 = m[1][0], a11 = m[1][1], a12 = m[1][2];\\r\\n    float a20 = m[2][0], a21 = m[2][1], a22 = m[2][2];\\r\\n\\r\\n    float b01 =  a22 * a11 - a12 * a21;\\r\\n    float b11 = -a22 * a10 + a12 * a20;\\r\\n    float b21 =  a21 * a10 - a11 * a20;\\r\\n\\r\\n    float det = a00 * b01 + a01 * b11 + a02 * b21;\\r\\n\\r\\n    return mat3(b01, (-a22 * a01 + a02 * a21), (a12 * a01 - a02 * a11),\\r\\n                b11, (a22 * a00 - a02 * a20), (-a12 * a00 + a02 * a10),\\r\\n                b21, (-a21 * a00 + a01 * a20), (a11 * a00 - a01 * a10)) / det;\\r\\n}\\r\\n\\r\\nmat4 inverse_2_1(mat4 m) {\\r\\n    float\\r\\n        a00 = m[0][0], a01 = m[0][1], a02 = m[0][2], a03 = m[0][3],\\r\\n        a10 = m[1][0], a11 = m[1][1], a12 = m[1][2], a13 = m[1][3],\\r\\n        a20 = m[2][0], a21 = m[2][1], a22 = m[2][2], a23 = m[2][3],\\r\\n        a30 = m[3][0], a31 = m[3][1], a32 = m[3][2], a33 = m[3][3],\\r\\n\\r\\n        b00 = a00 * a11 - a01 * a10,\\r\\n        b01 = a00 * a12 - a02 * a10,\\r\\n        b02 = a00 * a13 - a03 * a10,\\r\\n        b03 = a01 * a12 - a02 * a11,\\r\\n        b04 = a01 * a13 - a03 * a11,\\r\\n        b05 = a02 * a13 - a03 * a12,\\r\\n        b06 = a20 * a31 - a21 * a30,\\r\\n        b07 = a20 * a32 - a22 * a30,\\r\\n        b08 = a20 * a33 - a23 * a30,\\r\\n        b09 = a21 * a32 - a22 * a31,\\r\\n        b10 = a21 * a33 - a23 * a31,\\r\\n        b11 = a22 * a33 - a23 * a32,\\r\\n\\r\\n        det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\\r\\n\\r\\n    return mat4(\\r\\n        a11 * b11 - a12 * b10 + a13 * b09,\\r\\n        a02 * b10 - a01 * b11 - a03 * b09,\\r\\n        a31 * b05 - a32 * b04 + a33 * b03,\\r\\n        a22 * b04 - a21 * b05 - a23 * b03,\\r\\n        a12 * b08 - a10 * b11 - a13 * b07,\\r\\n        a00 * b11 - a02 * b08 + a03 * b07,\\r\\n        a32 * b02 - a30 * b05 - a33 * b01,\\r\\n        a20 * b05 - a22 * b02 + a23 * b01,\\r\\n        a10 * b10 - a11 * b08 + a13 * b06,\\r\\n        a01 * b08 - a00 * b10 - a03 * b06,\\r\\n        a30 * b04 - a31 * b02 + a33 * b00,\\r\\n        a21 * b02 - a20 * b04 - a23 * b00,\\r\\n        a11 * b07 - a10 * b09 - a12 * b06,\\r\\n        a00 * b09 - a01 * b07 + a02 * b06,\\r\\n        a31 * b01 - a30 * b03 - a32 * b00,\\r\\n        a20 * b03 - a21 * b01 + a22 * b00) / det;\\r\\n}\\r\\n\\r\\n\\n\\n/**\\r\\n * The MIT License (MIT)\\r\\n * \\r\\n * Copyright (c) 2015 Famous Industries Inc.\\r\\n * \\r\\n * Permission is hereby granted, free of charge, to any person obtaining a copy\\r\\n * of this software and associated documentation files (the \\\"Software\\\"), to deal\\r\\n * in the Software without restriction, including without limitation the rights\\r\\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\r\\n * copies of the Software, and to permit persons to whom the Software is\\r\\n * furnished to do so, subject to the following conditions:\\r\\n * \\r\\n * The above copyright notice and this permission notice shall be included in\\r\\n * all copies or substantial portions of the Software.\\r\\n * \\r\\n * THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\r\\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\r\\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\r\\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\r\\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\r\\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\r\\n * THE SOFTWARE.\\r\\n */\\r\\n\\r\\n/**\\r\\n * Reflects a matrix over its main diagonal.\\r\\n * \\r\\n * @method transpose\\r\\n * @private\\r\\n *\\r\\n *\\r\\n */\\r\\n\\r\\n\\r\\nfloat transpose_3_2(float m) {\\r\\n    return m;\\r\\n}\\r\\n\\r\\nmat2 transpose_3_2(mat2 m) {\\r\\n    return mat2(m[0][0], m[1][0],\\r\\n                m[0][1], m[1][1]);\\r\\n}\\r\\n\\r\\nmat3 transpose_3_2(mat3 m) {\\r\\n    return mat3(m[0][0], m[1][0], m[2][0],\\r\\n                m[0][1], m[1][1], m[2][1],\\r\\n                m[0][2], m[1][2], m[2][2]);\\r\\n}\\r\\n\\r\\nmat4 transpose_3_2(mat4 m) {\\r\\n    return mat4(m[0][0], m[1][0], m[2][0], m[3][0],\\r\\n                m[0][1], m[1][1], m[2][1], m[3][1],\\r\\n                m[0][2], m[1][2], m[2][2], m[3][2],\\r\\n                m[0][3], m[1][3], m[2][3], m[3][3]);\\r\\n}\\r\\n\\r\\n\\n\\n\\r\\n/**\\r\\n * Converts vertex from modelspace to screenspace using transform\\r\\n * information from context.\\r\\n *\\r\\n * @method applyTransform\\r\\n * @private\\r\\n *\\r\\n *\\r\\n */\\r\\n\\r\\nvec4 applyTransform(vec4 pos) {\\r\\n    //TODO: move this multiplication to application code. \\r\\n\\r\\n    /**\\r\\n     * Currently multiplied in the vertex shader to avoid consuming the complexity of holding an additional\\r\\n     * transform as state on the mesh object in WebGLRenderer. Multiplies the object's transformation from object space\\r\\n     * to world space with its transformation from world space to eye space.\\r\\n     */\\r\\n    mat4 MVMatrix = u_view * u_transform;\\r\\n\\r\\n    //TODO: move the origin, sizeScale and y axis inversion to application code in order to amortize redundant per-vertex calculations.\\r\\n\\r\\n    /**\\r\\n     * The transform uniform should be changed to the result of the transformation chain:\\r\\n     *\\r\\n     * view * modelTransform * invertYAxis * sizeScale * origin\\r\\n     *\\r\\n     * which could be simplified to:\\r\\n     *\\r\\n     * view * modelTransform * convertToDOMSpace\\r\\n     *\\r\\n     * where convertToDOMSpace represents the transform matrix:\\r\\n     *\\r\\n     *                           size.x 0       0       size.x \\r\\n     *                           0      -size.y 0       size.y\\r\\n     *                           0      0       1       0\\r\\n     *                           0      0       0       1\\r\\n     *\\r\\n     */\\r\\n\\r\\n    /**\\r\\n     * Assuming a unit volume, moves the object space origin [0, 0, 0] to the \\\"top left\\\" [1, -1, 0], the DOM space origin.\\r\\n     * Later in the transformation chain, the projection transform negates the rigidbody translation.\\r\\n     * Equivalent to (but much faster than) multiplying a translation matrix \\\"origin\\\"\\r\\n     *\\r\\n     *                           1 0 0 1 \\r\\n     *                           0 1 0 -1\\r\\n     *                           0 0 1 0\\r\\n     *                           0 0 0 1\\r\\n     *\\r\\n     * in the transform chain: projection * view * modelTransform * invertYAxis * sizeScale * origin * positionVector.\\r\\n     */\\r\\n    pos.x += 1.0;\\r\\n    pos.y -= 1.0;\\r\\n\\r\\n    /**\\r\\n     * Assuming a unit volume, scales an object to the amount of pixels in the size uniform vector's specified dimensions.\\r\\n     * Later in the transformation chain, the projection transform transforms the point into clip space by scaling\\r\\n     * by the inverse of the canvas' resolution.\\r\\n     * Equivalent to (but much faster than) multiplying a scale matrix \\\"sizeScale\\\"\\r\\n     *\\r\\n     *                           size.x 0      0      0 \\r\\n     *                           0      size.y 0      0\\r\\n     *                           0      0      size.z 0\\r\\n     *                           0      0      0      1\\r\\n     *\\r\\n     * in the transform chain: projection * view * modelTransform * invertYAxis * sizeScale * origin * positionVector.\\r\\n     */\\r\\n    pos.xyz *= u_size * 0.5;\\r\\n\\r\\n    /**\\r\\n     * Inverts the object space's y axis in order to match DOM space conventions. \\r\\n     * Later in the transformation chain, the projection transform reinverts the y axis to convert to clip space.\\r\\n     * Equivalent to (but much faster than) multiplying a scale matrix \\\"invertYAxis\\\"\\r\\n     *\\r\\n     *                           1 0 0 0 \\r\\n     *                           0 -1 0 0\\r\\n     *                           0 0 1 0\\r\\n     *                           0 0 0 1\\r\\n     *\\r\\n     * in the transform chain: projection * view * modelTransform * invertYAxis * sizeScale * origin * positionVector.\\r\\n     */\\r\\n    pos.y *= -1.0;\\r\\n\\r\\n    /**\\r\\n     * Exporting the vertex's position as a varying, in DOM space, to be used for lighting calculations. This has to be in DOM space\\r\\n     * since light position and direction is derived from the scene graph, calculated in DOM space.\\r\\n     */\\r\\n\\r\\n    v_position = (MVMatrix * pos).xyz;\\r\\n\\r\\n    /**\\r\\n    * Exporting the eye vector (a vector from the center of the screen) as a varying, to be used for lighting calculations.\\r\\n    * In clip space deriving the eye vector is a matter of simply taking the inverse of the position, as the position is a vector\\r\\n    * from the center of the screen. However, since our points are represented in DOM space,\\r\\n    * the position is a vector from the top left corner of the screen, so some additional math is needed (specifically, subtracting\\r\\n    * the position from the center of the screen, i.e. half the resolution of the canvas).\\r\\n    */\\r\\n\\r\\n    v_eyeVector = (u_resolution * 0.5) - v_position;\\r\\n\\r\\n    /**\\r\\n     * Transforming the position (currently represented in dom space) into view space (with our dom space view transform)\\r\\n     * and then projecting the point into raster both by applying a perspective transformation and converting to clip space\\r\\n     * (the perspective matrix is a combination of both transformations, therefore it's probably more apt to refer to it as a\\r\\n     * projection transform).\\r\\n     */\\r\\n\\r\\n    pos = u_perspective * MVMatrix * pos;\\r\\n\\r\\n    return pos;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Placeholder for positionOffset chunks to be templated in.\\r\\n * Used for mesh deformation.\\r\\n *\\r\\n * @method calculateOffset\\r\\n * @private\\r\\n *\\r\\n *\\r\\n */\\r\\n#vert_definitions\\r\\nvec3 calculateOffset(vec3 ID) {\\r\\n    #vert_applications\\r\\n    return vec3(0.0);\\r\\n}\\r\\n\\r\\n/**\\r\\n * Writes the position of the vertex onto the screen.\\r\\n * Passes texture coordinate and normal attributes as varyings\\r\\n * and passes the position attribute through position pipeline.\\r\\n *\\r\\n * @method main\\r\\n * @private\\r\\n *\\r\\n *\\r\\n */\\r\\nvoid main() {\\r\\n    v_textureCoordinate = a_texCoord;\\r\\n    vec3 invertedNormals = a_normals + (u_normals.x < 0.0 ? calculateOffset(u_normals) * 2.0 - 1.0 : vec3(0.0));\\r\\n    invertedNormals.y *= -1.0;\\r\\n    v_normal = transpose_3_2(mat3(inverse_2_1(u_transform))) * invertedNormals;\\r\\n    vec3 offsetPos = a_pos + calculateOffset(u_positionOffset);\\r\\n    gl_Position = applyTransform(vec4(offsetPos, 1.0));\\r\\n}\\r\\n\",\r\n    fragment: \"#define GLSLIFY 1\\n/**\\r\\n * The MIT License (MIT)\\r\\n * \\r\\n * Copyright (c) 2015 Famous Industries Inc.\\r\\n * \\r\\n * Permission is hereby granted, free of charge, to any person obtaining a copy\\r\\n * of this software and associated documentation files (the \\\"Software\\\"), to deal\\r\\n * in the Software without restriction, including without limitation the rights\\r\\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\r\\n * copies of the Software, and to permit persons to whom the Software is\\r\\n * furnished to do so, subject to the following conditions:\\r\\n * \\r\\n * The above copyright notice and this permission notice shall be included in\\r\\n * all copies or substantial portions of the Software.\\r\\n * \\r\\n * THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\r\\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\r\\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\r\\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\r\\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\r\\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\r\\n * THE SOFTWARE.\\r\\n */\\r\\n\\r\\n/**\\r\\n * The MIT License (MIT)\\r\\n * \\r\\n * Copyright (c) 2015 Famous Industries Inc.\\r\\n * \\r\\n * Permission is hereby granted, free of charge, to any person obtaining a copy\\r\\n * of this software and associated documentation files (the \\\"Software\\\"), to deal\\r\\n * in the Software without restriction, including without limitation the rights\\r\\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\r\\n * copies of the Software, and to permit persons to whom the Software is\\r\\n * furnished to do so, subject to the following conditions:\\r\\n * \\r\\n * The above copyright notice and this permission notice shall be included in\\r\\n * all copies or substantial portions of the Software.\\r\\n * \\r\\n * THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\r\\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\r\\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\r\\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\r\\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\r\\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\r\\n * THE SOFTWARE.\\r\\n */\\r\\n\\r\\n/**\\r\\n * Placeholder for fragmentShader  chunks to be templated in.\\r\\n * Used for normal mapping, gloss mapping and colors.\\r\\n * \\r\\n * @method applyMaterial\\r\\n * @private\\r\\n *\\r\\n *\\r\\n */\\r\\n\\r\\n#float_definitions\\r\\nfloat applyMaterial_1_0(float ID) {\\r\\n    #float_applications\\r\\n    return 1.;\\r\\n}\\r\\n\\r\\n#vec3_definitions\\r\\nvec3 applyMaterial_1_0(vec3 ID) {\\r\\n    #vec3_applications\\r\\n    return vec3(0);\\r\\n}\\r\\n\\r\\n#vec4_definitions\\r\\nvec4 applyMaterial_1_0(vec4 ID) {\\r\\n    #vec4_applications\\r\\n\\r\\n    return vec4(0);\\r\\n}\\r\\n\\r\\n\\n\\n/**\\r\\n * The MIT License (MIT)\\r\\n * \\r\\n * Copyright (c) 2015 Famous Industries Inc.\\r\\n * \\r\\n * Permission is hereby granted, free of charge, to any person obtaining a copy\\r\\n * of this software and associated documentation files (the \\\"Software\\\"), to deal\\r\\n * in the Software without restriction, including without limitation the rights\\r\\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\r\\n * copies of the Software, and to permit persons to whom the Software is\\r\\n * furnished to do so, subject to the following conditions:\\r\\n * \\r\\n * The above copyright notice and this permission notice shall be included in\\r\\n * all copies or substantial portions of the Software.\\r\\n * \\r\\n * THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\r\\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\r\\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\r\\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\r\\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\r\\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\r\\n * THE SOFTWARE.\\r\\n */\\r\\n\\r\\n/**\\r\\n * Calculates the intensity of light on a surface.\\r\\n *\\r\\n * @method applyLight\\r\\n * @private\\r\\n *\\r\\n */\\r\\nvec4 applyLight_2_1(in vec4 baseColor, in vec3 normal, in vec4 glossiness, int numLights, vec3 ambientColor, vec3 eyeVector, mat4 lightPosition, mat4 lightColor, vec3 v_position) {\\r\\n    vec3 diffuse = vec3(0.0);\\r\\n    bool hasGlossiness = glossiness.a > 0.0;\\r\\n    bool hasSpecularColor = length(glossiness.rgb) > 0.0;\\r\\n\\r\\n    for(int i = 0; i < 4; i++) {\\r\\n        if (i >= numLights) break;\\r\\n        vec3 lightDirection = normalize(lightPosition[i].xyz - v_position);\\r\\n        float lambertian = max(dot(lightDirection, normal), 0.0);\\r\\n\\r\\n        if (lambertian > 0.0) {\\r\\n            diffuse += lightColor[i].rgb * baseColor.rgb * lambertian;\\r\\n            if (hasGlossiness) {\\r\\n                vec3 halfVector = normalize(lightDirection + eyeVector);\\r\\n                float specularWeight = pow(max(dot(halfVector, normal), 0.0), glossiness.a);\\r\\n                vec3 specularColor = hasSpecularColor ? glossiness.rgb : lightColor[i].rgb;\\r\\n                diffuse += specularColor * specularWeight * lambertian;\\r\\n            }\\r\\n        }\\r\\n\\r\\n    }\\r\\n\\r\\n    return vec4(ambientColor + diffuse, baseColor.a);\\r\\n}\\r\\n\\r\\n\\n\\n\\r\\n\\r\\n/**\\r\\n * Writes the color of the pixel onto the screen\\r\\n *\\r\\n * @method main\\r\\n * @private\\r\\n *\\r\\n *\\r\\n */\\r\\nvoid main() {\\r\\n    vec4 material = u_baseColor.r >= 0.0 ? u_baseColor : applyMaterial_1_0(u_baseColor);\\r\\n\\r\\n    /**\\r\\n     * Apply lights only if flat shading is false\\r\\n     * and at least one light is added to the scene\\r\\n     */\\r\\n    bool lightsEnabled = (u_flatShading == 0.0) && (u_numLights > 0.0 || length(u_ambientLight) > 0.0);\\r\\n\\r\\n    vec3 normal = normalize(v_normal);\\r\\n    vec4 glossiness = u_glossiness.x < 0.0 ? applyMaterial_1_0(u_glossiness) : u_glossiness;\\r\\n\\r\\n    vec4 color = lightsEnabled ?\\r\\n    applyLight_2_1(material, normalize(v_normal), glossiness,\\r\\n               int(u_numLights),\\r\\n               u_ambientLight * u_baseColor.rgb,\\r\\n               normalize(v_eyeVector),\\r\\n               u_lightPosition,\\r\\n               u_lightColor,   \\r\\n               v_position)\\r\\n    : material;\\r\\n\\r\\n    gl_FragColor = color;\\r\\n    gl_FragColor.a *= u_opacity;   \\r\\n}\\r\\n\"\r\n};\r\n\r\nmodule.exports = shaders;\r\n\n},{}],44:[function(require,module,exports){\n'use strict';\r\n\r\nvar Compositor = require('famous/renderers/Compositor');\r\nvar UIManager = require('famous/renderers/UIManager');\r\nvar Ajax = require('Ajax');\r\nvar versionModel = require('model/VersionModel');\r\nvar RequestAnimationFrameLoop = require('famous/render-loops/RequestAnimationFrameLoop');\r\n    require(\"FastClick\");\r\nvar compositor;\r\n// var Ajax ;\r\n\r\ndocument.addEventListener(\"deviceready\", onDeviceReady, false);\r\nfunction onDeviceReady() {\r\n    \r\n    compositor = new Compositor();\r\n\r\n    new UIManager(new Worker('./work.js'),  compositor, new RequestAnimationFrameLoop());\r\n    //回退功能\r\n    document.addEventListener(\"backbutton\", onBackKeyDown, false);\r\n\r\n    if(cordova.platformId == 'android'){\r\n\r\n        if(!versionModel.findOne() || !versionModel.findOne().cancel){\r\n            setTimeout(function(){\r\n                checkUpdate();\r\n            },5000);\r\n        }    \r\n\r\n            \r\n        \r\n    }else{\r\n    \tsetTimeout(function(){\r\n        \tgetAppVersion();\r\n    \t},5000);\r\n    }\r\n}\r\n\r\n// onDeviceReady();\r\n//\r\nfunction onBackKeyDown() {\r\n    for (var selector in compositor._contexts)\r\n    compositor.sendEvent(selector, 'backbutton', {});\r\n}\r\n\r\n//检测版本\r\nfunction checkUpdate(){\r\n\tcordova.getAppVersion.getVersionNumber(function (v) {\r\n\t\t// console.log(v);\r\n    \tnew Ajax('/app_version/single').data({'did':device.uuid}).success(function(d){\r\n    \t\t// console.log(d);\r\n    \t\tif(d.status === 200){\r\n    \t\t\tvar data = d.data;\r\n    \t\t\tvar serverV = data.version.split('.')[2];\r\n    \t\t\tvar currentV = v.split('.')[2];\r\n    \t\t\tif(currentV !== serverV){\r\n    \t\t\t\tif(!versionModel.findOne()){\r\n    \t\t\t\t\tversionModel.save({'path':data.path,'version':data.version});\t\r\n    \t\t\t\t}else{\r\n    \t\t\t\t\tversionModel.update({'version':data.version},{'path':data.path,'version':data.version});\r\n    \t\t\t\t}\r\n    \t\t\t\tnavigator.notification.confirm('我们已发现新版本，是否先前往下载？',function(i){\r\n    \t\t\t\t\tif(i == 1){\r\n                            versionModel.update({'version':data.version},{'cancel':false});\r\n    \t\t\t\t\t\twindow.open(data.path);\r\n    \t\t\t\t\t}else{ //取消后再次进入不在提示\r\n                            versionModel.update({'version':data.version},{'cancel':true});\r\n                        }\r\n    \t\t\t\t},'检查更新',['确定','取消']);\r\n    \t\t\t}\r\n    \t\t}\r\n    \t}).post();\r\n\t});\r\n}\r\n\r\n//获取版本号\r\nfunction getAppVersion(){\r\n\r\n    cordova.getAppVersion.getVersionNumber(function(v){\r\n        if(!versionModel.findOne()){\r\n\t\t\tversionModel.save({'path':null,'version':v,'cancel':false});\t\r\n\t\t}else{\r\n\t\t\tversionModel.update({'version':v},{'path':null,'version':v,'cancel':false});\r\n\t\t}\r\n    });\r\n}\r\n\r\n\n},{\"Ajax\":45,\"FastClick\":46,\"famous/render-loops/RequestAnimationFrameLoop\":23,\"famous/renderers/Compositor\":24,\"famous/renderers/UIManager\":26,\"model/VersionModel\":49}],45:[function(require,module,exports){\nvar config = require( './config.json' );\r\n// new Ajax('/xxx')  \t\t\t\t\t只传url版本号之后的地址\r\n// \t.config({timeout: 3000})\t配置，timeout 超时时间，async 异步 默认true\r\n// \t.router([])\t\t\t\t\t\t\t\t路由参数，数组，只有一个可以传字符串\r\n// \t.data({})\t\t\t\t\t\t\t\t\tpost参数\r\n// \t.path({})\t\t\t\t\t\t\t\t\t？之后参数\r\n// \t.success(fn)\t\t\t\t\t\t\t成功回调函数\r\n// \t.error(fn)\t\t\t\t\t\t\t\t失败回调函数\r\n// \t.timeout(fn)\t\t\t\t\t\t\t超时回掉函数\r\n// .get();post();\tput();delete();\t\t\t\t\t\t最后 用 get / post 发送请求\r\n\r\nfunction Ajax( url ) {\r\n\tif( typeof url !== 'string' )\r\n\t\tthrow new Error( 'Ajax option error!' );\r\n\r\n\t// 判断是否是完整地址 如果不是则加上\r\n\tthis.url = !~url.indexOf( 'http' ) ? config.ajax_base + '/v' + config.version + url.replace( /^\\/*/,'/' ) : url;\r\n}\r\n\r\n// Ajax 配置\r\nAjax.prototype.config = function( cfg ){\r\n\tthis.cfg = cfg;\r\n\treturn this;\r\n}\r\n\r\n// Ajax 路径参数\r\nAjax.prototype.router = function( router ){\r\n\r\n\tif( !router )\r\n\t\tthrow new Error( 'Router参数错误，必须为数组或者字符串' );\r\n\r\n\tif( router.constructor.name === 'String' )\r\n\t\trouter = '/' + router;\r\n\telse\r\n\t\trouter = '/' + router.join( '/' );\r\n\r\n\tvar aUrl = this.url.split( '?' );\r\n\tthis.url = aUrl[0].replace( /\\/*$/, router );\r\n\taUrl[1] && (this.url = this.url + aUrl[1]);\r\n\r\n\tthis.r = router;\r\n\treturn this;\r\n}\r\n\r\n// Ajax data参数\r\nAjax.prototype.data = function( data ){\r\n\tvar sData = [];\r\n\tfor( var i in data )\r\n\t\tsData.push( i + '=' + data[i] );\r\n\tsData =  '&' + sData.join( '&' );\r\n\r\n\tthis.d = sData;\r\n\treturn this;\r\n}\r\n\r\n// Ajax ?后面参数\r\nAjax.prototype.path = function ( path ){\r\n\r\n\tvar sPath = [];\r\n\tfor( var i in path )\r\n\t\tsPath.push( i + '=' + path[i] );\r\n\tsPath =  sPath.join( '&' );\r\n\r\n\tif( !~this.url.indexOf( '?' ) )\r\n\t\tthis.url = this.url.replace( /\\/*$/, '?' + sPath )\r\n\telse\r\n\t\tthis.url = this.url.replace( /[&\\/]*$/, '&' + sPath );\r\n\r\n\tthis.p = sPath;\r\n\treturn this;\r\n}\r\n\r\n// Ajax 成功回掉函数\r\nAjax.prototype.success = function( fn ) {\r\n\tif( !fn || typeof fn  !== 'function' )\r\n\t\tthrow new Error( '成功回调函数格式错误!' );\r\n\r\n\tthis.s = fn;\r\n\treturn this;\r\n}\r\n\r\n// Ajax 失败回掉函数\r\nAjax.prototype.error = function( fn ){\r\n\tif( !fn || typeof fn  !== 'function' )\r\n\t\tthrow new Error( '错误回调函数格式错误!' );\r\n\r\n\tthis.e = fn;\r\n\treturn this;\r\n}\r\n\r\n// 超时回掉函数\r\nAjax.prototype.timeout = function( fn ){\r\n\tif( !fn || typeof fn  !== 'function' )\r\n\t\tthrow new Error( '超时回调函数格式错误!' );\r\n\r\n\tthis.t = fn;\r\n\treturn this;\r\n}\r\n\r\n// get 请求\r\nAjax.prototype.get = function(){\r\n\tthis.m = 'GET';\r\n\tthis.exec();\r\n}\r\n\r\n// post 请求\r\nAjax.prototype.post = function(xx){\r\n\tthis.m = 'POST';\r\n\tthis.exec(xx);\r\n}\r\n\r\n// put 请求\r\nAjax.prototype.put = function(){\r\n\tthis.m = 'PUT';\r\n\tthis.exec();\r\n}\r\n\r\n// delete 请求\r\nAjax.prototype.delete = function(){\r\n\tthis.m = 'DELETE';\r\n\tthis.exec();\r\n}\r\n\r\nAjax.prototype.exec = function(xx){\r\n\r\n\tthis.cfg = this.cfg || {};\r\n\r\n\tvar xhr = new XMLHttpRequest();\r\n\r\n\t// 超时默认3000毫秒\r\n\txhr.timeout =  this.cfg.timeout || 3000;\r\n\r\n\t// 异步  默认true\r\n\tif(xx == false){\r\n\t\tthis.async = false;\r\n\t}else{\r\n\t\tthis.async = typeof this.cfg.async === 'boolean' ? this.cfg.async : true;\r\n\t}\r\n\t\r\n\r\n\txhr.open( this.m, this.url, this.async );\r\n\r\n\tif( this.m === 'GET' )\r\n\t\txhr.send( null );\r\n\telse{\r\n\t\txhr.setRequestHeader( 'Content-Type', 'application/x-www-form-urlencoded' );\r\n\t\txhr.send( this.d );\r\n\t}\r\n\r\n\txhr.ontimeout = this.t;\r\n\r\n\tif( !this.async )\r\n\t  callback( xhr, this );\r\n\telse\r\n\t\txhr.onreadystatechange = function(){\r\n\t\t\tif( xhr.readyState === 4 )\r\n\t\t\t\tcallback( xhr, this );\r\n\t\t}.bind( this )\r\n}\r\n\r\nfunction callback( xhr, obj ){\r\n\tvar result = '';\r\n\tif( xhr.status == 200 ){\r\n\t\ttry{\r\n\t\t\tresult = JSON.parse( xhr.response );\r\n\t\t}catch(e){\r\n\t\t\tresult = xhr.response;\r\n\t\t}\r\n\t\tobj.s( result );\r\n\t}else \r\n\t\tobj.e && obj.e( xhr );\r\n}\r\n\r\n\r\nmodule.exports = Ajax;\n},{\"./config.json\":48}],46:[function(require,module,exports){\nfunction FastClick() {\r\n\r\n      var clickThreshold = 300;\r\n      var clickWindow = 500;\r\n      var potentialClicks = {};\r\n      var recentlyDispatched = {};\r\n      var _now = Date.now;\r\n\r\n\r\n\r\n\r\n\r\n      document.body.addEventListener('touchstart', function(event) {\r\n          var timestamp = _now();\r\n          for (var i = 0; i < event.changedTouches.length; i++) {\r\n              var touch = event.changedTouches[i];\r\n              potentialClicks[touch.identifier] = timestamp;\r\n          }\r\n      });\r\n\r\n      document.body.addEventListener('touchmove', function(event) {\r\n          for (var i = 0; i < event.changedTouches.length; i++) {\r\n              var touch = event.changedTouches[i];\r\n              delete potentialClicks[touch.identifier];\r\n          }\r\n      });\r\n\r\n      document.body.addEventListener('touchend', function(event) {\r\n          var currTime = _now();\r\n          for (var i = 0; i < event.changedTouches.length; i++) {\r\n              var touch = event.changedTouches[i];\r\n              var startTime = potentialClicks[touch.identifier];\r\n              if (startTime && currTime - startTime < clickThreshold) {\r\n                        var eventAttr = {'screenX':0,\r\n                                          'screenY':0,\r\n                                          'clientX':0,\r\n                                          'clientY':0,\r\n                                          'ctrlKey':0,\r\n                                          'shiftKey':0,\r\n                                          'altKey':0,\r\n                                          'metaKey':0,\r\n                                          'button':0,\r\n                                          'buttons':0,\r\n                                          'pageX':0,\r\n                                          'pageY':0,\r\n                                          'x':0,\r\n                                          'y':0,\r\n                                          'offsetX':0,\r\n                                          'offsetY':0\r\n                                          \r\n                            };\r\n                        \r\n                  var clickEvt = new window.CustomEvent('click', {\r\n                                          'bubbles': true,\r\n                                          'detail': 1});\r\n                  recentlyDispatched[currTime] = event;\r\n                  for (var k in eventAttr) {\r\n                          event[k]?\r\n                          clickEvt[k] = event[k]:\r\n                          clickEvt[k] = eventAttr[k];\r\n                  }     \r\n\r\n                  // console.log(11, event,clickEvt);\r\n\r\n\r\n                  event.target.dispatchEvent(clickEvt);\r\n              }\r\n              //\r\n\r\n              delete potentialClicks[touch.identifier];\r\n          }\r\n      });\r\n\r\n      document.body.addEventListener('click', function(event) {\r\n          var currTime = _now();\r\n          for (var i in recentlyDispatched) {\r\n              var previousEvent = recentlyDispatched[i];\r\n              if (currTime - i < clickWindow) {\r\n                // console.log(13, event,previousEvent,event instanceof window.MouseEvent , event.target == previousEvent.target);\r\n                //&& event.target == previousEvent.target\r\n                  if (event instanceof window.MouseEvent) {\r\n                    event.stopPropagation();\r\n                     // console.log(14, event,previousEvent);\r\n                    delete recentlyDispatched[i];\r\n                  }\r\n              }\r\n              \r\n          }\r\n      }, true);\r\n    }\r\n\r\n\r\nmodule.exports = new FastClick();    \n},{}],47:[function(require,module,exports){\nvar CrossCall = require('famous/core/CrossCall');\r\n\r\n\r\n\r\nfunction webWorkerStorage () {\r\n\r\n\tthis._storage = {};\r\n\tvar _this = this;\r\n\tthis.cross = new CrossCall(function () {\r\n\r\n        var obj = {};\r\n        for(var i in window.localStorage) {\r\n        \tobj[i] = window.localStorage.getItem(i);\r\n        }\r\n\r\n\t\treturn obj;\r\n\t});\r\n\tthis.cross.exec(function (arg) {\r\n\t\t_this._storage = arg;\r\n\t})\r\n}\r\nwebWorkerStorage.prototype.constructor = webWorkerStorage;\r\n\r\nwebWorkerStorage.prototype.getItem = function(arg) {\r\n\r\n\tif (this._storage.hasOwnProperty(arg))\r\n\t    return this._storage[arg];\r\n\treturn null;\r\n};\r\n\r\nwebWorkerStorage.prototype.removeItem = function(arg) {\r\n\r\n\tdelete this._storage[arg];\r\n    this._callStorage(\"removeItem\", [arg]);\r\n};\r\n\r\nwebWorkerStorage.prototype.setItem = function(name, value) {\r\n\r\n\tthis._storage[name] = value;\r\n    this._callStorage(\"setItem\", [name, value]);\r\n};\r\n\r\nwebWorkerStorage.prototype._callStorage = function( fun, arg){\r\n\tthis.cross.setFun(function (name, arg) {\r\n\r\n\t\treturn window.localStorage[name].apply(window.localStorage, arg);\r\n\t}, [fun, arg]).exec();\r\n\r\n}\r\n//压缩编译时可能会出现 localStorage 丢失现象\r\nvar localStorage =  typeof self.localStorage!=\"undefined\" ? window.localStorage : new webWorkerStorage();\r\n\r\nclass StorageModel {\r\n\tconstructor( table, model ){\r\n\t\tthis._table = table;\r\n\t\tthis._model = model;\r\n\r\n\t\t// 记录 model key值\r\n\t\tthis._keys = Object.keys( model );\r\n\r\n\t\tthis.setStorage();\r\n\t}\r\n\r\n\t// 检测数据模型配置Storage\r\n\tsetStorage(){\r\n\t\tvar _storageTable = localStorage.getItem( this._table );\r\n\t\t_storageTable = _storageTable ? JSON.parse( _storageTable ) : {};\r\n\r\n\t\t// 判断数据库字段和设置字段是否一样,如果不一样则删除数据库该‘表’,待重新加入数据\r\n\t\tif ( Object.keys( _storageTable ).toString() === this._keys.toString() ) return;\r\n\r\n\t\t//TODO  未知原因会导致清除所有缓存。 下一版本迭代之\r\n\t\t//else localStorage.removeItem( this._table );\r\n\t}\r\n\r\n\t// 查找 , 返回 Array 或者 null\r\n\tfind( opt ) {\r\n\t\tvar _storageTable = localStorage.getItem( this._table );\r\n\t\tvar result = [];\r\n\t\tif( !_storageTable ) return null;\r\n\t\t_storageTable = JSON.parse( _storageTable );\r\n\t\t// 非条件查询 (没有带条件参数opt或者条件不是一个正常条件)\r\n\t\tif( !opt || opt.constructor.name !== 'Object' ){\r\n\t\t\tfor( var i = 0, j = _storageTable[this._keys[0]].length; i < j; i++ ){\r\n\t\t\t\tvar _result = {};\r\n\t\t\t\tthis._keys.forEach( val => _result[val] = _storageTable[val][i] );\r\n\t\t\t\tresult.push( _result );\r\n\t\t\t}\r\n\t\t}else \r\n\t\t\t// 先条件查询，再筛选\r\n\t\t\tresult = this._check( opt, this.find() ).result;\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t// 查询一条数据，返回 Object 或者 null\r\n\tfindOne( opt ) {\r\n\t\tvar result = this.find( opt );\r\n\t\tif( result ) return result[0];\r\n\t\telse return result;\r\n\t}\r\n\r\n\t// 添加数据, 在表中添加一条记录\r\n\tsave( value ) {\r\n\t\tvar _storageTable = localStorage.getItem( this._table );\r\n\t\t_storageTable = _storageTable ? JSON.parse( _storageTable ) : {};\r\n\r\n\t\t// 只针对model 中配置的key值字段进行添加，其他没有字段不添加，\r\n\t\t// model 设置的字段如果value中没有默认设置为null\r\n\t\tthis._keys.forEach( val => {\r\n\t\t\t_storageTable[val] = _storageTable[val] || [];\r\n\t\t\t_storageTable[val].push( val in value ? value[val] : null );\r\n\t\t} );\r\n\r\n\t\tlocalStorage.setItem( this._table, JSON.stringify( _storageTable ) );\r\n\t}\r\n\r\n\t// 修改操作，必须带参数和值\r\n\tupdate( opt, value ) {\r\n\t\tif( !opt || !value || opt.constructor.name !== 'Object' || value.constructor.name !== 'Object' )\r\n\t\t\tthrow new Error( '参数错误!' );\r\n\r\n\t\tvar result = this.find();\r\n\t\tif( !result ) return;\r\n\t\tvar checkResult = this._check( opt, result );\r\n\r\n\t\tcheckResult.index.forEach( val => {\r\n\t\t\tfor( var i in value ) \r\n\t\t\t\ti in result[val] && (result[val][i] = value[i]);\r\n\t\t} );\r\n\t\tlocalStorage.setItem( this._table, JSON.stringify( this._format(result) ) );\r\n\t}\r\n\r\n\t// 删除, 不带条件全部删除\r\n\tremove( opt ) {\r\n\t\tif( !opt || opt.constructor.name !== 'Object' ) \r\n\t\t\tlocalStorage.removeItem( this._table );\r\n\t\telse {\r\n\t\t\tvar result = this.find();\r\n\t\t\tif( !result ) return;\r\n\r\n\t\t\tlocalStorage.setItem( this._table, JSON.stringify( this._format( this._check( opt, result ).notResult ) ) );\r\n\t\t}\r\n\t}\r\n\r\n\t// 检测匹配对象 , 返回满足条件的对象数组 和满足条件的 index 数组 以及不满足条件的数组\r\n\t_check( opt, arr ){\r\n\t\tvar result = [];\r\n\t\tvar $index = [];\r\n\t\tvar notResult = [];\r\n\t\tarr.forEach( (val, index) => {\r\n\t\t\tfor( var i in opt )\r\n\t\t\t\t// 符合条件 >= <= != 等\r\n\t\t\t\tif( opt[i] && opt[i].constructor.name === 'Object' ){\r\n\t\t\t\t\t// TODO\r\n\t\t\t\t}else\r\n\t\t\t\t\tif( val[i] !== opt[i] ) {\r\n\t\t\t\t\t\tnotResult.push( val );\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t};\r\n\t\t\t$index.push( index );\t\t\r\n\t\t\tresult.push( val );\r\n\t\t} );\r\n\t\treturn {result: result,index: $index, notResult: notResult};\r\n\t}\r\n\r\n\t// 格式化数组为储存对象\r\n\t_format( o ){\r\n\t\tvar result = {};\r\n\t\tfor( var i in this._keys ){\r\n\t\t\tvar _i = this._keys[i];\r\n\t\t\tresult[_i] = [];\r\n\t\t\to.forEach( v => result[_i].push(v[_i]) );\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n}\r\n\r\nmodule.exports = StorageModel;\n},{\"famous/core/CrossCall\":4}],48:[function(require,module,exports){\nmodule.exports={\r\n\t\"version\": 1,\r\n\t\"noticehttp\": \"http://api.qqn123.com/\",\r\n\t\"ajax_base\": \"http://zyjcapp.qqn123.com\", //内网\r\n\t\"webSocket\": \"ws://zyjcapp.qqn123.com/websocket\", //内网\r\n\t// \"ajax_base\": \"http://api.qqn123.com\",//公网\r\n\t// \"webSocket\":\"ws://120.27.119.40:9999/websocket\",//公网\r\n}\n},{}],49:[function(require,module,exports){\nvar StorageModel = require( 'StorageModel' );\r\n\r\nvar VersionModel = new StorageModel( 'Version', {\r\n\tversion: String,\r\n\tpath: String,\r\n\tcancel:Boolean\r\n} );\r\n\r\nmodule.exports = VersionModel;\n},{\"StorageModel\":47}]},{},[44])\n\n","'use strict';\r\nvar Commands = require(\"./Commands\");\r\n\r\n/**\r\n * 提供web主线程与worker间函数互相调用的能力\r\n *\r\n * @class Chan\r\n * @constructor\r\n * @return {undefined} undefined\r\n */\r\nfunction Chan () {\r\n\tthis.running = false;\r\n\tthis._funList={};\r\n\tthis._CallList={};\r\n}\r\n\r\n/**\r\n *设置通道\r\n *\r\n * @method\r\n *\r\n * @param {channel} \r\n */\r\nChan.prototype.setChannel = function( ch ) {\r\n\tthis._channel = ch;\r\n\tthis.start();\r\n};\r\n\r\nChan.prototype.start = function () {\r\n\tthis._running = true;\r\n}\r\n\r\nChan.prototype.stop = function(){\r\n\tthis._running = false;\r\n}\r\n\r\n/**\r\n *添加执行函数和回调函数。\r\n *\r\n * @method\r\n *\r\n * @param {function} 执行函数\r\n * @param {function} 回调函数\r\n */\r\nChan.prototype.add = function( fun, call , param ){ \r\n    var id = new Date();\r\n        id = \"id\"+id.getTime()+ Math.ceil((Math.random()*10000));\r\n\r\n    this._funList[id] = call;\r\n    this._push({id: id, args: param, fun: fun.toString()});\r\n\r\n}\r\n\r\n/**\r\n *向channel 推送数据。\r\n *\r\n * @method\r\n *\r\n * @param {object} obj.id 、obj.res、 obj.fun\r\n */\r\nChan.prototype._push = function( arg ){\r\n\tif( !this._running)return;\r\n\r\n    var CROSS_THREAD_MESSAGE = [Commands.ENGINE, Commands.CROSS_THREAD, arg];\r\n    if( this._channel.sendMessage)\r\n        this._channel.sendMessage(CROSS_THREAD_MESSAGE);\r\n    else\r\n    \tthis._channel.postMessage(CROSS_THREAD_MESSAGE);\r\n}\r\n\r\n/**\r\n *channel.onMessage 时调用。\r\n *\r\n * @method\r\n *\r\n * @param {object} obj.id 、obj.res、 obj.fun\r\n */\r\nChan.prototype.callback = function ( arg ) {\r\n    \r\n\tif(!arg.hasOwnProperty(\"res\")){\r\n\t\tnew funCaller(this, arg).exec();\r\n     \r\n\t}else if(this._funList[arg.id]){\r\n\r\n\t\tthis._funList[arg.id]( arg.res );\r\n\t\tthis._funList[arg.id] = null;\r\n\r\n\t\tdelete this._funList[arg.id];\r\n\t}\r\n}\r\n\r\nfunction funCaller  (ch, arg) {\r\n\t\r\n\tthis.chan = ch \r\n\tthis.fun = arg.fun;\r\n\tthis.id = arg.id;\r\n\r\n\tif( !Array.isArray(arg.args) )\r\n\t\targ.args = [];\r\n\tthis.arg = arg.args;\r\n}\r\n\r\n\r\nfunCaller.prototype.exec = function  (argument) {\r\n\tvar self = this;\r\n    //暂时用Function 期待更好的方法。 \r\n    this.fun = eval(\"(\"+this.fun+\")\");\r\n\r\n    var res = this.fun.apply(this, this.arg);\r\n\r\n\tif( typeof res != \"undefined\")\r\n\t\tself._call(res);\r\n}\r\n\r\nfunCaller.prototype._call = function ( arg ) {\r\n\r\n\tthis.chan._push({id:this.id, res:arg});\r\n}\r\n\r\n\r\nmodule.exports =  new Chan();","/**\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2015 Famous Industries Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n\r\n'use strict';\r\n\r\n/**\r\n * An enumeration of the commands in our command queue.\r\n */\r\nvar Commands = {\r\n    INIT_DOM: 0,\r\n    DOM_RENDER_SIZE: 1,\r\n    CHANGE_TRANSFORM: 2,\r\n    CHANGE_SIZE: 3,\r\n    CHANGE_PROPERTY: 4,\r\n    CHANGE_CONTENT: 5,\r\n    CHANGE_ATTRIBUTE: 6,\r\n    ADD_CLASS: 7,\r\n    REMOVE_CLASS: 8,\r\n    SUBSCRIBE: 9,\r\n    GL_SET_DRAW_OPTIONS: 10,\r\n    GL_AMBIENT_LIGHT: 11,\r\n    GL_LIGHT_POSITION: 12,\r\n    GL_LIGHT_COLOR: 13,\r\n    MATERIAL_INPUT: 14,\r\n    GL_SET_GEOMETRY: 15,\r\n    GL_UNIFORMS: 16,\r\n    GL_BUFFER_DATA: 17,\r\n    GL_CUTOUT_STATE: 18,\r\n    GL_MESH_VISIBILITY: 19,\r\n    GL_REMOVE_MESH: 20,\r\n    PINHOLE_PROJECTION: 21,\r\n    ORTHOGRAPHIC_PROJECTION: 22,\r\n    CHANGE_VIEW_TRANSFORM: 23,\r\n    WITH: 24,\r\n    FRAME: 25,\r\n    ENGINE: 26,\r\n    START: 27,\r\n    STOP: 28,\r\n    TIME: 29,\r\n    TRIGGER: 30,\r\n    NEED_SIZE_FOR: 31,\r\n    DOM: 32,\r\n    READY: 33,\r\n    ALLOW_DEFAULT: 34,\r\n    PREVENT_DEFAULT: 35,\r\n    UNSUBSCRIBE: 36,\r\n    CROSS_THREAD:37,\r\n    prettyPrint: function (buffer, start, count) {\r\n        var callback;\r\n        start = start ? start : 0;\r\n        var data = {\r\n            i: start,\r\n            result: ''\r\n        };\r\n        for (var len = count ? count + start : buffer.length ; data.i < len ; data.i++) {\r\n            callback = commandPrinters[buffer[data.i]];\r\n            if (!callback) throw new Error('PARSE ERROR: no command registered for: ' + buffer[data.i]);\r\n            callback(buffer, data);\r\n        }\r\n        return data.result;\r\n    }\r\n};\r\n\r\nvar commandPrinters = [];\r\n\r\ncommandPrinters[Commands.INIT_DOM] = function init_dom (buffer, data) {\r\n    data.result += data.i + '. INIT_DOM\\n    tagName: ' + buffer[++data.i] + '\\n\\n';\r\n}; \r\n\r\ncommandPrinters[Commands.DOM_RENDER_SIZE] = function dom_render_size (buffer, data) {\r\n    data.result += data.i + '. DOM_RENDER_SIZE\\n    selector: ' + buffer[++data.i] + '\\n\\n';\r\n};\r\n\r\ncommandPrinters[Commands.CHANGE_TRANSFORM] = function change_transform (buffer, data) {\r\n    data.result += data.i + '. CHANGE_TRANSFORM\\n    val: [';\r\n    for (var j = 0 ; j < 16 ; j++) data.result += buffer[++data.i] + (j < 15 ? ', ' : '');\r\n    data.result += ']\\n\\n';\r\n};\r\n\r\ncommandPrinters[Commands.CHANGE_SIZE] = function change_size (buffer, data) {\r\n    data.result += data.i + '. CHANGE_SIZE\\n    x: ' + buffer[++data.i] + ', y: ' + buffer[++data.i] + '\\n\\n';\r\n};\r\n\r\ncommandPrinters[Commands.CHANGE_PROPERTY] = function change_property (buffer, data) {\r\n    data.result += data.i + '. CHANGE_PROPERTY\\n    key: ' + buffer[++data.i] + ', value: ' + buffer[++data.i] + '\\n\\n';\r\n};\r\n\r\ncommandPrinters[Commands.CHANGE_CONTENT] = function change_content (buffer, data) {\r\n    data.result += data.i + '. CHANGE_CONTENT\\n    content: ' + buffer[++data.i] + '\\n\\n';\r\n};\r\n\r\ncommandPrinters[Commands.CHANGE_ATTRIBUTE] = function change_attribute (buffer, data) {\r\n    data.result += data.i + '. CHANGE_ATTRIBUTE\\n    key: ' + buffer[++data.i] + ', value: ' + buffer[++data.i] + '\\n\\n';\r\n};\r\n\r\ncommandPrinters[Commands.ADD_CLASS] = function add_class (buffer, data) {\r\n    data.result += data.i + '. ADD_CLASS\\n    className: ' + buffer[++data.i] + '\\n\\n';\r\n};\r\n\r\ncommandPrinters[Commands.REMOVE_CLASS] = function remove_class (buffer, data) {\r\n    data.result += data.i + '. REMOVE_CLASS\\n    className: ' + buffer[++data.i] + '\\n\\n';\r\n};\r\n\r\ncommandPrinters[Commands.SUBSCRIBE] = function subscribe (buffer, data) {\r\n    data.result += data.i + '. SUBSCRIBE\\n    event: ' + buffer[++data.i] + '\\n\\n';\r\n};\r\n\r\ncommandPrinters[Commands.GL_SET_DRAW_OPTIONS] = function gl_set_draw_options (buffer, data) {\r\n    data.result += data.i + '. GL_SET_DRAW_OPTIONS\\n    options: ' + buffer[++data.i] + '\\n\\n';\r\n};\r\n\r\ncommandPrinters[Commands.GL_AMBIENT_LIGHT] = function gl_ambient_light (buffer, data) {\r\n    data.result += data.i + '. GL_AMBIENT_LIGHT\\n    r: ' + buffer[++data.i] + 'g: ' + buffer[++data.i] + 'b: ' + buffer[++data.i] + '\\n\\n';\r\n};\r\n\r\ncommandPrinters[Commands.GL_LIGHT_POSITION] = function gl_light_position (buffer, data) {\r\n    data.result += data.i + '. GL_LIGHT_POSITION\\n    x: ' + buffer[++data.i] + 'y: ' + buffer[++data.i] + 'z: ' + buffer[++data.i] + '\\n\\n';\r\n};\r\n\r\ncommandPrinters[Commands.GL_LIGHT_COLOR] = function gl_light_color (buffer, data) {\r\n    data.result += data.i + '. GL_LIGHT_COLOR\\n    r: ' + buffer[++data.i] + 'g: ' + buffer[++data.i] + 'b: ' + buffer[++data.i] + '\\n\\n';\r\n};\r\n\r\ncommandPrinters[Commands.MATERIAL_INPUT] = function material_input (buffer, data) {\r\n    data.result += data.i + '. MATERIAL_INPUT\\n    key: ' + buffer[++data.i] + ', value: ' + buffer[++data.i] + '\\n\\n';\r\n};\r\n\r\ncommandPrinters[Commands.GL_SET_GEOMETRY] = function gl_set_geometry (buffer, data) {\r\n    data.result += data.i + '. GL_SET_GEOMETRY\\n   x: ' + buffer[++data.i] + ', y: ' + buffer[++data.i] + ', z: ' + buffer[++data.i] + '\\n\\n';\r\n};\r\n\r\ncommandPrinters[Commands.GL_UNIFORMS] = function gl_uniforms (buffer, data) {\r\n    data.result += data.i + '. GL_UNIFORMS\\n    key: ' + buffer[++data.i] + ', value: ' + buffer[++data.i] + '\\n\\n';\r\n};\r\n\r\ncommandPrinters[Commands.GL_BUFFER_DATA] = function gl_buffer_data (buffer, data) {\r\n    data.result += data.i + '. GL_BUFFER_DATA\\n    data: ';\r\n    for (var i = 0; i < 5 ; i++) data.result += buffer[++data.i] + ', ';\r\n    data.result += '\\n\\n';\r\n};\r\n\r\ncommandPrinters[Commands.GL_CUTOUT_STATE] = function gl_cutout_state (buffer, data) {\r\n    data.result += data.i + '. GL_CUTOUT_STATE\\n    state: ' + buffer[++data.i] + '\\n\\n';\r\n};\r\n\r\ncommandPrinters[Commands.GL_MESH_VISIBILITY] = function gl_mesh_visibility (buffer, data) {\r\n    data.result += data.i + '. GL_MESH_VISIBILITY\\n    visibility: ' + buffer[++data.i] + '\\n\\n';\r\n};\r\n\r\ncommandPrinters[Commands.GL_REMOVE_MESH] = function gl_remove_mesh (buffer, data) {\r\n    data.result += data.i + '. GL_REMOVE_MESH\\n\\n';\r\n};\r\n\r\ncommandPrinters[Commands.PINHOLE_PROJECTION] = function pinhole_projection (buffer, data) {\r\n    data.result += data.i + '. PINHOLE_PROJECTION\\n    depth: ' + buffer[++data.i] + '\\n\\n';\r\n};\r\n\r\ncommandPrinters[Commands.ORTHOGRAPHIC_PROJECTION] = function orthographic_projection (buffer, data) {\r\n    data.result += data.i + '. ORTHOGRAPHIC_PROJECTION\\n';\r\n};\r\n\r\ncommandPrinters[Commands.CHANGE_VIEW_TRANSFORM] = function change_view_transform (buffer, data) {\r\n    data.result += data.i + '. CHANGE_VIEW_TRANSFORM\\n   value: [';\r\n    for (var i = 0; i < 16 ; i++) data.result += buffer[++data.i] + (i < 15 ? ', ' : '');\r\n    data.result += ']\\n\\n';\r\n};\r\n\r\ncommandPrinters[Commands.PREVENT_DEFAULT] = function prevent_default (buffer, data) {\r\n    data.result += data.i + '. PREVENT_DEFAULT\\n    value: ' + buffer[++data.i] + '\\n\\n';\r\n};\r\n\r\ncommandPrinters[Commands.ALLOW_DEFAULT] = function allow_default (buffer, data) {\r\n    data.result += data.i + '. ALLOW_DEFAULT\\n    value: ' + buffer[++data.i] + '\\n\\n';\r\n};\r\n\r\ncommandPrinters[Commands.READY] = function ready (buffer, data) {\r\n    data.result += data.i + '. READY\\n\\n';\r\n};\r\n\r\ncommandPrinters[Commands.WITH] = function w (buffer, data) {\r\n    data.result += data.i + '. **WITH**\\n     path: ' + buffer[++data.i] + '\\n\\n';\r\n};\r\n\r\ncommandPrinters[Commands.TIME] = function time (buffer, data) {\r\n    data.result += data.i + '. TIME\\n     ms: ' + buffer[++data.i] + '\\n\\n';\r\n};\r\n\r\ncommandPrinters[Commands.NEED_SIZE_FOR] = function need_size_for (buffer, data) {\r\n    data.result += data.i + '. NEED_SIZE_FOR\\n    selector: ' + buffer[++data.i] + '\\n\\n';\r\n};\r\n\r\nmodule.exports = Commands;\r\n\r\n","'use strict';\r\n\r\n\r\nvar Chan = require(\"./Chan\");\r\n/**\r\n *CrossCall 主要提供线程间的函数调用功能。\r\n *如在worker内调用 window、document 等对象。\r\n *\r\n * @method\r\n *\r\n * @param {function}  需要线程外执行的函数，通常会有一个返回值 例如：{id:32, text:\"I`m Tester\"}\r\n */\r\nfunction CrossCall( fun , param){\r\n    this._fun = fun;\r\n    this._param = param;\r\n}\r\n\r\n/**\r\n *设置线程外执行函数\r\n *\r\n * @method\r\n *\r\n * @param {function} 需要线程外执行的函数，通常会有一个返回值 例如：{id:32, text:\"I`m Tester\"}\r\n */\r\nCrossCall.prototype.setFun = function ( fun , param) {\r\n\tif( typeof fun !==\"function\" ) return;\r\n\tthis._fun  = fun;\r\n    this._param = param;\r\n\treturn this;\r\n}\r\n\r\n/**\r\n *执行\r\n *\r\n * @method\r\n *\r\n * @param {function} 回调函数，非必要。若设置_fun执行之后会调用之。\r\n */\r\nCrossCall.prototype.exec = function( fun ) {\r\n\r\n\t\tChan.add( this._fun, fun , this._param);\r\n};\r\n\r\nmodule.exports = CrossCall;","/**\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2015 Famous Industries Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n\r\n'use strict';\r\n\r\n/**\r\n * A collection of utilities for handling paths.\r\n *\r\n * @namespace\r\n */\r\nvar Path = {\r\n\r\n    /**\r\n     * determines if the passed in path has a trailing slash. Paths of the form\r\n     * 'body/0/1/' return true, while paths of the form 'body/0/1' return false.\r\n     *\r\n     * @method\r\n     *\r\n     * @param {String} path the path\r\n     *\r\n     * @return {Boolean} whether or not the path has a trailing slash\r\n     */\r\n    hasTrailingSlash: function hasTrailingSlash (path) {\r\n        return path[path.length - 1] === '/';\r\n    },\r\n\r\n    /**\r\n     * Returns the depth in the tree this path represents. Essentially counts\r\n     * the slashes ignoring a trailing slash.\r\n     *\r\n     * @method\r\n     *\r\n     * @param {String} path the path\r\n     *\r\n     * @return {Number} the depth in the tree that this path represents\r\n     */\r\n    depth: function depth (path) {\r\n        var count = 0;\r\n        var length = path.length;\r\n        var len = this.hasTrailingSlash(path) ? length - 1 : length;\r\n        var i = 0;\r\n        for (; i < len ; i++) count += path[i] === '/' ? 1 : 0;\r\n        return count;\r\n    },\r\n\r\n    /**\r\n     * Gets the position of this path in relation to its siblings.\r\n     *\r\n     * @method\r\n     *\r\n     * @param {String} path the path\r\n     *\r\n     * @return {Number} the index of this path in relation to its siblings.\r\n     */\r\n    index: function index (path) {\r\n        var length = path.length;\r\n        var len = this.hasTrailingSlash(path) ? length - 1 : length;\r\n        while (len--) if (path[len] === '/') break;\r\n        var result = parseInt(path.substring(len + 1));\r\n        return isNaN(result) ? 0 : result;\r\n    },\r\n\r\n    /**\r\n     * Gets the position of the path at a particular breadth in relationship\r\n     * to its siblings\r\n     *\r\n     * @method\r\n     *\r\n     * @param {String} path the path\r\n     * @param {Number} depth the breadth at which to find the index\r\n     *\r\n     * @return {Number} index at the particular depth\r\n     */\r\n    indexAtDepth: function indexAtDepth (path, depth) {\r\n        var i = 0;\r\n        var len = path.length;\r\n        var index = 0;\r\n        for (; i < len ; i++) {\r\n            if (path[i] === '/') index++;\r\n            if (index === depth) {\r\n                path = path.substring(i ? i + 1 : i);\r\n                index = path.indexOf('/');\r\n                path = index === -1 ? path : path.substring(0, index);\r\n                index = parseInt(path);\r\n                return isNaN(index) ? path : index;\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * returns the path of the passed in path's parent.\r\n     *\r\n     * @method\r\n     *\r\n     * @param {String} path the path\r\n     *\r\n     * @return {String} the path of the passed in path's parent\r\n     */\r\n    parent: function parent (path) {\r\n        return path.substring(0, path.lastIndexOf('/', path.length - 2));\r\n    },\r\n\r\n    /**\r\n     * Determines whether or not the first argument path is the direct child\r\n     * of the second argument path.\r\n     *\r\n     * @method\r\n     *\r\n     * @param {String} child the path that may be a child\r\n     * @param {String} parent the path that may be a parent\r\n     *\r\n     * @return {Boolean} whether or not the first argument path is a child of the second argument path\r\n     */\r\n    isChildOf: function isChildOf (child, parent) {\r\n        return this.isDescendentOf(child, parent) && this.depth(child) === this.depth(parent) + 1;\r\n    },\r\n\r\n    /**\r\n     * Returns true if the first argument path is a descendent of the second argument path.\r\n     *\r\n     * @method\r\n     *\r\n     * @param {String} child potential descendent path\r\n     * @param {String} parent potential ancestor path\r\n     *\r\n     * @return {Boolean} whether or not the path is a descendent\r\n     */\r\n    isDescendentOf: function isDescendentOf(child, parent) {\r\n        if (child === parent) return false;\r\n        child = this.hasTrailingSlash(child) ? child : child + '/';\r\n        parent = this.hasTrailingSlash(parent) ? parent : parent + '/';\r\n        return this.depth(parent) < this.depth(child) && child.indexOf(parent) === 0;\r\n    },\r\n\r\n    /**\r\n     * returns the selector portion of the path.\r\n     *\r\n     * @method\r\n     *\r\n     * @param {String} path the path\r\n     *\r\n     * @return {String} the selector portion of the path.\r\n     */\r\n    getSelector: function getSelector(path) {\r\n        var index = path.indexOf('/');\r\n        return index === -1 ? path : path.substring(0, index);\r\n    }\r\n\r\n};\r\n\r\nmodule.exports = Path;\r\n","/**\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2015 Famous Industries Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n\r\n'use strict';\r\n\r\nvar ElementCache = require('./ElementCache');\r\nvar math = require('./Math');\r\nvar PathUtils = require('../core/Path');\r\nvar vendorPrefix = require('../utilities/vendorPrefix');\r\nvar CallbackStore = require('../utilities/CallbackStore');\r\nvar eventMap = require('./events/EventMap');\r\n\r\nvar TRANSFORM = null;\r\n\r\n/**\r\n * DOMRenderer is a class responsible for adding elements\r\n * to the DOM and writing to those elements.\r\n * There is a DOMRenderer per context, represented as an\r\n * element and a selector. It is instantiated in the\r\n * context class.\r\n *\r\n * @class DOMRenderer\r\n *\r\n * @param {HTMLElement} element an element.\r\n * @param {String} selector the selector of the element.\r\n * @param {Compositor} compositor the compositor controlling the renderer\r\n */\r\nfunction DOMRenderer (element, selector, compositor) {\r\n    var _this = this;\r\n\r\n    element.classList.add('famous-dom-renderer');\r\n\r\n    TRANSFORM = TRANSFORM || vendorPrefix('transform');\r\n    this._compositor = compositor; // a reference to the compositor\r\n\r\n    this._target = null; // a register for holding the current\r\n                         // element that the Renderer is operating\r\n                         // upon\r\n\r\n    this._parent = null; // a register for holding the parent\r\n                         // of the target\r\n\r\n    this._path = null; // a register for holding the path of the target\r\n                       // this register must be set first, and then\r\n                       // children, target, and parent are all looked\r\n                       // up from that.\r\n\r\n    this._children = []; // a register for holding the children of the\r\n                         // current target.\r\n\r\n     this._insertElCallbackStore = new CallbackStore();\r\n     this._removeElCallbackStore = new CallbackStore();\r\n\r\n    this._root = new ElementCache(element, selector); // the root\r\n                                                      // of the dom tree that this\r\n                                                      // renderer is responsible\r\n                                                      // for\r\n\r\n    this._boundTriggerEvent = function (ev) {\r\n        return _this._triggerEvent(ev);\r\n    };\r\n\r\n    this._selector = selector;\r\n\r\n    this._elements = {};\r\n\r\n    this._elements[selector] = this._root;\r\n\r\n    this.perspectiveTransform = new Float32Array([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);\r\n    this._VPtransform = new Float32Array([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);\r\n\r\n    this._lastEv = null;\r\n}\r\n\r\n\r\n/**\r\n * Attaches an EventListener to the element associated with the passed in path.\r\n * Prevents the default browser action on all subsequent events if\r\n * `preventDefault` is truthy.\r\n * All incoming events will be forwarded to the compositor by invoking the\r\n * `sendEvent` method.\r\n * Delegates events if possible by attaching the event listener to the context.\r\n *\r\n * @method\r\n *\r\n * @param {String} type DOM event type (e.g. click, mouseover).\r\n * @param {Boolean} preventDefault Whether or not the default browser action should be prevented.\r\n *\r\n * @return {undefined} undefined\r\n */\r\nDOMRenderer.prototype.subscribe = function subscribe(type) {\r\n    this._assertTargetLoaded();\r\n    this._listen(type);\r\n    this._target.subscribe[type] = true;\r\n};\r\n\r\n/**\r\n * Used to preventDefault if an event of the specified type is being emitted on\r\n * the currently loaded target.\r\n *\r\n * @method\r\n *\r\n * @param  {String} type    The type of events that should be prevented.\r\n * @return {undefined}      undefined\r\n */\r\nDOMRenderer.prototype.preventDefault = function preventDefault(type) {\r\n    this._assertTargetLoaded();\r\n    this._listen(type);\r\n    this._target.preventDefault[type] = true;\r\n};\r\n\r\n/**\r\n * Used to undo a previous call to preventDefault. No longer `preventDefault`\r\n * for this event on the loaded target.\r\n *\r\n * @method\r\n * @private\r\n *\r\n * @param  {String} type    The event type that should no longer be affected by\r\n *                          `preventDefault`.\r\n * @return {undefined}      undefined\r\n */\r\nDOMRenderer.prototype.allowDefault = function allowDefault(type) {\r\n    this._assertTargetLoaded();\r\n    this._listen(type);\r\n    this._target.preventDefault[type] = false;\r\n};\r\n\r\n/**\r\n * Internal helper function used for adding an event listener for the the\r\n * currently loaded ElementCache.\r\n *\r\n * If the event can be delegated as specified in the {@link EventMap}, the\r\n * bound {@link _triggerEvent} function will be added as a listener on the\r\n * root element. Otherwise, the listener will be added directly to the target\r\n * element.\r\n *\r\n * @private\r\n * @method\r\n *\r\n * @param  {String} type    The event type to listen to (e.g. click).\r\n * @return {undefined}      undefined\r\n */\r\nDOMRenderer.prototype._listen = function _listen(type) {\r\n    this._assertTargetLoaded();\r\n\r\n    if (\r\n        !this._target.listeners[type] && !this._root.listeners[type]\r\n    ) {\r\n        // FIXME Add to content DIV if available\r\n        var target = eventMap[type][1] ? this._root : this._target;\r\n        target.listeners[type] = this._boundTriggerEvent;\r\n        target.element.addEventListener(type, this._boundTriggerEvent);\r\n    }\r\n};\r\n\r\n/**\r\n * Unsubscribes from all events that are of the specified type.\r\n *\r\n * @method\r\n *\r\n * @param {String} type DOM event type (e.g. click, mouseover).\r\n * @return {undefined} undefined\r\n */\r\nDOMRenderer.prototype.unsubscribe = function unsubscribe(type) {\r\n    this._assertTargetLoaded();\r\n    this._target.subscribe[type] = false;\r\n};\r\n\r\n/**\r\n * Function to be added using `addEventListener` to the corresponding\r\n * DOMElement.\r\n *\r\n * @method\r\n * @private\r\n *\r\n * @param {Event} ev DOM Event payload\r\n *\r\n * @return {undefined} undefined\r\n */\r\nDOMRenderer.prototype._triggerEvent = function _triggerEvent(ev) {\r\n    if (this._lastEv === ev) return;\r\n\r\n    // Use ev.path, which is an array of Elements (polyfilled if needed).\r\n    var evPath = ev.path ? ev.path : _getPath(ev);\r\n    // First element in the path is the element on which the event has actually\r\n    // been emitted.\r\n    for (var i = 0; i < evPath.length; i++) {\r\n        // Skip nodes that don't have a dataset property or data-fa-path\r\n        // attribute.\r\n        if (!evPath[i].dataset) continue;\r\n        var path = evPath[i].dataset.faPath;\r\n        if (!path) continue;\r\n\r\n        // Optionally preventDefault. This needs forther consideration and\r\n        // should be optional. Eventually this should be a separate command/\r\n        // method.\r\n        if (this._elements[path].preventDefault[ev.type]) {\r\n            ev.preventDefault();\r\n        }\r\n\r\n        // Stop further event propogation and path traversal as soon as the\r\n        // first ElementCache subscribing for the emitted event has been found.\r\n        if (this._elements[path] && this._elements[path].subscribe[ev.type]) {\r\n            this._lastEv = ev;\r\n\r\n            var NormalizedEventConstructor = eventMap[ev.type][0];\r\n\r\n            // Finally send the event to the Worker Thread through the\r\n            // compositor.\r\n            this._compositor.sendEvent(path, ev.type, new NormalizedEventConstructor(ev));\r\n\r\n            break;\r\n        }\r\n    }\r\n};\r\n\r\n\r\n/**\r\n * getSizeOf gets the dom size of a particular DOM element.  This is\r\n * needed for render sizing in the scene graph.\r\n *\r\n * @method\r\n *\r\n * @param {String} path path of the Node in the scene graph\r\n *\r\n * @return {Array} a vec3 of the offset size of the dom element\r\n */\r\nDOMRenderer.prototype.getSizeOf = function getSizeOf(path) {\r\n    var element = this._elements[path];\r\n    if (!element) return null;\r\n\r\n    var res = {val: element.size};\r\n    this._compositor.sendEvent(path, 'resize', res);\r\n    return res;\r\n};\r\n\r\nfunction _getPath(ev) {\r\n    // TODO move into _triggerEvent, avoid object allocation\r\n    var path = [];\r\n    var node = ev.target;\r\n    while (node !== document.body) {\r\n        path.push(node);\r\n        node = node.parentNode;\r\n    }\r\n    return path;\r\n}\r\n\r\n/**\r\n * Executes the retrieved draw commands. Draw commands only refer to the\r\n * cross-browser normalized `transform` property.\r\n *\r\n * @method\r\n *\r\n * @param {Object} renderState description\r\n *\r\n * @return {undefined} undefined\r\n */\r\nDOMRenderer.prototype.draw = function draw(renderState) {\r\n    if (renderState.perspectiveDirty) {\r\n        this.perspectiveDirty = true;\r\n\r\n        this.perspectiveTransform[0] = renderState.perspectiveTransform[0];\r\n        this.perspectiveTransform[1] = renderState.perspectiveTransform[1];\r\n        this.perspectiveTransform[2] = renderState.perspectiveTransform[2];\r\n        this.perspectiveTransform[3] = renderState.perspectiveTransform[3];\r\n\r\n        this.perspectiveTransform[4] = renderState.perspectiveTransform[4];\r\n        this.perspectiveTransform[5] = renderState.perspectiveTransform[5];\r\n        this.perspectiveTransform[6] = renderState.perspectiveTransform[6];\r\n        this.perspectiveTransform[7] = renderState.perspectiveTransform[7];\r\n\r\n        this.perspectiveTransform[8] = renderState.perspectiveTransform[8];\r\n        this.perspectiveTransform[9] = renderState.perspectiveTransform[9];\r\n        this.perspectiveTransform[10] = renderState.perspectiveTransform[10];\r\n        this.perspectiveTransform[11] = renderState.perspectiveTransform[11];\r\n\r\n        this.perspectiveTransform[12] = renderState.perspectiveTransform[12];\r\n        this.perspectiveTransform[13] = renderState.perspectiveTransform[13];\r\n        this.perspectiveTransform[14] = renderState.perspectiveTransform[14];\r\n        this.perspectiveTransform[15] = renderState.perspectiveTransform[15];\r\n    }\r\n\r\n    if (renderState.viewDirty || renderState.perspectiveDirty) {\r\n        math.multiply(this._VPtransform, this.perspectiveTransform, renderState.viewTransform);\r\n        this._root.element.style[TRANSFORM] = this._stringifyMatrix(this._VPtransform);\r\n    }\r\n};\r\n\r\n\r\n/**\r\n * Internal helper function used for ensuring that a path is currently loaded.\r\n *\r\n * @method\r\n * @private\r\n *\r\n * @return {undefined} undefined\r\n */\r\nDOMRenderer.prototype._assertPathLoaded = function _asserPathLoaded() {\r\n    if (!this._path) throw new Error('path not loaded');\r\n};\r\n\r\n/**\r\n * Internal helper function used for ensuring that a parent is currently loaded.\r\n *\r\n * @method\r\n * @private\r\n *\r\n * @return {undefined} undefined\r\n */\r\nDOMRenderer.prototype._assertParentLoaded = function _assertParentLoaded() {\r\n    if (!this._parent) throw new Error('parent not loaded');\r\n};\r\n\r\n/**\r\n * Internal helper function used for ensuring that children are currently\r\n * loaded.\r\n *\r\n * @method\r\n * @private\r\n *\r\n * @return {undefined} undefined\r\n */\r\nDOMRenderer.prototype._assertChildrenLoaded = function _assertChildrenLoaded() {\r\n    if (!this._children) throw new Error('children not loaded');\r\n};\r\n\r\n/**\r\n * Internal helper function used for ensuring that a target is currently loaded.\r\n *\r\n * @method  _assertTargetLoaded\r\n *\r\n * @return {undefined} undefined\r\n */\r\nDOMRenderer.prototype._assertTargetLoaded = function _assertTargetLoaded() {\r\n    if (!this._target) throw new Error('No target loaded');\r\n};\r\n\r\n/**\r\n * Finds and sets the parent of the currently loaded element (path).\r\n *\r\n * @method\r\n * @private\r\n *\r\n * @return {ElementCache} Parent element.\r\n */\r\nDOMRenderer.prototype.findParent = function findParent () {\r\n    this._assertPathLoaded();\r\n\r\n    var path = this._path;\r\n    var parent;\r\n\r\n    while (!parent && path.length) {\r\n        path = path.substring(0, path.lastIndexOf('/'));\r\n        parent = this._elements[path];\r\n    }\r\n\r\n    this._parent = parent;\r\n    return parent;\r\n};\r\n\r\n/**\r\n * Used for determining the target loaded under the current path.\r\n *\r\n * @method\r\n * @deprecated\r\n *\r\n * @return {ElementCache|undefined} Element loaded under defined path.\r\n */\r\nDOMRenderer.prototype.findTarget = function findTarget() {\r\n    this._target = this._elements[this._path];\r\n    return this._target;\r\n};\r\n\r\n/**\r\n * Loads the passed in path into the DOMRenderer.\r\n *\r\n * @method\r\n *\r\n * @param {String} path Path to be loaded\r\n *\r\n * @return {String} Loaded path\r\n */\r\nDOMRenderer.prototype.loadPath = function loadPath (path) {\r\n    this._path = path;\r\n    this._target = this._elements[this._path];\r\n    return this._path;\r\n};\r\n\r\n/**\r\n * Finds children of a parent element that are descendents of a inserted element in the scene\r\n * graph. Appends those children to the inserted element.\r\n *\r\n * @method resolveChildren\r\n * @return {void}\r\n *\r\n * @param {HTMLElement} element the inserted element\r\n * @param {HTMLElement} parent the parent of the inserted element\r\n */\r\nDOMRenderer.prototype.resolveChildren = function resolveChildren (element, parent) {\r\n    var i = 0;\r\n    var childNode;\r\n    var path = this._path;\r\n    var childPath;\r\n\r\n    while ((childNode = parent.childNodes[i])) {\r\n        if (!childNode.dataset) {\r\n            i++;\r\n            continue;\r\n        }\r\n        childPath = childNode.dataset.faPath;\r\n        if (!childPath) {\r\n            i++;\r\n            continue;\r\n        }\r\n        if (PathUtils.isDescendentOf(childPath, path)) element.appendChild(childNode);\r\n        else i++;\r\n    }\r\n};\r\n\r\n/**\r\n * Inserts a DOMElement at the currently loaded path, assuming no target is\r\n * loaded. Only one DOMElement can be associated with each path.\r\n *\r\n * @method\r\n *\r\n * @param {String} tagName Tag name (capitalization will be normalized).\r\n *\r\n * @return {undefined} undefined\r\n */\r\nDOMRenderer.prototype.insertEl = function insertEl (tagName) {\r\n\r\n    this.findParent();\r\n\r\n    this._assertParentLoaded();\r\n\r\n    if (this._parent.void)\r\n        throw new Error(\r\n            this._parent.path + ' is a void element. ' +\r\n            'Void elements are not allowed to have children.'\r\n        );\r\n\r\n    if (!this._target) this._target = new ElementCache(document.createElement(tagName), this._path);\r\n\r\n    var el = this._target.element;\r\n    var parent = this._parent.element;\r\n\r\n    this.resolveChildren(el, parent);\r\n\r\n    parent.appendChild(el);\r\n    this._elements[this._path] = this._target;\r\n\r\n    this._insertElCallbackStore.trigger(this._path, this._target);\r\n\r\n};\r\n\r\n\r\n/**\r\n * Sets a property on the currently loaded target.\r\n *\r\n * @method\r\n *\r\n * @param {String} name Property name (e.g. background, color, font)\r\n * @param {String} value Proprty value (e.g. black, 20px)\r\n *\r\n * @return {undefined} undefined\r\n */\r\nDOMRenderer.prototype.setProperty = function setProperty (name, value) {\r\n    this._assertTargetLoaded();\r\n    this._target.element.style[name] = value;\r\n};\r\n\r\n\r\n/**\r\n * Sets the size of the currently loaded target.\r\n * Removes any explicit sizing constraints when passed in `false`\r\n * (\"true-sizing\").\r\n *\r\n * Invoking setSize is equivalent to a manual invocation of `setWidth` followed\r\n * by `setHeight`.\r\n *\r\n * @method\r\n *\r\n * @param {Number|false} width   Width to be set.\r\n * @param {Number|false} height  Height to be set.\r\n *\r\n * @return {undefined} undefined\r\n */\r\nDOMRenderer.prototype.setSize = function setSize (width, height) {\r\n    this._assertTargetLoaded();\r\n\r\n    this.setWidth(width);\r\n    this.setHeight(height);\r\n};\r\n\r\n/**\r\n * Sets the width of the currently loaded ElementCache.\r\n *\r\n * @method\r\n *\r\n * @param  {Number|false} width     The explicit width to be set on the\r\n *                                  ElementCache's target (and content) element.\r\n *                                  `false` removes any explicit sizing\r\n *                                  constraints from the underlying DOM\r\n *                                  Elements.\r\n *\r\n * @return {undefined} undefined\r\n */\r\nDOMRenderer.prototype.setWidth = function setWidth(width) {\r\n    this._assertTargetLoaded();\r\n\r\n    var contentWrapper = this._target.content;\r\n\r\n    if (width === false) {\r\n        this._target.explicitWidth = true;\r\n        if (contentWrapper) contentWrapper.style.width = '';\r\n        width = contentWrapper ? contentWrapper.offsetWidth : 0;\r\n        this._target.element.style.width = width + 'px';\r\n    }\r\n    else {\r\n        this._target.explicitWidth = false;\r\n        if (contentWrapper) contentWrapper.style.width = width + 'px';\r\n        this._target.element.style.width = width + 'px';\r\n    }\r\n\r\n    this._target.size[0] = width;\r\n};\r\n\r\n/**\r\n * Sets the height of the currently loaded ElementCache.\r\n *\r\n * @method  setHeight\r\n *\r\n * @param  {Number|false} height    The explicit height to be set on the\r\n *                                  ElementCache's target (and content) element.\r\n *                                  `false` removes any explicit sizing\r\n *                                  constraints from the underlying DOM\r\n *                                  Elements.\r\n *\r\n * @return {undefined} undefined\r\n */\r\nDOMRenderer.prototype.setHeight = function setHeight(height) {\r\n    this._assertTargetLoaded();\r\n\r\n    var contentWrapper = this._target.content;\r\n\r\n    if (height === false) {\r\n        this._target.explicitHeight = true;\r\n        if (contentWrapper) contentWrapper.style.height = '';\r\n        height = contentWrapper ? contentWrapper.offsetHeight : 0;\r\n        this._target.element.style.height = height + 'px';\r\n    }\r\n    else {\r\n        this._target.explicitHeight = false;\r\n        if (contentWrapper) contentWrapper.style.height = height + 'px';\r\n        this._target.element.style.height = height + 'px';\r\n    }\r\n\r\n    this._target.size[1] = height;\r\n};\r\n\r\n/**\r\n * Sets an attribute on the currently loaded target.\r\n *\r\n * @method\r\n *\r\n * @param {String} name Attribute name (e.g. href)\r\n * @param {String} value Attribute value (e.g. http://famous.org)\r\n *\r\n * @return {undefined} undefined\r\n */\r\nDOMRenderer.prototype.setAttribute = function setAttribute(name, value) {\r\n    this._assertTargetLoaded();\r\n    this._target.element.setAttribute(name, value);\r\n    if (name ===\"value\")\r\n        this._target.element.value = value;\r\n};\r\n\r\n/**\r\n * Sets the `innerHTML` content of the currently loaded target.\r\n *\r\n * @method\r\n *\r\n * @param {String} content Content to be set as `innerHTML`\r\n *\r\n * @return {undefined} undefined\r\n */\r\nDOMRenderer.prototype.setContent = function setContent(content) {\r\n    this._assertTargetLoaded();\r\n\r\n    if (this._target.formElement) {\r\n        this._target.element.value = content;\r\n    }\r\n    else {\r\n        if (!this._target.content) {\r\n            this._target.content = document.createElement('div');\r\n            this._target.content.classList.add('famous-dom-element-content');\r\n            this._target.element.insertBefore(\r\n                this._target.content,\r\n                this._target.element.firstChild\r\n            );\r\n        }\r\n        this._target.content.innerHTML = content;\r\n    }\r\n\r\n\r\n    this.setSize(\r\n        this._target.explicitWidth ? false : this._target.size[0],\r\n        this._target.explicitHeight ? false : this._target.size[1]\r\n    );\r\n};\r\n\r\n\r\n/**\r\n * Sets the passed in transform matrix (world space). Inverts the parent's world\r\n * transform.\r\n *\r\n * @method\r\n *\r\n * @param {Float32Array} transform The transform for the loaded DOM Element in world space\r\n *\r\n * @return {undefined} undefined\r\n */\r\nDOMRenderer.prototype.setMatrix = function setMatrix (transform) {\r\n    this._assertTargetLoaded();\r\n    this._target.element.style[TRANSFORM] = this._stringifyMatrix(transform);\r\n};\r\n\r\n\r\n/**\r\n * Adds a class to the classList associated with the currently loaded target.\r\n *\r\n * @method\r\n *\r\n * @param {String} domClass Class name to be added to the current target.\r\n *\r\n * @return {undefined} undefined\r\n */\r\nDOMRenderer.prototype.addClass = function addClass(domClass) {\r\n    this._assertTargetLoaded();\r\n    this._target.element.classList.add(domClass);\r\n};\r\n\r\n\r\n/**\r\n * Removes a class from the classList associated with the currently loaded\r\n * target.\r\n *\r\n * @method\r\n *\r\n * @param {String} domClass Class name to be removed from currently loaded target.\r\n *\r\n * @return {undefined} undefined\r\n */\r\nDOMRenderer.prototype.removeClass = function removeClass(domClass) {\r\n    this._assertTargetLoaded();\r\n    this._target.element.classList.remove(domClass);\r\n};\r\n\r\n\r\n/**\r\n * Stringifies the passed in matrix for setting the `transform` property.\r\n *\r\n * @method  _stringifyMatrix\r\n * @private\r\n *\r\n * @param {Array} m    Matrix as an array or array-like object.\r\n * @return {String}     Stringified matrix as `matrix3d`-property.\r\n */\r\nDOMRenderer.prototype._stringifyMatrix = function _stringifyMatrix(m) {\r\n    var r = 'matrix3d(';\r\n\r\n    r += (m[0] < 0.000001 && m[0] > -0.000001) ? '0,' : m[0] + ',';\r\n    r += (m[1] < 0.000001 && m[1] > -0.000001) ? '0,' : m[1] + ',';\r\n    r += (m[2] < 0.000001 && m[2] > -0.000001) ? '0,' : m[2] + ',';\r\n    r += (m[3] < 0.000001 && m[3] > -0.000001) ? '0,' : m[3] + ',';\r\n    r += (m[4] < 0.000001 && m[4] > -0.000001) ? '0,' : m[4] + ',';\r\n    r += (m[5] < 0.000001 && m[5] > -0.000001) ? '0,' : m[5] + ',';\r\n    r += (m[6] < 0.000001 && m[6] > -0.000001) ? '0,' : m[6] + ',';\r\n    r += (m[7] < 0.000001 && m[7] > -0.000001) ? '0,' : m[7] + ',';\r\n    r += (m[8] < 0.000001 && m[8] > -0.000001) ? '0,' : m[8] + ',';\r\n    r += (m[9] < 0.000001 && m[9] > -0.000001) ? '0,' : m[9] + ',';\r\n    r += (m[10] < 0.000001 && m[10] > -0.000001) ? '0,' : m[10] + ',';\r\n    r += (m[11] < 0.000001 && m[11] > -0.000001) ? '0,' : m[11] + ',';\r\n    r += (m[12] < 0.000001 && m[12] > -0.000001) ? '0,' : m[12] + ',';\r\n    r += (m[13] < 0.000001 && m[13] > -0.000001) ? '0,' : m[13] + ',';\r\n    r += (m[14] < 0.000001 && m[14] > -0.000001) ? '0,' : m[14] + ',';\r\n\r\n    r += m[15] + ')';\r\n    return r;\r\n};\r\n\r\n/**\r\n * Registers a function to be executed when a new element is being inserted at\r\n * the specified path.\r\n *\r\n * @method\r\n *\r\n * @param  {String}   path      Path at which to listen for element insertion.\r\n * @param  {Function} callback  Function to be executed when an insertion\r\n *                              occurs.\r\n * @return {DOMRenderer}        this\r\n */\r\nDOMRenderer.prototype.onInsertEl = function onInsertEl(path, callback) {\r\n    this._insertElCallbackStore.on(path, callback);\r\n    return this;\r\n};\r\n\r\n/**\r\n * Deregisters a listener function to be no longer executed on future element\r\n * insertions at the specified path.\r\n *\r\n * @method\r\n *\r\n * @param  {String}   path      Path at which the listener function has been\r\n *                              registered.\r\n * @param  {Function} callback  Callback function to be deregistered.\r\n * @return {DOMRenderer}        this\r\n */\r\nDOMRenderer.prototype.offInsertEl = function offInsertEl(path, callback) {\r\n    this._insertElCallbackStore.off(path, callback);\r\n    return this;\r\n};\r\n\r\n/**\r\n * Registers an event handler to be triggered as soon as an element at the\r\n * specified path is being removed.\r\n *\r\n * @method\r\n *\r\n * @param  {String}   path      Path at which to listen for the removal of an\r\n *                              element.\r\n * @param  {Function} callback  Function to be executed when an element is\r\n *                              being removed at the specified path.\r\n * @return {DOMRenderer}        this\r\n */\r\nDOMRenderer.prototype.onRemoveEl = function onRemoveEl(path, callback) {\r\n    this._removeElCallbackStore.on(path, callback);\r\n    return this;\r\n};\r\n\r\n/**\r\n * Deregisters a listener function to be no longer executed when an element is\r\n * being removed from the specified path.\r\n *\r\n * @method\r\n *\r\n * @param  {String}   path      Path at which the listener function has been\r\n *                              registered.\r\n * @param  {Function} callback  Callback function to be deregistered.\r\n * @return {DOMRenderer}        this\r\n */\r\nDOMRenderer.prototype.offRemoveEl = function offRemoveEl(path, callback) {\r\n    this._removeElCallbackStore.off(path, callback);\r\n    return this;\r\n};\r\n\r\nmodule.exports = DOMRenderer;\r\n","/**\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2015 Famous Industries Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n\r\n'use strict';\r\n\r\nvar VoidElements = require('./VoidElements');\r\n\r\n/**\r\n * ElementCache is being used for keeping track of an element's DOM Element,\r\n * path, world transform, inverted parent, final transform (as being used for\r\n * setting the actual `transform`-property) and post render size (final size as\r\n * being rendered to the DOM).\r\n *\r\n * @class ElementCache\r\n *\r\n * @param {Element} element DOMElement\r\n * @param {String} path Path used for uniquely identifying the location in the\r\n *                      scene graph.\r\n */\r\nfunction ElementCache (element, path) {\r\n    this.tagName = element.tagName.toLowerCase();\r\n    this.void = VoidElements[this.tagName];\r\n\r\n    var constructor = element.constructor;\r\n\r\n    this.formElement = constructor === HTMLInputElement ||\r\n        constructor === HTMLTextAreaElement ||\r\n        constructor === HTMLSelectElement;\r\n\r\n    this.element = element;\r\n    this.path = path;\r\n    this.content = null;\r\n    this.size = new Int16Array(3);\r\n    this.explicitHeight = false;\r\n    this.explicitWidth = false;\r\n    this.postRenderSize = new Float32Array(2);\r\n    this.listeners = {};\r\n    this.preventDefault = {};\r\n    this.subscribe = {};\r\n}\r\n\r\nmodule.exports = ElementCache;\r\n","/**\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2015 Famous Industries Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n\r\n'use strict';\r\n\r\n/**\r\n * A method for inverting a transform matrix\r\n *\r\n * @method\r\n *\r\n * @param {Array} out array to store the return of the inversion\r\n * @param {Array} a transform matrix to inverse\r\n *\r\n * @return {Array} out\r\n *   output array that is storing the transform matrix\r\n */\r\nfunction invert (out, a) {\r\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\r\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\r\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\r\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\r\n\r\n        b00 = a00 * a11 - a01 * a10,\r\n        b01 = a00 * a12 - a02 * a10,\r\n        b02 = a00 * a13 - a03 * a10,\r\n        b03 = a01 * a12 - a02 * a11,\r\n        b04 = a01 * a13 - a03 * a11,\r\n        b05 = a02 * a13 - a03 * a12,\r\n        b06 = a20 * a31 - a21 * a30,\r\n        b07 = a20 * a32 - a22 * a30,\r\n        b08 = a20 * a33 - a23 * a30,\r\n        b09 = a21 * a32 - a22 * a31,\r\n        b10 = a21 * a33 - a23 * a31,\r\n        b11 = a22 * a33 - a23 * a32,\r\n\r\n        // Calculate the determinant\r\n        det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n    if (!det) {\r\n        return null;\r\n    }\r\n    det = 1.0 / det;\r\n\r\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n    out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n    out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n    out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\r\n    out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n    out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n    out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n    out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\r\n    out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n    out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n    out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n    out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\r\n    out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\r\n    out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\r\n    out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\r\n    out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\r\n\r\n    return out;\r\n}\r\n\r\n/**\r\n * A method for multiplying two matricies\r\n *\r\n * @method\r\n *\r\n * @param {Array} out array to store the return of the multiplication\r\n * @param {Array} a transform matrix to multiply\r\n * @param {Array} b transform matrix to multiply\r\n *\r\n * @return {Array} out\r\n *   output array that is storing the transform matrix\r\n */\r\nfunction multiply (out, a, b) {\r\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\r\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\r\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\r\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\r\n\r\n        b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3],\r\n        b4 = b[4], b5 = b[5], b6 = b[6], b7 = b[7],\r\n        b8 = b[8], b9 = b[9], b10 = b[10], b11 = b[11],\r\n        b12 = b[12], b13 = b[13], b14 = b[14], b15 = b[15];\r\n\r\n    var changed = false;\r\n    var out0, out1, out2, out3;\r\n\r\n    out0 = b0*a00 + b1*a10 + b2*a20 + b3*a30;\r\n    out1 = b0*a01 + b1*a11 + b2*a21 + b3*a31;\r\n    out2 = b0*a02 + b1*a12 + b2*a22 + b3*a32;\r\n    out3 = b0*a03 + b1*a13 + b2*a23 + b3*a33;\r\n\r\n    changed = changed ?\r\n              changed : out0 === out[0] ||\r\n                        out1 === out[1] ||\r\n                        out2 === out[2] ||\r\n                        out3 === out[3];\r\n\r\n    out[0] = out0;\r\n    out[1] = out1;\r\n    out[2] = out2;\r\n    out[3] = out3;\r\n\r\n    b0 = b4; b1 = b5; b2 = b6; b3 = b7;\r\n    out0 = b0*a00 + b1*a10 + b2*a20 + b3*a30;\r\n    out1 = b0*a01 + b1*a11 + b2*a21 + b3*a31;\r\n    out2 = b0*a02 + b1*a12 + b2*a22 + b3*a32;\r\n    out3 = b0*a03 + b1*a13 + b2*a23 + b3*a33;\r\n\r\n    changed = changed ?\r\n              changed : out0 === out[4] ||\r\n                        out1 === out[5] ||\r\n                        out2 === out[6] ||\r\n                        out3 === out[7];\r\n\r\n    out[4] = out0;\r\n    out[5] = out1;\r\n    out[6] = out2;\r\n    out[7] = out3;\r\n\r\n    b0 = b8; b1 = b9; b2 = b10; b3 = b11;\r\n    out0 = b0*a00 + b1*a10 + b2*a20 + b3*a30;\r\n    out1 = b0*a01 + b1*a11 + b2*a21 + b3*a31;\r\n    out2 = b0*a02 + b1*a12 + b2*a22 + b3*a32;\r\n    out3 = b0*a03 + b1*a13 + b2*a23 + b3*a33;\r\n\r\n    changed = changed ?\r\n              changed : out0 === out[8] ||\r\n                        out1 === out[9] ||\r\n                        out2 === out[10] ||\r\n                        out3 === out[11];\r\n\r\n    out[8] = out0;\r\n    out[9] = out1;\r\n    out[10] = out2;\r\n    out[11] = out3;\r\n\r\n    b0 = b12; b1 = b13; b2 = b14; b3 = b15;\r\n    out0 = b0*a00 + b1*a10 + b2*a20 + b3*a30;\r\n    out1 = b0*a01 + b1*a11 + b2*a21 + b3*a31;\r\n    out2 = b0*a02 + b1*a12 + b2*a22 + b3*a32;\r\n    out3 = b0*a03 + b1*a13 + b2*a23 + b3*a33;\r\n\r\n    changed = changed ?\r\n              changed : out0 === out[12] ||\r\n                        out1 === out[13] ||\r\n                        out2 === out[14] ||\r\n                        out3 === out[15];\r\n\r\n    out[12] = out0;\r\n    out[13] = out1;\r\n    out[14] = out2;\r\n    out[15] = out3;\r\n\r\n    return out;\r\n}\r\n\r\nmodule.exports = {\r\n    multiply: multiply,\r\n    invert: invert\r\n};\r\n","/**\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2015 Famous Industries Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n\r\n'use strict';\r\n\r\n/**\r\n * Map of void elements as defined by the\r\n * [HTML5 spec](http://www.w3.org/TR/html5/syntax.html#elements-0).\r\n *\r\n * @type {Object}\r\n */\r\nvar VoidElements = {\r\n    area  : true,\r\n    base  : true,\r\n    br    : true,\r\n    col   : true,\r\n    embed : true,\r\n    hr    : true,\r\n    img   : true,\r\n    input : true,\r\n    keygen: true,\r\n    link  : true,\r\n    meta  : true,\r\n    param : true,\r\n    source: true,\r\n    track : true,\r\n    wbr   : true\r\n};\r\n\r\nmodule.exports = VoidElements;\r\n","/**\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2015 Famous Industries Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n\r\n'use strict';\r\n\r\nvar UIEvent = require('./UIEvent');\r\n\r\n/**\r\n * See [UI Events (formerly DOM Level 3 Events)](http://www.w3.org/TR/2015/WD-uievents-20150428/#events-compositionevents).\r\n *\r\n * @class CompositionEvent\r\n * @augments UIEvent\r\n *\r\n * @param {Event} ev The native DOM event.\r\n */\r\nfunction CompositionEvent(ev) {\r\n    // [Constructor(DOMString typeArg, optional CompositionEventInit compositionEventInitDict)]\r\n    // interface CompositionEvent : UIEvent {\r\n    //     readonly    attribute DOMString data;\r\n    // };\r\n\r\n    UIEvent.call(this, ev);\r\n\r\n    /**\r\n     * @name CompositionEvent#data\r\n     * @type String\r\n     */\r\n    this.data = ev.data;\r\n}\r\n\r\nCompositionEvent.prototype = Object.create(UIEvent.prototype);\r\nCompositionEvent.prototype.constructor = CompositionEvent;\r\n\r\n/**\r\n * Return the name of the event type\r\n *\r\n * @method\r\n *\r\n * @return {String} Name of the event type\r\n */\r\nCompositionEvent.prototype.toString = function toString () {\r\n    return 'CompositionEvent';\r\n};\r\n\r\nmodule.exports = CompositionEvent;\r\n","/**\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2015 Famous Industries Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n\r\n'use strict';\r\n\r\n/**\r\n * The Event class is being used in order to normalize native DOM events.\r\n * Events need to be normalized in order to be serialized through the structured\r\n * cloning algorithm used by the `postMessage` method (Web Workers).\r\n *\r\n * Wrapping DOM events also has the advantage of providing a consistent\r\n * interface for interacting with DOM events across browsers by copying over a\r\n * subset of the exposed properties that is guaranteed to be consistent across\r\n * browsers.\r\n *\r\n * See [UI Events (formerly DOM Level 3 Events)](http://www.w3.org/TR/2015/WD-uievents-20150428/#interface-Event).\r\n *\r\n * @class Event\r\n *\r\n * @param {Event} ev The native DOM event.\r\n */\r\nfunction Event(ev) {\r\n    // [Constructor(DOMString type, optional EventInit eventInitDict),\r\n    //  Exposed=Window,Worker]\r\n    // interface Event {\r\n    //   readonly attribute DOMString type;\r\n    //   readonly attribute EventTarget? target;\r\n    //   readonly attribute EventTarget? currentTarget;\r\n\r\n    //   const unsigned short NONE = 0;\r\n    //   const unsigned short CAPTURING_PHASE = 1;\r\n    //   const unsigned short AT_TARGET = 2;\r\n    //   const unsigned short BUBBLING_PHASE = 3;\r\n    //   readonly attribute unsigned short eventPhase;\r\n\r\n    //   void stopPropagation();\r\n    //   void stopImmediatePropagation();\r\n\r\n    //   readonly attribute boolean bubbles;\r\n    //   readonly attribute boolean cancelable;\r\n    //   void preventDefault();\r\n    //   readonly attribute boolean defaultPrevented;\r\n\r\n    //   [Unforgeable] readonly attribute boolean isTrusted;\r\n    //   readonly attribute DOMTimeStamp timeStamp;\r\n\r\n    //   void initEvent(DOMString type, boolean bubbles, boolean cancelable);\r\n    // };\r\n\r\n    /**\r\n     * @name Event#type\r\n     * @type String\r\n     */\r\n    this.type = ev.type;\r\n\r\n    /**\r\n     * @name Event#defaultPrevented\r\n     * @type Boolean\r\n     */\r\n    this.defaultPrevented = ev.defaultPrevented;\r\n\r\n    /**\r\n     * @name Event#timeStamp\r\n     * @type Number\r\n     */\r\n    this.timeStamp = ev.timeStamp;\r\n\r\n\r\n    /**\r\n     * Used for exposing the current target's value.\r\n     *\r\n     * @name Event#value\r\n     * @type String\r\n     */\r\n    var targetConstructor = ev.target.constructor;\r\n    // TODO Support HTMLKeygenElement\r\n    if (\r\n        targetConstructor === HTMLInputElement ||\r\n        targetConstructor === HTMLTextAreaElement ||\r\n        targetConstructor === HTMLSelectElement\r\n    ) {\r\n        this.value = ev.target.value;\r\n\r\n        if( typeof ev.target.files !== 'undefined')\r\n            this.files = ev.target.files;\r\n    }\r\n    \r\n    \r\n}\r\n\r\n/**\r\n * Return the name of the event type\r\n *\r\n * @method\r\n *\r\n * @return {String} Name of the event type\r\n */\r\nEvent.prototype.toString = function toString () {\r\n    return 'Event';\r\n};\r\n\r\nmodule.exports = Event;\r\n","/**\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2015 Famous Industries Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n\r\n'use strict';\r\n\r\nvar CompositionEvent = require('./CompositionEvent');\r\nvar Event = require('./Event');\r\nvar FocusEvent = require('./FocusEvent');\r\nvar InputEvent = require('./InputEvent');\r\nvar KeyboardEvent = require('./KeyboardEvent');\r\nvar ScrollEvent = require('./ScrollEvent');\r\nvar MouseEvent = require('./MouseEvent');\r\nvar TouchEvent = require('./TouchEvent');\r\nvar UIEvent = require('./UIEvent');\r\nvar WheelEvent = require('./WheelEvent');\r\n\r\n/**\r\n * A mapping of DOM events to the corresponding handlers\r\n *\r\n * @name EventMap\r\n * @type Object\r\n */\r\nvar EventMap = {\r\n    change                         : [Event, true],\r\n    submit                         : [Event, true],\r\n\r\n    // UI Events (http://www.w3.org/TR/uievents/)\r\n    abort                          : [Event, false],\r\n    beforeinput                    : [InputEvent, true],\r\n    blur                           : [FocusEvent, false],\r\n    click                          : [MouseEvent, true],\r\n    compositionend                 : [CompositionEvent, true],\r\n    compositionstart               : [CompositionEvent, true],\r\n    compositionupdate              : [CompositionEvent, true],\r\n    dblclick                       : [MouseEvent, true],\r\n    focus                          : [FocusEvent, false],\r\n    focusin                        : [FocusEvent, true],\r\n    focusout                       : [FocusEvent, true],\r\n    input                          : [InputEvent, true],\r\n    keydown                        : [KeyboardEvent, true],\r\n    keyup                          : [KeyboardEvent, true],\r\n    load                           : [Event, false],\r\n    mousedown                      : [MouseEvent, true],\r\n    mouseenter                     : [MouseEvent, false],\r\n    mouseleave                     : [MouseEvent, false],\r\n    animationiteration             : [UIEvent, false],\r\n    animationend                   : [UIEvent, false],\r\n    transitionend                  : [UIEvent, false],\r\n\r\n    // bubbles, but will be triggered very frequently\r\n    mousemove                      : [MouseEvent, false],\r\n\r\n    mouseout                       : [MouseEvent, true],\r\n    mouseover                      : [MouseEvent, true],\r\n    mouseup                        : [MouseEvent, true],\r\n    contextMenu                    : [MouseEvent, true],\r\n    resize                         : [UIEvent, false],\r\n\r\n    // might bubble\r\n    scroll                         : [ScrollEvent, false],\r\n\r\n    select                         : [Event, true],\r\n    unload                         : [Event, false],\r\n    wheel                          : [WheelEvent, true],\r\n\r\n    // Touch Events Extension (http://www.w3.org/TR/touch-events-extensions/)\r\n    touchcancel                    : [TouchEvent, true],\r\n    touchend                       : [TouchEvent, true],\r\n    touchmove                      : [TouchEvent, true],\r\n    touchstart                     : [TouchEvent, true]\r\n};\r\n\r\nmodule.exports = EventMap;\r\n","/**\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2015 Famous Industries Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n\r\n'use strict';\r\n\r\nvar UIEvent = require('./UIEvent');\r\n\r\n/**\r\n * See [UI Events (formerly DOM Level 3 Events)](http://www.w3.org/TR/2015/WD-uievents-20150428/#events-focusevent).\r\n *\r\n * @class FocusEvent\r\n * @augments UIEvent\r\n *\r\n * @param {Event} ev The native DOM event.\r\n */\r\nfunction FocusEvent(ev) {\r\n    // [Constructor(DOMString typeArg, optional FocusEventInit focusEventInitDict)]\r\n    // interface FocusEvent : UIEvent {\r\n    //     readonly    attribute EventTarget? relatedTarget;\r\n    // };\r\n\r\n    UIEvent.call(this, ev);\r\n}\r\n\r\nFocusEvent.prototype = Object.create(UIEvent.prototype);\r\nFocusEvent.prototype.constructor = FocusEvent;\r\n\r\n/**\r\n * Return the name of the event type\r\n *\r\n * @method\r\n *\r\n * @return {String} Name of the event type\r\n */\r\nFocusEvent.prototype.toString = function toString () {\r\n    return 'FocusEvent';\r\n};\r\n\r\nmodule.exports = FocusEvent;\r\n","/**\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2015 Famous Industries Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n\r\n'use strict';\r\n\r\nvar UIEvent = require('./UIEvent');\r\n\r\n/**\r\n * See [Input Events](http://w3c.github.io/editing-explainer/input-events.html#idl-def-InputEvent).\r\n *\r\n * @class InputEvent\r\n * @augments UIEvent\r\n *\r\n * @param {Event} ev The native DOM event.\r\n */\r\nfunction InputEvent(ev) {\r\n    // [Constructor(DOMString typeArg, optional InputEventInit inputEventInitDict)]\r\n    // interface InputEvent : UIEvent {\r\n    //     readonly    attribute DOMString inputType;\r\n    //     readonly    attribute DOMString data;\r\n    //     readonly    attribute boolean   isComposing;\r\n    //     readonly    attribute Range     targetRange;\r\n    // };\r\n\r\n    UIEvent.call(this, ev);\r\n\r\n    /**\r\n     * @name    InputEvent#inputType\r\n     * @type    String\r\n     */\r\n    this.inputType = ev.inputType;\r\n\r\n    /**\r\n     * @name    InputEvent#data\r\n     * @type    String\r\n     */\r\n    this.data = ev.data;\r\n\r\n    /**\r\n     * @name    InputEvent#isComposing\r\n     * @type    Boolean\r\n     */\r\n    this.isComposing = ev.isComposing;\r\n\r\n    /**\r\n     * **Limited browser support**.\r\n     *\r\n     * @name    InputEvent#targetRange\r\n     * @type    Boolean\r\n     */\r\n    this.targetRange = ev.targetRange;\r\n}\r\n\r\nInputEvent.prototype = Object.create(UIEvent.prototype);\r\nInputEvent.prototype.constructor = InputEvent;\r\n\r\n/**\r\n * Return the name of the event type\r\n *\r\n * @method\r\n *\r\n * @return {String} Name of the event type\r\n */\r\nInputEvent.prototype.toString = function toString () {\r\n    return 'InputEvent';\r\n};\r\n\r\nmodule.exports = InputEvent;\r\n","/**\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2015 Famous Industries Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n\r\n'use strict';\r\n\r\nvar UIEvent = require('./UIEvent');\r\n\r\n/**\r\n * See [UI Events (formerly DOM Level 3 Events)](http://www.w3.org/TR/2015/WD-uievents-20150428/#events-keyboardevents).\r\n *\r\n * @class KeyboardEvent\r\n * @augments UIEvent\r\n *\r\n * @param {Event} ev The native DOM event.\r\n */\r\nfunction KeyboardEvent(ev) {\r\n    // [Constructor(DOMString typeArg, optional KeyboardEventInit keyboardEventInitDict)]\r\n    // interface KeyboardEvent : UIEvent {\r\n    //     // KeyLocationCode\r\n    //     const unsigned long DOM_KEY_LOCATION_STANDARD = 0x00;\r\n    //     const unsigned long DOM_KEY_LOCATION_LEFT = 0x01;\r\n    //     const unsigned long DOM_KEY_LOCATION_RIGHT = 0x02;\r\n    //     const unsigned long DOM_KEY_LOCATION_NUMPAD = 0x03;\r\n    //     readonly    attribute DOMString     key;\r\n    //     readonly    attribute DOMString     code;\r\n    //     readonly    attribute unsigned long location;\r\n    //     readonly    attribute boolean       ctrlKey;\r\n    //     readonly    attribute boolean       shiftKey;\r\n    //     readonly    attribute boolean       altKey;\r\n    //     readonly    attribute boolean       metaKey;\r\n    //     readonly    attribute boolean       repeat;\r\n    //     readonly    attribute boolean       isComposing;\r\n    //     boolean getModifierState (DOMString keyArg);\r\n    // };\r\n\r\n    UIEvent.call(this, ev);\r\n\r\n    /**\r\n     * @name KeyboardEvent#DOM_KEY_LOCATION_STANDARD\r\n     * @type Number\r\n     */\r\n    this.DOM_KEY_LOCATION_STANDARD = 0x00;\r\n\r\n    /**\r\n     * @name KeyboardEvent#DOM_KEY_LOCATION_LEFT\r\n     * @type Number\r\n     */\r\n    this.DOM_KEY_LOCATION_LEFT = 0x01;\r\n\r\n    /**\r\n     * @name KeyboardEvent#DOM_KEY_LOCATION_RIGHT\r\n     * @type Number\r\n     */\r\n    this.DOM_KEY_LOCATION_RIGHT = 0x02;\r\n\r\n    /**\r\n     * @name KeyboardEvent#DOM_KEY_LOCATION_NUMPAD\r\n     * @type Number\r\n     */\r\n    this.DOM_KEY_LOCATION_NUMPAD = 0x03;\r\n\r\n    /**\r\n     * @name KeyboardEvent#key\r\n     * @type String\r\n     */\r\n    this.key = ev.key;\r\n\r\n    /**\r\n     * @name KeyboardEvent#code\r\n     * @type String\r\n     */\r\n    this.code = ev.code;\r\n\r\n    /**\r\n     * @name KeyboardEvent#location\r\n     * @type Number\r\n     */\r\n    this.location = ev.location;\r\n\r\n    /**\r\n     * @name KeyboardEvent#ctrlKey\r\n     * @type Boolean\r\n     */\r\n    this.ctrlKey = ev.ctrlKey;\r\n\r\n    /**\r\n     * @name KeyboardEvent#shiftKey\r\n     * @type Boolean\r\n     */\r\n    this.shiftKey = ev.shiftKey;\r\n\r\n    /**\r\n     * @name KeyboardEvent#altKey\r\n     * @type Boolean\r\n     */\r\n    this.altKey = ev.altKey;\r\n\r\n    /**\r\n     * @name KeyboardEvent#metaKey\r\n     * @type Boolean\r\n     */\r\n    this.metaKey = ev.metaKey;\r\n\r\n    /**\r\n     * @name KeyboardEvent#repeat\r\n     * @type Boolean\r\n     */\r\n    this.repeat = ev.repeat;\r\n\r\n    /**\r\n     * @name KeyboardEvent#isComposing\r\n     * @type Boolean\r\n     */\r\n    this.isComposing = ev.isComposing;\r\n\r\n    /**\r\n     * @name KeyboardEvent#keyCode\r\n     * @type String\r\n     * @deprecated\r\n     */\r\n    this.keyCode = ev.keyCode;\r\n}\r\n\r\nKeyboardEvent.prototype = Object.create(UIEvent.prototype);\r\nKeyboardEvent.prototype.constructor = KeyboardEvent;\r\n\r\n/**\r\n * Return the name of the event type\r\n *\r\n * @method\r\n *\r\n * @return {String} Name of the event type\r\n */\r\nKeyboardEvent.prototype.toString = function toString () {\r\n    return 'KeyboardEvent';\r\n};\r\n\r\nmodule.exports = KeyboardEvent;\r\n","/**\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2015 Famous Industries Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n\r\n'use strict';\r\n\r\nvar UIEvent = require('./UIEvent');\r\n\r\n/**\r\n * See [UI Events (formerly DOM Level 3 Events)](http://www.w3.org/TR/2015/WD-uievents-20150428/#events-mouseevents).\r\n *\r\n * @class KeyboardEvent\r\n * @augments UIEvent\r\n *\r\n * @param {Event} ev The native DOM event.\r\n */\r\nfunction MouseEvent(ev) {\r\n    // [Constructor(DOMString typeArg, optional MouseEventInit mouseEventInitDict)]\r\n    // interface MouseEvent : UIEvent {\r\n    //     readonly    attribute long           screenX;\r\n    //     readonly    attribute long           screenY;\r\n    //     readonly    attribute long           clientX;\r\n    //     readonly    attribute long           clientY;\r\n    //     readonly    attribute boolean        ctrlKey;\r\n    //     readonly    attribute boolean        shiftKey;\r\n    //     readonly    attribute boolean        altKey;\r\n    //     readonly    attribute boolean        metaKey;\r\n    //     readonly    attribute short          button;\r\n    //     readonly    attribute EventTarget?   relatedTarget;\r\n    //     // Introduced in this specification\r\n    //     readonly    attribute unsigned short buttons;\r\n    //     boolean getModifierState (DOMString keyArg);\r\n    // };\r\n\r\n    UIEvent.call(this, ev);\r\n\r\n    /**\r\n     * @name MouseEvent#screenX\r\n     * @type Number\r\n     */\r\n    this.screenX = ev.screenX;\r\n\r\n    /**\r\n     * @name MouseEvent#screenY\r\n     * @type Number\r\n     */\r\n    this.screenY = ev.screenY;\r\n\r\n    /**\r\n     * @name MouseEvent#clientX\r\n     * @type Number\r\n     */\r\n    this.clientX = ev.clientX;\r\n\r\n    /**\r\n     * @name MouseEvent#clientY\r\n     * @type Number\r\n     */\r\n    this.clientY = ev.clientY;\r\n\r\n    /**\r\n     * @name MouseEvent#ctrlKey\r\n     * @type Boolean\r\n     */\r\n    this.ctrlKey = ev.ctrlKey;\r\n\r\n    /**\r\n     * @name MouseEvent#shiftKey\r\n     * @type Boolean\r\n     */\r\n    this.shiftKey = ev.shiftKey;\r\n\r\n    /**\r\n     * @name MouseEvent#altKey\r\n     * @type Boolean\r\n     */\r\n    this.altKey = ev.altKey;\r\n\r\n    /**\r\n     * @name MouseEvent#metaKey\r\n     * @type Boolean\r\n     */\r\n    this.metaKey = ev.metaKey;\r\n\r\n    /**\r\n     * @type MouseEvent#button\r\n     * @type Number\r\n     */\r\n    this.button = ev.button;\r\n\r\n    /**\r\n     * @type MouseEvent#buttons\r\n     * @type Number\r\n     */\r\n    this.buttons = ev.buttons;\r\n\r\n    /**\r\n     * @type MouseEvent#pageX\r\n     * @type Number\r\n     */\r\n    this.pageX = ev.pageX;\r\n\r\n    /**\r\n     * @type MouseEvent#pageY\r\n     * @type Number\r\n     */\r\n    this.pageY = ev.pageY;\r\n\r\n    /**\r\n     * @type MouseEvent#x\r\n     * @type Number\r\n     */\r\n    this.x = ev.x;\r\n\r\n    /**\r\n     * @type MouseEvent#y\r\n     * @type Number\r\n     */\r\n    this.y = ev.y;\r\n\r\n    /**\r\n     * @type MouseEvent#offsetX\r\n     * @type Number\r\n     */\r\n    this.offsetX = ev.offsetX;\r\n\r\n    /**\r\n     * @type MouseEvent#offsetY\r\n     * @type Number\r\n     */\r\n    this.offsetY = ev.offsetY;\r\n}\r\n\r\nMouseEvent.prototype = Object.create(UIEvent.prototype);\r\nMouseEvent.prototype.constructor = MouseEvent;\r\n\r\n/**\r\n * Return the name of the event type\r\n *\r\n * @method\r\n *\r\n * @return {String} Name of the event type\r\n */\r\nMouseEvent.prototype.toString = function toString () {\r\n    return 'MouseEvent';\r\n};\r\n\r\nmodule.exports = MouseEvent;\r\n","'use strict';\r\n\r\nvar Event = require('./Event');\r\n\r\n/**\r\n * See [UI Events (formerly DOM Level 3 Events)](http://www.w3.org/TR/2015/WD-uievents-20150428).\r\n *\r\n * @class UIEvent\r\n * @augments Event\r\n *\r\n * @param  {Event} ev   The native DOM event.\r\n */\r\nfunction ScrollEvent(ev) {\r\n    // [Constructor(DOMString type, optional UIEventInit eventInitDict)]\r\n    // interface UIEvent : Event {\r\n    //     readonly    attribute Window? view;\r\n    //     readonly    attribute long    detail;\r\n    // };\r\n    Event.call(this, ev);\r\n    \r\n    \r\n    /**\r\n     * @name ScrollEvent#scrollTop\r\n     * @type Number\r\n     */\r\n    this.scrollTop = ev.target.scrollTop;\r\n\r\n    /**\r\n     * @name ScrollEvent#scrollLeft\r\n     * @type Number\r\n     */\r\n    this.scrollLeft =  ev.target.scrollLeft;\r\n\r\n    /**\r\n     * @name ScrollEvent#scrollHeight\r\n     * @type Number\r\n     */\r\n    this.scrollHeight = ev.target.scrollHeight;\r\n    /**\r\n     * @name ScrollEvent#detail\r\n     * @type Number\r\n     */\r\n    this.detail = ev.detail;\r\n}\r\n\r\nScrollEvent.prototype = Object.create(Event.prototype);\r\nScrollEvent.prototype.constructor = ScrollEvent;\r\n\r\n/**\r\n * Return the name of the event type\r\n *\r\n * @method\r\n *\r\n * @return {String} Name of the event type\r\n */\r\nScrollEvent.prototype.toString = function toString () {\r\n    return 'ScrollEvent';\r\n};\r\n\r\nmodule.exports = ScrollEvent;\r\n","/**\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2015 Famous Industries Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n\r\n'use strict';\r\n\r\nvar UIEvent = require('./UIEvent');\r\n\r\nvar EMPTY_ARRAY = [];\r\n\r\n/**\r\n * See [Touch Interface](http://www.w3.org/TR/2013/REC-touch-events-20131010/#touch-interface).\r\n *\r\n * @class Touch\r\n * @private\r\n *\r\n * @param {Touch} touch The native Touch object.\r\n */\r\nfunction Touch(touch) {\r\n    // interface Touch {\r\n    //     readonly    attribute long        identifier;\r\n    //     readonly    attribute EventTarget target;\r\n    //     readonly    attribute double      screenX;\r\n    //     readonly    attribute double      screenY;\r\n    //     readonly    attribute double      clientX;\r\n    //     readonly    attribute double      clientY;\r\n    //     readonly    attribute double      pageX;\r\n    //     readonly    attribute double      pageY;\r\n    // };\r\n\r\n    /**\r\n     * @name Touch#identifier\r\n     * @type Number\r\n     */\r\n    this.identifier = touch.identifier;\r\n\r\n    /**\r\n     * @name Touch#screenX\r\n     * @type Number\r\n     */\r\n    this.screenX = touch.screenX;\r\n\r\n    /**\r\n     * @name Touch#screenY\r\n     * @type Number\r\n     */\r\n    this.screenY = touch.screenY;\r\n\r\n    /**\r\n     * @name Touch#clientX\r\n     * @type Number\r\n     */\r\n    this.clientX = touch.clientX;\r\n\r\n    /**\r\n     * @name Touch#clientY\r\n     * @type Number\r\n     */\r\n    this.clientY = touch.clientY;\r\n\r\n    /**\r\n     * @name Touch#pageX\r\n     * @type Number\r\n     */\r\n    this.pageX = touch.pageX;\r\n\r\n    /**\r\n     * @name Touch#pageY\r\n     * @type Number\r\n     */\r\n    this.pageY = touch.pageY;\r\n}\r\n\r\n\r\n/**\r\n * Normalizes the browser's native TouchList by converting it into an array of\r\n * normalized Touch objects.\r\n *\r\n * @method  cloneTouchList\r\n * @private\r\n *\r\n * @param  {TouchList} touchList    The native TouchList array.\r\n * @return {Array.<Touch>}          An array of normalized Touch objects.\r\n */\r\nfunction cloneTouchList(touchList) {\r\n    if (!touchList) return EMPTY_ARRAY;\r\n    // interface TouchList {\r\n    //     readonly    attribute unsigned long length;\r\n    //     getter Touch? item (unsigned long index);\r\n    // };\r\n\r\n    var touchListArray = [];\r\n    for (var i = 0; i < touchList.length; i++) {\r\n        touchListArray[i] = new Touch(touchList[i]);\r\n    }\r\n    return touchListArray;\r\n}\r\n\r\n/**\r\n * See [Touch Event Interface](http://www.w3.org/TR/2013/REC-touch-events-20131010/#touchevent-interface).\r\n *\r\n * @class TouchEvent\r\n * @augments UIEvent\r\n *\r\n * @param {Event} ev The native DOM event.\r\n */\r\nfunction TouchEvent(ev) {\r\n    // interface TouchEvent : UIEvent {\r\n    //     readonly    attribute TouchList touches;\r\n    //     readonly    attribute TouchList targetTouches;\r\n    //     readonly    attribute TouchList changedTouches;\r\n    //     readonly    attribute boolean   altKey;\r\n    //     readonly    attribute boolean   metaKey;\r\n    //     readonly    attribute boolean   ctrlKey;\r\n    //     readonly    attribute boolean   shiftKey;\r\n    // };\r\n    UIEvent.call(this, ev);\r\n\r\n    /**\r\n     * @name TouchEvent#touches\r\n     * @type Array.<Touch>\r\n     */\r\n    this.touches = cloneTouchList(ev.touches);\r\n\r\n    /**\r\n     * @name TouchEvent#targetTouches\r\n     * @type Array.<Touch>\r\n     */\r\n    this.targetTouches = cloneTouchList(ev.targetTouches);\r\n\r\n    /**\r\n     * @name TouchEvent#changedTouches\r\n     * @type TouchList\r\n     */\r\n    this.changedTouches = cloneTouchList(ev.changedTouches);\r\n\r\n    /**\r\n     * @name TouchEvent#altKey\r\n     * @type Boolean\r\n     */\r\n    this.altKey = ev.altKey;\r\n\r\n    /**\r\n     * @name TouchEvent#metaKey\r\n     * @type Boolean\r\n     */\r\n    this.metaKey = ev.metaKey;\r\n\r\n    /**\r\n     * @name TouchEvent#ctrlKey\r\n     * @type Boolean\r\n     */\r\n    this.ctrlKey = ev.ctrlKey;\r\n\r\n    /**\r\n     * @name TouchEvent#shiftKey\r\n     * @type Boolean\r\n     */\r\n    this.shiftKey = ev.shiftKey;\r\n}\r\n\r\nTouchEvent.prototype = Object.create(UIEvent.prototype);\r\nTouchEvent.prototype.constructor = TouchEvent;\r\n\r\n/**\r\n * Return the name of the event type\r\n *\r\n * @method\r\n *\r\n * @return {String} Name of the event type\r\n */\r\nTouchEvent.prototype.toString = function toString () {\r\n    return 'TouchEvent';\r\n};\r\n\r\nmodule.exports = TouchEvent;\r\n","/**\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2015 Famous Industries Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n\r\n'use strict';\r\n\r\nvar Event = require('./Event');\r\n\r\n/**\r\n * See [UI Events (formerly DOM Level 3 Events)](http://www.w3.org/TR/2015/WD-uievents-20150428).\r\n *\r\n * @class UIEvent\r\n * @augments Event\r\n *\r\n * @param  {Event} ev   The native DOM event.\r\n */\r\nfunction UIEvent(ev) {\r\n    // [Constructor(DOMString type, optional UIEventInit eventInitDict)]\r\n    // interface UIEvent : Event {\r\n    //     readonly    attribute Window? view;\r\n    //     readonly    attribute long    detail;\r\n    // };\r\n    Event.call(this, ev);\r\n\r\n    /**\r\n     * @name UIEvent#detail\r\n     * @type Number\r\n     */\r\n    this.detail = ev.detail;\r\n}\r\n\r\nUIEvent.prototype = Object.create(Event.prototype);\r\nUIEvent.prototype.constructor = UIEvent;\r\n\r\n/**\r\n * Return the name of the event type\r\n *\r\n * @method\r\n *\r\n * @return {String} Name of the event type\r\n */\r\nUIEvent.prototype.toString = function toString () {\r\n    return 'UIEvent';\r\n};\r\n\r\nmodule.exports = UIEvent;\r\n","/**\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2015 Famous Industries Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n\r\n'use strict';\r\n\r\nvar MouseEvent = require('./MouseEvent');\r\n\r\n/**\r\n * See [UI Events (formerly DOM Level 3 Events)](http://www.w3.org/TR/2015/WD-uievents-20150428/#events-wheelevents).\r\n *\r\n * @class WheelEvent\r\n * @augments UIEvent\r\n *\r\n * @param {Event} ev The native DOM event.\r\n */\r\nfunction WheelEvent(ev) {\r\n    // [Constructor(DOMString typeArg, optional WheelEventInit wheelEventInitDict)]\r\n    // interface WheelEvent : MouseEvent {\r\n    //     // DeltaModeCode\r\n    //     const unsigned long DOM_DELTA_PIXEL = 0x00;\r\n    //     const unsigned long DOM_DELTA_LINE = 0x01;\r\n    //     const unsigned long DOM_DELTA_PAGE = 0x02;\r\n    //     readonly    attribute double        deltaX;\r\n    //     readonly    attribute double        deltaY;\r\n    //     readonly    attribute double        deltaZ;\r\n    //     readonly    attribute unsigned long deltaMode;\r\n    // };\r\n\r\n    MouseEvent.call(this, ev);\r\n\r\n    /**\r\n     * @name WheelEvent#DOM_DELTA_PIXEL\r\n     * @type Number\r\n     */\r\n    this.DOM_DELTA_PIXEL = 0x00;\r\n\r\n    /**\r\n     * @name WheelEvent#DOM_DELTA_LINE\r\n     * @type Number\r\n     */\r\n    this.DOM_DELTA_LINE = 0x01;\r\n\r\n    /**\r\n     * @name WheelEvent#DOM_DELTA_PAGE\r\n     * @type Number\r\n     */\r\n    this.DOM_DELTA_PAGE = 0x02;\r\n\r\n    /**\r\n     * @name WheelEvent#deltaX\r\n     * @type Number\r\n     */\r\n    this.deltaX = ev.deltaX;\r\n\r\n    /**\r\n     * @name WheelEvent#deltaY\r\n     * @type Number\r\n     */\r\n    this.deltaY = ev.deltaY;\r\n\r\n    /**\r\n     * @name WheelEvent#deltaZ\r\n     * @type Number\r\n     */\r\n    this.deltaZ = ev.deltaZ;\r\n\r\n    /**\r\n     * @name WheelEvent#deltaMode\r\n     * @type Number\r\n     */\r\n    this.deltaMode = ev.deltaMode;\r\n}\r\n\r\nWheelEvent.prototype = Object.create(MouseEvent.prototype);\r\nWheelEvent.prototype.constructor = WheelEvent;\r\n\r\n/**\r\n * Return the name of the event type\r\n *\r\n * @method\r\n *\r\n * @return {String} Name of the event type\r\n */\r\nWheelEvent.prototype.toString = function toString () {\r\n    return 'WheelEvent';\r\n};\r\n\r\nmodule.exports = WheelEvent;\r\n","// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\r\n// http://my.opera.com/emoller/blog/2011/12/20/requestanimationframe-for-smart-er-animating\r\n// requestAnimationFrame polyfill by Erik Möller. fixes from Paul Irish and Tino Zijdel\r\n// MIT license\r\n\r\n'use strict';\r\n\r\nvar lastTime = 0;\r\nvar vendors = ['ms', 'moz', 'webkit', 'o'];\r\n\r\nvar rAF, cAF;\r\n\r\nif (typeof window === 'object') {\r\n    rAF = window.requestAnimationFrame;\r\n    cAF = window.cancelAnimationFrame || window.cancelRequestAnimationFrame;\r\n    for (var x = 0; x < vendors.length && !rAF; ++x) {\r\n        rAF = window[vendors[x] + 'RequestAnimationFrame'];\r\n        cAF = window[vendors[x] + 'CancelRequestAnimationFrame'] ||\r\n              window[vendors[x] + 'CancelAnimationFrame'];\r\n    }\r\n\r\n    if (rAF && !cAF) {\r\n        // cAF not supported.\r\n        // Fall back to setInterval for now (very rare).\r\n        rAF = null;\r\n    }\r\n}\r\n\r\nif (!rAF) {\r\n    var now = Date.now ? Date.now : function () {\r\n        return new Date().getTime();\r\n    };\r\n\r\n    rAF = function(callback) {\r\n        var currTime = now();\r\n        var timeToCall = Math.max(0, 16 - (currTime - lastTime));\r\n        var id = setTimeout(function () {\r\n            callback(currTime + timeToCall);\r\n        }, timeToCall);\r\n        lastTime = currTime + timeToCall;\r\n        return id;\r\n    };\r\n\r\n    cAF = function (id) {\r\n        clearTimeout(id);\r\n    };\r\n}\r\n\r\nvar animationFrame = {\r\n    /**\r\n     * Cross browser version of [requestAnimationFrame]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame}.\r\n     *\r\n     * Used by Engine in order to establish a render loop.\r\n     *\r\n     * If no (vendor prefixed version of) `requestAnimationFrame` is available,\r\n     * `setTimeout` will be used in order to emulate a render loop running at\r\n     * approximately 60 frames per second.\r\n     *\r\n     * @method  requestAnimationFrame\r\n     *\r\n     * @param   {Function}  callback function to be invoked on the next frame.\r\n     * @return  {Number}    requestId to be used to cancel the request using\r\n     *                      {@link cancelAnimationFrame}.\r\n     */\r\n    requestAnimationFrame: rAF,\r\n\r\n    /**\r\n     * Cross browser version of [cancelAnimationFrame]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/cancelAnimationFrame}.\r\n     *\r\n     * Cancels a previously using [requestAnimationFrame]{@link animationFrame#requestAnimationFrame}\r\n     * scheduled request.\r\n     *\r\n     * Used for immediately stopping the render loop within the Engine.\r\n     *\r\n     * @method  cancelAnimationFrame\r\n     *\r\n     * @param   {Number}    requestId of the scheduled callback function\r\n     *                      returned by [requestAnimationFrame]{@link animationFrame#requestAnimationFrame}.\r\n     */\r\n    cancelAnimationFrame: cAF\r\n};\r\n\r\nmodule.exports = animationFrame;\r\n","/**\r\n * The MIT License (MIT)\r\n * \r\n * Copyright (c) 2015 Famous Industries Inc.\r\n * \r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n * \r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n * \r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n\r\n'use strict';\r\n\r\nmodule.exports = {\r\n    requestAnimationFrame: require('./animationFrame').requestAnimationFrame,\r\n    cancelAnimationFrame: require('./animationFrame').cancelAnimationFrame\r\n};\r\n","/**\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2015 Famous Industries Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n\r\n'use strict';\r\n\r\nvar polyfills = require('../polyfills');\r\nvar rAF = polyfills.requestAnimationFrame;\r\nvar cAF = polyfills.cancelAnimationFrame;\r\n\r\n/**\r\n * Boolean constant indicating whether the RequestAnimationFrameLoop has access\r\n * to the document. The document is being used in order to subscribe for\r\n * visibilitychange events used for normalizing the RequestAnimationFrameLoop\r\n * time when e.g. when switching tabs.\r\n *\r\n * @constant\r\n * @type {Boolean}\r\n */\r\nvar DOCUMENT_ACCESS = typeof document !== 'undefined';\r\n\r\nif (DOCUMENT_ACCESS) {\r\n    var VENDOR_HIDDEN, VENDOR_VISIBILITY_CHANGE;\r\n\r\n    // Opera 12.10 and Firefox 18 and later support\r\n    if (typeof document.hidden !== 'undefined') {\r\n        VENDOR_HIDDEN = 'hidden';\r\n        VENDOR_VISIBILITY_CHANGE = 'visibilitychange';\r\n    }\r\n    else if (typeof document.mozHidden !== 'undefined') {\r\n        VENDOR_HIDDEN = 'mozHidden';\r\n        VENDOR_VISIBILITY_CHANGE = 'mozvisibilitychange';\r\n    }\r\n    else if (typeof document.msHidden !== 'undefined') {\r\n        VENDOR_HIDDEN = 'msHidden';\r\n        VENDOR_VISIBILITY_CHANGE = 'msvisibilitychange';\r\n    }\r\n    else if (typeof document.webkitHidden !== 'undefined') {\r\n        VENDOR_HIDDEN = 'webkitHidden';\r\n        VENDOR_VISIBILITY_CHANGE = 'webkitvisibilitychange';\r\n    }\r\n}\r\n\r\n/**\r\n * RequestAnimationFrameLoop class used for updating objects on a frame-by-frame.\r\n * Synchronizes the `update` method invocations to the refresh rate of the\r\n * screen. Manages the `requestAnimationFrame`-loop by normalizing the passed in\r\n * timestamp when switching tabs.\r\n *\r\n * @class RequestAnimationFrameLoop\r\n */\r\nfunction RequestAnimationFrameLoop() {\r\n    var _this = this;\r\n\r\n    // References to objects to be updated on next frame.\r\n    this._updates = [];\r\n\r\n    this._looper = function(time) {\r\n        _this.loop(time);\r\n    };\r\n    this._time = 0;\r\n    this._stoppedAt = 0;\r\n    this._sleep = 0;\r\n\r\n    // Indicates whether the engine should be restarted when the tab/ window is\r\n    // being focused again (visibility change).\r\n    this._startOnVisibilityChange = true;\r\n\r\n    // requestId as returned by requestAnimationFrame function;\r\n    this._rAF = null;\r\n\r\n    this._sleepDiff = true;\r\n\r\n    // The engine is being started on instantiation.\r\n    // TODO(alexanderGugel)\r\n    this.start();\r\n\r\n    // The RequestAnimationFrameLoop supports running in a non-browser\r\n    // environment (e.g. Worker).\r\n    if (DOCUMENT_ACCESS) {\r\n        document.addEventListener(VENDOR_VISIBILITY_CHANGE, function() {\r\n            _this._onVisibilityChange();\r\n        });\r\n    }\r\n}\r\n\r\n/**\r\n * Handle the switching of tabs.\r\n *\r\n * @method\r\n * @private\r\n *\r\n * @return {undefined} undefined\r\n */\r\nRequestAnimationFrameLoop.prototype._onVisibilityChange = function _onVisibilityChange() {\r\n    if (document[VENDOR_HIDDEN]) {\r\n        this._onUnfocus();\r\n    }\r\n    else {\r\n        this._onFocus();\r\n    }\r\n};\r\n\r\n/**\r\n * Internal helper function to be invoked as soon as the window/ tab is being\r\n * focused after a visibiltiy change.\r\n *\r\n * @method\r\n * @private\r\n *\r\n * @return {undefined} undefined\r\n */\r\nRequestAnimationFrameLoop.prototype._onFocus = function _onFocus() {\r\n    if (this._startOnVisibilityChange) {\r\n        this._start();\r\n    }\r\n};\r\n\r\n/**\r\n * Internal helper function to be invoked as soon as the window/ tab is being\r\n * unfocused (hidden) after a visibiltiy change.\r\n *\r\n * @method  _onFocus\r\n * @private\r\n *\r\n * @return {undefined} undefined\r\n */\r\nRequestAnimationFrameLoop.prototype._onUnfocus = function _onUnfocus() {\r\n    this._stop();\r\n};\r\n\r\n/**\r\n * Starts the RequestAnimationFrameLoop. When switching to a differnt tab/\r\n * window (changing the visibiltiy), the engine will be retarted when switching\r\n * back to a visible state.\r\n *\r\n * @method\r\n *\r\n * @return {RequestAnimationFrameLoop} this\r\n */\r\nRequestAnimationFrameLoop.prototype.start = function start() {\r\n    if (!this._running) {\r\n        this._startOnVisibilityChange = true;\r\n        this._start();\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Internal version of RequestAnimationFrameLoop's start function, not affecting\r\n * behavior on visibilty change.\r\n *\r\n * @method\r\n * @private\r\n*\r\n * @return {undefined} undefined\r\n */\r\nRequestAnimationFrameLoop.prototype._start = function _start() {\r\n    this._running = true;\r\n    this._sleepDiff = true;\r\n    this._rAF = rAF(this._looper);\r\n};\r\n\r\n/**\r\n * Stops the RequestAnimationFrameLoop.\r\n *\r\n * @method\r\n * @private\r\n *\r\n * @return {RequestAnimationFrameLoop} this\r\n */\r\nRequestAnimationFrameLoop.prototype.stop = function stop() {\r\n    if (this._running) {\r\n        this._startOnVisibilityChange = false;\r\n        this._stop();\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Internal version of RequestAnimationFrameLoop's stop function, not affecting\r\n * behavior on visibilty change.\r\n *\r\n * @method\r\n * @private\r\n *\r\n * @return {undefined} undefined\r\n */\r\nRequestAnimationFrameLoop.prototype._stop = function _stop() {\r\n    this._running = false;\r\n    this._stoppedAt = this._time;\r\n\r\n    // Bug in old versions of Fx. Explicitly cancel.\r\n    cAF(this._rAF);\r\n};\r\n\r\n/**\r\n * Determines whether the RequestAnimationFrameLoop is currently running or not.\r\n *\r\n * @method\r\n *\r\n * @return {Boolean} boolean value indicating whether the\r\n * RequestAnimationFrameLoop is currently running or not\r\n */\r\nRequestAnimationFrameLoop.prototype.isRunning = function isRunning() {\r\n    return this._running;\r\n};\r\n\r\n/**\r\n * Updates all registered objects.\r\n *\r\n * @method\r\n *\r\n * @param {Number} time high resolution timstamp used for invoking the `update`\r\n * method on all registered objects\r\n *\r\n * @return {RequestAnimationFrameLoop} this\r\n */\r\nRequestAnimationFrameLoop.prototype.step = function step (time) {\r\n    this._time = time;\r\n    if (this._sleepDiff) {\r\n        this._sleep += time - this._stoppedAt;\r\n        this._sleepDiff = false;\r\n    }\r\n\r\n    // The same timetamp will be emitted immediately before and after visibility\r\n    // change.\r\n    var normalizedTime = time - this._sleep;\r\n    for (var i = 0, len = this._updates.length ; i < len ; i++) {\r\n        this._updates[i].update(normalizedTime);\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Method being called by `requestAnimationFrame` on every paint. Indirectly\r\n * recursive by scheduling a future invocation of itself on the next paint.\r\n *\r\n * @method\r\n *\r\n * @param {Number} time high resolution timstamp used for invoking the `update`\r\n * method on all registered objects\r\n * @return {RequestAnimationFrameLoop} this\r\n */\r\nRequestAnimationFrameLoop.prototype.loop = function loop(time) {\r\n    this.step(time);\r\n    this._rAF = rAF(this._looper);\r\n    return this;\r\n};\r\n\r\n/**\r\n * Registeres an updateable object which `update` method should be invoked on\r\n * every paint, starting on the next paint (assuming the\r\n * RequestAnimationFrameLoop is running).\r\n *\r\n * @method\r\n *\r\n * @param {Object} updateable object to be updated\r\n * @param {Function} updateable.update update function to be called on the\r\n * registered object\r\n *\r\n * @return {RequestAnimationFrameLoop} this\r\n */\r\nRequestAnimationFrameLoop.prototype.update = function update(updateable) {\r\n    if (this._updates.indexOf(updateable) === -1) {\r\n        this._updates.push(updateable);\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Deregisters an updateable object previously registered using `update` to be\r\n * no longer updated.\r\n *\r\n * @method\r\n *\r\n * @param {Object} updateable updateable object previously registered using\r\n * `update`\r\n *\r\n * @return {RequestAnimationFrameLoop} this\r\n */\r\nRequestAnimationFrameLoop.prototype.noLongerUpdate = function noLongerUpdate(updateable) {\r\n    var index = this._updates.indexOf(updateable);\r\n    if (index > -1) {\r\n        this._updates.splice(index, 1);\r\n    }\r\n    return this;\r\n};\r\n\r\nmodule.exports = RequestAnimationFrameLoop;\r\n","/**\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2015 Famous Industries Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n\r\n'use strict';\r\n\r\nvar Context = require('./Context');\r\nvar injectCSS = require('./inject-css');\r\nvar Commands = require('../core/Commands');\r\n\r\n/**\r\n * Instantiates a new Compositor.\r\n * The Compositor receives draw commands frm the UIManager and routes the to the\r\n * respective context objects.\r\n *\r\n * Upon creation, it injects a stylesheet used for styling the individual\r\n * renderers used in the context objects.\r\n *\r\n * @class Compositor\r\n * @constructor\r\n * @return {undefined} undefined\r\n */\r\nfunction Compositor() {\r\n    injectCSS();\r\n\r\n    this._contexts = {};\r\n    this._outCommands = [];\r\n    this._inCommands = [];\r\n    this._time = null;\r\n\r\n    this._resized = false;\r\n\r\n    var _this = this;\r\n    window.addEventListener('resize', function() {\r\n        _this.onResize();\r\n    });\r\n}\r\n\r\nCompositor.prototype.onResize = function onResize () {\r\n    this._resized = true;\r\n    for (var selector in this._contexts) {\r\n        this._contexts[selector].updateSize();\r\n    }\r\n};\r\n\r\n/**\r\n * Retrieves the time being used by the internal clock managed by\r\n * `FamousEngine`.\r\n *\r\n * The time is being passed into core by the Engine through the UIManager.\r\n * Since core has the ability to scale the time, the time needs to be passed\r\n * back to the rendering system.\r\n *\r\n * @method\r\n *\r\n * @return {Number} time The clock time used in core.\r\n */\r\nCompositor.prototype.getTime = function getTime() {\r\n    return this._time;\r\n};\r\n\r\n/**\r\n * Schedules an event to be sent the next time the out command queue is being\r\n * flushed.\r\n *\r\n * @method\r\n * @private\r\n *\r\n * @param  {String} path Render path to the node the event should be triggered\r\n * on (*targeted event*)\r\n * @param  {String} ev Event type\r\n * @param  {Object} payload Event object (serializable using structured cloning\r\n * algorithm)\r\n *\r\n * @return {undefined} undefined\r\n */\r\nCompositor.prototype.sendEvent = function sendEvent(path, ev, payload) {\r\n    this._outCommands.push(Commands.WITH, path, Commands.TRIGGER, ev, payload);\r\n};\r\n\r\n/**\r\n * Internal helper method used for notifying externally\r\n * resized contexts (e.g. by resizing the browser window).\r\n *\r\n * @method\r\n * @private\r\n *\r\n * @param  {String} selector render path to the node (context) that should be\r\n * resized\r\n * @param  {Array} size new context size\r\n *\r\n * @return {undefined} undefined\r\n */\r\nCompositor.prototype.sendResize = function sendResize (selector, size) {\r\n    this.sendEvent(selector, 'CONTEXT_RESIZE', size);\r\n};\r\n\r\n/**\r\n * Internal helper method used by `drawCommands`.\r\n * Subsequent commands are being associated with the node defined the the path\r\n * following the `WITH` command.\r\n *\r\n * @method\r\n * @private\r\n *\r\n * @param  {Number} iterator position index within the commands queue\r\n * @param  {Array} commands remaining message queue received, used to\r\n * shift single messages from\r\n *\r\n * @return {undefined} undefined\r\n */\r\nCompositor.prototype.handleWith = function handleWith (iterator, commands) {\r\n    var path = commands[iterator];\r\n    var pathArr = path.split('/');\r\n    var context = this.getOrSetContext(pathArr.shift());\r\n    return context.receive(path, commands, iterator);\r\n};\r\n\r\n/**\r\n * Retrieves the top-level Context associated with the passed in document\r\n * query selector. If no such Context exists, a new one will be instantiated.\r\n *\r\n * @method\r\n *\r\n * @param  {String} selector document query selector used for retrieving the\r\n * DOM node that should be used as a root element by the Context\r\n *\r\n * @return {Context} context\r\n */\r\nCompositor.prototype.getOrSetContext = function getOrSetContext(selector) {\r\n    if (this._contexts[selector]) {\r\n        return this._contexts[selector];\r\n    }\r\n    else {\r\n        var context = new Context(selector, this);\r\n        this._contexts[selector] = context;\r\n        return context;\r\n    }\r\n};\r\n\r\n/**\r\n * Retrieves a context object registered under the passed in selector.\r\n *\r\n * @method\r\n *\r\n * @param  {String} selector    Query selector that has previously been used to\r\n *                              register the context.\r\n * @return {Context}            The repsective context.\r\n */\r\nCompositor.prototype.getContext = function getContext(selector) {\r\n    if (this._contexts[selector])\r\n        return this._contexts[selector];\r\n};\r\n\r\n/**\r\n * Processes the previously via `receiveCommands` updated incoming \"in\"\r\n * command queue.\r\n * Called by UIManager on a frame by frame basis.\r\n *\r\n * @method\r\n *\r\n * @return {Array} outCommands set of commands to be sent back\r\n */\r\nCompositor.prototype.drawCommands = function drawCommands() {\r\n    var commands = this._inCommands;\r\n    var localIterator = 0;\r\n    var command = commands[localIterator];\r\n    while (command) {\r\n        switch (command) {\r\n            case Commands.TIME:\r\n                this._time = commands[++localIterator];\r\n                break;\r\n            case Commands.WITH:\r\n                localIterator = this.handleWith(++localIterator, commands);\r\n                break;\r\n            case Commands.NEED_SIZE_FOR:\r\n                this.giveSizeFor(++localIterator, commands);\r\n                break;\r\n        }\r\n        command = commands[++localIterator];\r\n    }\r\n\r\n    // TODO: Switch to associative arrays here...\r\n\r\n    for (var key in this._contexts) {\r\n        //this._contexts[key].draw();\r\n    }\r\n\r\n    if (this._resized) {\r\n        this.updateSize();\r\n    }\r\n\r\n    return this._outCommands;\r\n};\r\n\r\n\r\n/**\r\n * Updates the size of all previously registered context objects.\r\n * This results into CONTEXT_RESIZE events being sent and the root elements\r\n * used by the individual renderers being resized to the the DOMRenderer's root\r\n * size.\r\n *\r\n * @method\r\n *\r\n * @return {undefined} undefined\r\n */\r\nCompositor.prototype.updateSize = function updateSize() {\r\n    for (var selector in this._contexts) {\r\n        this._contexts[selector].updateSize();\r\n    }\r\n};\r\n\r\n/**\r\n * Used by ThreadManager to update the internal queue of incoming commands.\r\n * Receiving commands does not immediately start the rendering process.\r\n *\r\n * @method\r\n *\r\n * @param  {Array} commands command queue to be processed by the compositor's\r\n * `drawCommands` method\r\n *\r\n * @return {undefined} undefined\r\n */\r\nCompositor.prototype.receiveCommands = function receiveCommands(commands) {\r\n    var len = commands.length;\r\n    for (var i = 0; i < len; i++) {\r\n        this._inCommands.push(commands[i]);\r\n    }\r\n\r\n    for (var selector in this._contexts) {\r\n        this._contexts[selector].checkInit();\r\n    }\r\n};\r\n\r\n/**\r\n * Internal helper method used by `drawCommands`.\r\n *\r\n * @method\r\n * @private\r\n *\r\n * @param  {Number} iterator position index within the command queue\r\n * @param  {Array} commands remaining message queue received, used to\r\n * shift single messages\r\n *\r\n * @return {undefined} undefined\r\n */\r\nCompositor.prototype.giveSizeFor = function giveSizeFor(iterator, commands) {\r\n    var selector = commands[iterator];\r\n    var context = this.getContext(selector);\r\n    if (context) {\r\n        var size = context.getRootSize();\r\n        this.sendResize(selector, size);\r\n    } else {\r\n        this.getOrSetContext(selector);\r\n    }\r\n};\r\n\r\n/**\r\n * Flushes the queue of outgoing \"out\" commands.\r\n * Called by ThreadManager.\r\n *\r\n * @method\r\n *\r\n * @return {undefined} undefined\r\n */\r\nCompositor.prototype.clearCommands = function clearCommands() {\r\n    this._inCommands.length = 0;\r\n    this._outCommands.length = 0;\r\n    this._resized = false;\r\n};\r\n\r\nmodule.exports = Compositor;\r\n","/**\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2015 Famous Industries Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n\r\n'use strict';\r\n\r\nvar WebGLRenderer = require('../webgl-renderers/WebGLRenderer');\r\nvar Camera = require('../components/Camera');\r\nvar DOMRenderer = require('../dom-renderers/DOMRenderer');\r\nvar Commands = require('../core/Commands');\r\n\r\n/**\r\n * Context is a render layer with its own WebGLRenderer and DOMRenderer.\r\n * It is the interface between the Compositor which receives commands\r\n * and the renderers that interpret them. It also relays information to\r\n * the renderers about resizing.\r\n *\r\n * The DOMElement at the given query selector is used as the root. A\r\n * new DOMElement is appended to this root element, and used as the\r\n * parent element for all Famous DOM rendering at this context. A\r\n * canvas is added and used for all WebGL rendering at this context.\r\n *\r\n * @class Context\r\n * @constructor\r\n *\r\n * @param {String} selector Query selector used to locate root element of\r\n * context layer.\r\n * @param {Compositor} compositor Compositor reference to pass down to\r\n * WebGLRenderer.\r\n */\r\nfunction Context(selector, compositor) {\r\n    this._compositor = compositor;\r\n    this._rootEl = document.querySelector(selector);\r\n    this._selector = selector;\r\n\r\n    if (this._rootEl === null) {\r\n        throw new Error(\r\n            'Failed to create Context: ' +\r\n            'No matches for \"' + selector + '\" found.'\r\n        );\r\n    }\r\n\r\n    this._selector = selector;\r\n\r\n    // Initializes the DOMRenderer.\r\n    // Every Context has at least a DOMRenderer for now.\r\n    this._initDOMRenderer();\r\n\r\n    // WebGLRenderer will be instantiated when needed.\r\n    this._webGLRenderer = null;\r\n    this._domRenderer = new DOMRenderer(this._domRendererRootEl, selector, compositor);\r\n    this._canvasEl = null;\r\n\r\n    // State holders\r\n\r\n    this._renderState = {\r\n        projectionType: Camera.ORTHOGRAPHIC_PROJECTION,\r\n        perspectiveTransform: new Float32Array([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]),\r\n        viewTransform: new Float32Array([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]),\r\n        viewDirty: false,\r\n        perspectiveDirty: false\r\n    };\r\n\r\n    this._size = [];\r\n\r\n    this._meshTransform = new Float32Array(16);\r\n    this._meshSize = [0, 0, 0];\r\n\r\n    this._initDOM = false;\r\n\r\n    this._commandCallbacks = [];\r\n    this.initCommandCallbacks();\r\n\r\n    this.updateSize();\r\n}\r\n\r\n/**\r\n * Queries DOMRenderer size and updates canvas size. Relays size information to\r\n * WebGLRenderer.\r\n *\r\n * @method\r\n *\r\n * @return {Context} this\r\n */\r\nContext.prototype.updateSize = function () {\r\n    var width = this._rootEl.offsetWidth;\r\n    var height = this._rootEl.offsetHeight;\r\n\r\n    this._size[0] = width;\r\n    this._size[1] = height;\r\n    this._size[2] = (width > height) ? width : height;\r\n\r\n    this._compositor.sendResize(this._selector, this._size);\r\n    if (this._webGLRenderer) this._webGLRenderer.updateSize(this._size);\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * Draw function called after all commands have been handled for current frame.\r\n * Issues draw commands to all renderers with current renderState.\r\n *\r\n * @method\r\n *\r\n * @return {undefined} undefined\r\n */\r\nContext.prototype.draw = function draw() {\r\n    this._domRenderer.draw(this._renderState);\r\n    if (this._webGLRenderer) this._webGLRenderer.draw(this._renderState);\r\n\r\n    if (this._renderState.perspectiveDirty) this._renderState.perspectiveDirty = false;\r\n    if (this._renderState.viewDirty) this._renderState.viewDirty = false;\r\n};\r\n\r\n/**\r\n * Initializes the DOMRenderer by creating a root DIV element and appending it\r\n * to the context.\r\n *\r\n * @method\r\n * @private\r\n *\r\n * @return {undefined} undefined\r\n */\r\nContext.prototype._initDOMRenderer = function _initDOMRenderer() {\r\n    this._domRendererRootEl = document.createElement('div');\r\n    this._rootEl.appendChild(this._domRendererRootEl);\r\n    this._domRendererRootEl.style.visibility = 'hidden';\r\n\r\n    this._domRenderer = new DOMRenderer(\r\n        this._domRendererRootEl,\r\n        this._selector,\r\n        this._compositor\r\n    );\r\n};\r\n\r\nContext.prototype.initCommandCallbacks = function initCommandCallbacks () {\r\n    this._commandCallbacks[Commands.INIT_DOM] = initDOM;\r\n    this._commandCallbacks[Commands.DOM_RENDER_SIZE] = domRenderSize;\r\n    this._commandCallbacks[Commands.CHANGE_TRANSFORM] = changeTransform;\r\n    this._commandCallbacks[Commands.CHANGE_SIZE] = changeSize;\r\n    this._commandCallbacks[Commands.CHANGE_PROPERTY] = changeProperty;\r\n    this._commandCallbacks[Commands.CHANGE_CONTENT] = changeContent;\r\n    this._commandCallbacks[Commands.CHANGE_ATTRIBUTE] = changeAttribute;\r\n    this._commandCallbacks[Commands.ADD_CLASS] = addClass;\r\n    this._commandCallbacks[Commands.REMOVE_CLASS] = removeClass;\r\n    this._commandCallbacks[Commands.SUBSCRIBE] = subscribe;\r\n    this._commandCallbacks[Commands.UNSUBSCRIBE] = unsubscribe;\r\n    this._commandCallbacks[Commands.GL_SET_DRAW_OPTIONS] = glSetDrawOptions;\r\n    this._commandCallbacks[Commands.GL_AMBIENT_LIGHT] = glAmbientLight;\r\n    this._commandCallbacks[Commands.GL_LIGHT_POSITION] = glLightPosition;\r\n    this._commandCallbacks[Commands.GL_LIGHT_COLOR] = glLightColor;\r\n    this._commandCallbacks[Commands.MATERIAL_INPUT] = materialInput;\r\n    this._commandCallbacks[Commands.GL_SET_GEOMETRY] = glSetGeometry;\r\n    this._commandCallbacks[Commands.GL_UNIFORMS] = glUniforms;\r\n    this._commandCallbacks[Commands.GL_BUFFER_DATA] = glBufferData;\r\n    this._commandCallbacks[Commands.GL_CUTOUT_STATE] = glCutoutState;\r\n    this._commandCallbacks[Commands.GL_MESH_VISIBILITY] = glMeshVisibility;\r\n    this._commandCallbacks[Commands.GL_REMOVE_MESH] = glRemoveMesh;\r\n    this._commandCallbacks[Commands.PINHOLE_PROJECTION] = pinholeProjection;\r\n    this._commandCallbacks[Commands.ORTHOGRAPHIC_PROJECTION] = orthographicProjection;\r\n    this._commandCallbacks[Commands.CHANGE_VIEW_TRANSFORM] = changeViewTransform;\r\n    this._commandCallbacks[Commands.PREVENT_DEFAULT] = preventDefault;\r\n    this._commandCallbacks[Commands.ALLOW_DEFAULT] = allowDefault;\r\n    this._commandCallbacks[Commands.READY] = ready;\r\n};\r\n\r\n/**\r\n * Initializes the WebGLRenderer and updates it initial size.\r\n *\r\n * The Initialization process consists of the following steps:\r\n *\r\n * 1. A new `<canvas>` element is being created and appended to the root element.\r\n * 2. The WebGLRenderer is being instantiated.\r\n * 3. The size of the WebGLRenderer is being updated.\r\n *\r\n * @method\r\n * @private\r\n *\r\n * @return {undefined} undefined\r\n */\r\nContext.prototype._initWebGLRenderer = function _initWebGLRenderer() {\r\n    this._webGLRendererRootEl = document.createElement('canvas');\r\n    this._rootEl.appendChild(this._webGLRendererRootEl);\r\n\r\n    this._webGLRenderer = new WebGLRenderer(\r\n        this._webGLRendererRootEl,\r\n        this._compositor\r\n    );\r\n\r\n    // Don't read offset width and height.\r\n    this._webGLRenderer.updateSize(this._size);\r\n};\r\n\r\n/**\r\n * Gets the size of the parent element of the DOMRenderer for this context.\r\n *\r\n * @method\r\n *\r\n * @return {undefined} undefined\r\n */\r\nContext.prototype.getRootSize = function getRootSize() {\r\n    return [\r\n        this._rootEl.offsetWidth,\r\n        this._rootEl.offsetHeight\r\n    ];\r\n};\r\n\r\n\r\n/**\r\n * Initializes the context if the `READY` command has been received earlier.\r\n *\r\n * @return {undefined} undefined\r\n */\r\nContext.prototype.checkInit = function checkInit () {\r\n    if (this._initDOM) {\r\n        this._domRendererRootEl.style.visibility = 'visible';\r\n        this._initDOM = false;\r\n    }\r\n};\r\n\r\n/**\r\n * Handles delegation of commands to renderers of this context.\r\n *\r\n * @method\r\n *\r\n * @param {String} path String used as identifier of a given node in the\r\n * scene graph.\r\n * @param {Array} commands List of all commands from this frame.\r\n * @param {Number} iterator Number indicating progress through the command\r\n * queue.\r\n *\r\n * @return {Number} iterator indicating progress through the command queue.\r\n */\r\nContext.prototype.receive = function receive(path, commands, iterator) {\r\n    var localIterator = iterator;\r\n\r\n    var command = commands[++localIterator];\r\n\r\n    this._domRenderer.loadPath(path);\r\n\r\n    while (command != null) {\r\n        if (command === Commands.WITH || command === Commands.TIME) return localIterator - 1;\r\n        else localIterator = this._commandCallbacks[command](this, path, commands, localIterator) + 1;\r\n        command = commands[localIterator];\r\n    }\r\n\r\n    return localIterator;\r\n};\r\n\r\n/**\r\n * Getter method used for retrieving the used DOMRenderer.\r\n *\r\n * @method\r\n *\r\n * @return {DOMRenderer}    The DOMRenderer being used by the Context.\r\n */\r\nContext.prototype.getDOMRenderer = function getDOMRenderer() {\r\n    return this._domRenderer;\r\n};\r\n\r\n/**\r\n * Getter method used for retrieving the used WebGLRenderer (if any).\r\n *\r\n * @method\r\n *\r\n * @return {WebGLRenderer|null}    The WebGLRenderer being used by the Context.\r\n */\r\nContext.prototype.getWebGLRenderer = function getWebGLRenderer() {\r\n    return this._webGLRenderer;\r\n};\r\n\r\n// Command Callbacks\r\nfunction preventDefault (context, path, commands, iterator) {\r\n    if (context._webGLRenderer) context._webGLRenderer.getOrSetCutout(path);\r\n    context._domRenderer.preventDefault(commands[++iterator]);\r\n    return iterator;\r\n}\r\n\r\nfunction allowDefault (context, path, commands, iterator) {\r\n    if (context._webGLRenderer) context._webGLRenderer.getOrSetCutout(path);\r\n    context._domRenderer.allowDefault(commands[++iterator]);\r\n    return iterator;\r\n}\r\n\r\nfunction ready (context, path, commands, iterator) {\r\n    context._initDOM = true;\r\n    return iterator;\r\n}\r\n\r\nfunction initDOM (context, path, commands, iterator) {\r\n    context._domRenderer.insertEl(commands[++iterator]);\r\n    return iterator;\r\n}\r\n\r\nfunction domRenderSize (context, path, commands, iterator) {\r\n    context._domRenderer.getSizeOf(commands[++iterator]);\r\n    return iterator;\r\n}\r\n\r\nfunction changeTransform (context, path, commands, iterator) {\r\n    var temp = context._meshTransform;\r\n\r\n    temp[0] = commands[++iterator];\r\n    temp[1] = commands[++iterator];\r\n    temp[2] = commands[++iterator];\r\n    temp[3] = commands[++iterator];\r\n    temp[4] = commands[++iterator];\r\n    temp[5] = commands[++iterator];\r\n    temp[6] = commands[++iterator];\r\n    temp[7] = commands[++iterator];\r\n    temp[8] = commands[++iterator];\r\n    temp[9] = commands[++iterator];\r\n    temp[10] = commands[++iterator];\r\n    temp[11] = commands[++iterator];\r\n    temp[12] = commands[++iterator];\r\n    temp[13] = commands[++iterator];\r\n    temp[14] = commands[++iterator];\r\n    temp[15] = commands[++iterator];\r\n\r\n    context._domRenderer.setMatrix(temp);\r\n\r\n    if (context._webGLRenderer)\r\n        context._webGLRenderer.setCutoutUniform(path, 'u_transform', temp);\r\n\r\n    return iterator;\r\n}\r\n\r\nfunction changeSize (context, path, commands, iterator) {\r\n    var width = commands[++iterator];\r\n    var height = commands[++iterator];\r\n\r\n    context._domRenderer.setSize(width, height);\r\n    if (context._webGLRenderer) {\r\n        context._meshSize[0] = width;\r\n        context._meshSize[1] = height;\r\n        context._webGLRenderer.setCutoutUniform(path, 'u_size', context._meshSize);\r\n    }\r\n\r\n    return iterator;\r\n}\r\n\r\nfunction changeProperty (context, path, commands, iterator) {\r\n    if (context._webGLRenderer) context._webGLRenderer.getOrSetCutout(path);\r\n    context._domRenderer.setProperty(commands[++iterator], commands[++iterator]);\r\n    return iterator;\r\n}\r\n\r\nfunction changeContent (context, path, commands, iterator) {\r\n    if (context._webGLRenderer) context._webGLRenderer.getOrSetCutout(path);\r\n    context._domRenderer.setContent(commands[++iterator]);\r\n    return iterator;\r\n}\r\n\r\nfunction changeAttribute (context, path, commands, iterator) {\r\n    if (context._webGLRenderer) context._webGLRenderer.getOrSetCutout(path);\r\n    context._domRenderer.setAttribute(commands[++iterator], commands[++iterator]);\r\n    return iterator;\r\n}\r\n\r\nfunction addClass (context, path, commands, iterator) {\r\n    if (context._webGLRenderer) context._webGLRenderer.getOrSetCutout(path);\r\n    context._domRenderer.addClass(commands[++iterator]);\r\n    return iterator;\r\n}\r\n\r\nfunction removeClass (context, path, commands, iterator) {\r\n    if (context._webGLRenderer) context._webGLRenderer.getOrSetCutout(path);\r\n    context._domRenderer.removeClass(commands[++iterator]);\r\n    return iterator;\r\n}\r\n\r\nfunction subscribe (context, path, commands, iterator) {\r\n    if (context._webGLRenderer) context._webGLRenderer.getOrSetCutout(path);\r\n    context._domRenderer.subscribe(commands[++iterator]);\r\n    return iterator;\r\n}\r\n\r\nfunction unsubscribe (context, path, commands, iterator) {\r\n    if (context._webGLRenderer) context._webGLRenderer.getOrSetCutout(path);\r\n    context._domRenderer.unsubscribe(commands[++iterator]);\r\n    return iterator;\r\n}\r\n\r\nfunction glSetDrawOptions (context, path, commands, iterator) {\r\n    if (!context._webGLRenderer) context._initWebGLRenderer();\r\n    context._webGLRenderer.setMeshOptions(path, commands[++iterator]);\r\n    return iterator;\r\n}\r\n\r\nfunction glAmbientLight (context, path, commands, iterator) {\r\n    if (!context._webGLRenderer) context._initWebGLRenderer();\r\n    context._webGLRenderer.setAmbientLightColor(\r\n        path,\r\n        commands[++iterator],\r\n        commands[++iterator],\r\n        commands[++iterator]\r\n    );\r\n    return iterator;\r\n}\r\n\r\nfunction glLightPosition (context, path, commands, iterator) {\r\n    if (!context._webGLRenderer) context._initWebGLRenderer();\r\n    context._webGLRenderer.setLightPosition(\r\n        path,\r\n        commands[++iterator],\r\n        commands[++iterator],\r\n        commands[++iterator]\r\n    );\r\n    return iterator;\r\n}\r\n\r\nfunction glLightColor (context, path, commands, iterator) {\r\n    if (!context._webGLRenderer) context._initWebGLRenderer();\r\n    context._webGLRenderer.setLightColor(\r\n        path,\r\n        commands[++iterator],\r\n        commands[++iterator],\r\n        commands[++iterator]\r\n    );\r\n    return iterator;\r\n}\r\n\r\nfunction materialInput (context, path, commands, iterator) {\r\n    if (!context._webGLRenderer) context._initWebGLRenderer();\r\n    context._webGLRenderer.handleMaterialInput(\r\n        path,\r\n        commands[++iterator],\r\n        commands[++iterator]\r\n    );\r\n    return iterator;\r\n}\r\n\r\nfunction glSetGeometry (context, path, commands, iterator) {\r\n    if (!context._webGLRenderer) context._initWebGLRenderer();\r\n    context._webGLRenderer.setGeometry(\r\n        path,\r\n        commands[++iterator],\r\n        commands[++iterator],\r\n        commands[++iterator]\r\n    );\r\n    return iterator;\r\n}\r\n\r\nfunction glUniforms (context, path, commands, iterator) {\r\n    if (!context._webGLRenderer) context._initWebGLRenderer();\r\n    context._webGLRenderer.setMeshUniform(\r\n        path,\r\n        commands[++iterator],\r\n        commands[++iterator]\r\n    );\r\n    return iterator;\r\n}\r\n\r\nfunction glBufferData (context, path, commands, iterator) {\r\n    if (!context._webGLRenderer) context._initWebGLRenderer();\r\n    context._webGLRenderer.bufferData(\r\n        commands[++iterator],\r\n        commands[++iterator],\r\n        commands[++iterator],\r\n        commands[++iterator],\r\n        commands[++iterator]\r\n    );\r\n    return iterator;\r\n}\r\n\r\nfunction glCutoutState (context, path, commands, iterator) {\r\n    if (!context._webGLRenderer) context._initWebGLRenderer();\r\n    context._webGLRenderer.setCutoutState(path, commands[++iterator]);\r\n    return iterator;\r\n}\r\n\r\nfunction glMeshVisibility (context, path, commands, iterator) {\r\n    if (!context._webGLRenderer) context._initWebGLRenderer();\r\n    context._webGLRenderer.setMeshVisibility(path, commands[++iterator]);\r\n    return iterator;\r\n}\r\n\r\nfunction glRemoveMesh (context, path, commands, iterator) {\r\n    if (!context._webGLRenderer) context._initWebGLRenderer();\r\n    context._webGLRenderer.removeMesh(path);\r\n    return iterator;\r\n}\r\n\r\nfunction pinholeProjection (context, path, commands, iterator) {\r\n    context._renderState.projectionType = Camera.PINHOLE_PROJECTION;\r\n    context._renderState.perspectiveTransform[11] = -1 / commands[++iterator];\r\n    context._renderState.perspectiveDirty = true;\r\n    return iterator;\r\n}\r\n\r\nfunction orthographicProjection (context, path, commands, iterator) {\r\n    context._renderState.projectionType = Camera.ORTHOGRAPHIC_PROJECTION;\r\n    context._renderState.perspectiveTransform[11] = 0;\r\n    context._renderState.perspectiveDirty = true;\r\n    return iterator;\r\n}\r\n\r\nfunction changeViewTransform (context, path, commands, iterator) {\r\n    context._renderState.viewTransform[0] = commands[++iterator];\r\n    context._renderState.viewTransform[1] = commands[++iterator];\r\n    context._renderState.viewTransform[2] = commands[++iterator];\r\n    context._renderState.viewTransform[3] = commands[++iterator];\r\n\r\n    context._renderState.viewTransform[4] = commands[++iterator];\r\n    context._renderState.viewTransform[5] = commands[++iterator];\r\n    context._renderState.viewTransform[6] = commands[++iterator];\r\n    context._renderState.viewTransform[7] = commands[++iterator];\r\n\r\n    context._renderState.viewTransform[8] = commands[++iterator];\r\n    context._renderState.viewTransform[9] = commands[++iterator];\r\n    context._renderState.viewTransform[10] = commands[++iterator];\r\n    context._renderState.viewTransform[11] = commands[++iterator];\r\n\r\n    context._renderState.viewTransform[12] = commands[++iterator];\r\n    context._renderState.viewTransform[13] = commands[++iterator];\r\n    context._renderState.viewTransform[14] = commands[++iterator];\r\n    context._renderState.viewTransform[15] = commands[++iterator];\r\n\r\n    context._renderState.viewDirty = true;\r\n    return iterator;\r\n}\r\n\r\nmodule.exports = Context;\r\n","/**\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2015 Famous Industries Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n\r\n'use strict';\r\n\r\nvar Commands = require('../core/Commands');\r\nvar Chan = require('../core/Chan');\r\n/**\r\n * The UIManager is being updated by an Engine by consecutively calling its\r\n * `update` method. It can either manage a real Web-Worker or the global\r\n * FamousEngine core singleton.\r\n *\r\n * @example\r\n * var compositor = new Compositor();\r\n * var engine = new Engine();\r\n *\r\n * // Using a Web Worker\r\n * var worker = new Worker('worker.bundle.js');\r\n * var threadmanger = new UIManager(worker, compositor, engine);\r\n *\r\n * // Without using a Web Worker\r\n * var threadmanger = new UIManager(Famous, compositor, engine);\r\n *\r\n * @class  UIManager\r\n * @constructor\r\n *\r\n * @param {Famous|Worker} thread The thread being used to receive messages\r\n * from and post messages to. Expected to expose a WebWorker-like API, which\r\n * means providing a way to listen for updates by setting its `onmessage`\r\n * property and sending updates using `postMessage`.\r\n * @param {Compositor} compositor an instance of Compositor used to extract\r\n * enqueued draw commands from to be sent to the thread.\r\n * @param {RenderLoop} renderLoop an instance of Engine used for executing\r\n * the `ENGINE` commands on.\r\n */\r\nfunction UIManager (thread, compositor, renderLoop) {\r\n    this._thread = thread;\r\n    this._compositor = compositor;\r\n    this._renderLoop = renderLoop;\r\n    Chan.setChannel(thread);\r\n    this._renderLoop.update(this);\r\n\r\n    var _this = this;\r\n    this._thread.onmessage = function (ev) {\r\n        var message = ev.data ? ev.data : ev;\r\n        if (message[0] === Commands.ENGINE) {\r\n            switch (message[1]) {\r\n                case Commands.CROSS_THREAD:\r\n                    Chan.callback(message[2]);\r\n                    break;\r\n                case Commands.START:\r\n                    _this._engine.start();\r\n                    break;\r\n                case Commands.STOP:\r\n                    _this._engine.stop();\r\n                    break;\r\n                default:\r\n                    console.error(\r\n                        'Unknown ENGINE command \"' + message[1] + '\"'\r\n                    );\r\n                    break;\r\n            }\r\n        }\r\n        else {\r\n            _this._compositor.receiveCommands(message);\r\n        }\r\n    };\r\n    this._thread.onerror = function (error) {\r\n        console.error(error);\r\n    };\r\n}\r\n\r\n/**\r\n * Returns the thread being used by the UIManager.\r\n * This could either be an an actual web worker or a `FamousEngine` singleton.\r\n *\r\n * @method\r\n *\r\n * @return {Worker|FamousEngine} Either a web worker or a `FamousEngine` singleton.\r\n */\r\nUIManager.prototype.getThread = function getThread() {\r\n    return this._thread;\r\n};\r\n\r\n/**\r\n * Returns the compositor being used by this UIManager.\r\n *\r\n * @method\r\n *\r\n * @return {Compositor} The compositor used by the UIManager.\r\n */\r\nUIManager.prototype.getCompositor = function getCompositor() {\r\n    return this._compositor;\r\n};\r\n\r\n/**\r\n * Returns the engine being used by this UIManager.\r\n *\r\n * @method\r\n * @deprecated Use {@link UIManager#getRenderLoop instead!}\r\n *\r\n * @return {Engine} The engine used by the UIManager.\r\n */\r\nUIManager.prototype.getEngine = function getEngine() {\r\n    return this._renderLoop;\r\n};\r\n\r\n\r\n/**\r\n * Returns the render loop currently being used by the UIManager.\r\n *\r\n * @method\r\n *\r\n * @return {RenderLoop}  The registered render loop used for updating the\r\n * UIManager.\r\n */\r\nUIManager.prototype.getRenderLoop = function getRenderLoop() {\r\n    return this._renderLoop;\r\n};\r\n\r\n/**\r\n * Update method being invoked by the Engine on every `requestAnimationFrame`.\r\n * Used for updating the notion of time within the managed thread by sending\r\n * a FRAME command and sending messages to\r\n *\r\n * @method\r\n *\r\n * @param  {Number} time unix timestamp to be passed down to the worker as a\r\n * FRAME command\r\n * @return {undefined} undefined\r\n */\r\nUIManager.prototype.update = function update (time) {\r\n    this._thread.postMessage([Commands.FRAME, time]);\r\n    var threadMessages = this._compositor.drawCommands();\r\n    this._thread.postMessage(threadMessages);\r\n    this._compositor.clearCommands();\r\n};\r\n\r\nmodule.exports = UIManager;\r\n","/**\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2015 Famous Industries Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n\r\n'use strict';\r\n\r\nvar css = '.famous-dom-renderer {' +\r\n    'width:100%;' +\r\n    'height:100%;' +\r\n    'transform-style:preserve-3d;' +\r\n    '-webkit-transform-style:preserve-3d;' +\r\n'}' +\r\n\r\n'.famous-dom-element {' +\r\n    '-webkit-transform-origin:0% 0%;' +\r\n    'transform-origin:0% 0%;' +\r\n    '-webkit-backface-visibility:visible;' +\r\n    'backface-visibility:visible;' +\r\n    '-webkit-transform-style:preserve-3d;' +\r\n    'transform-style:preserve-3d;' +\r\n    '-webkit-tap-highlight-color:transparent;' +\r\n    'pointer-events:auto;' +\r\n    'z-index:1;' +\r\n'}' +\r\n\r\n'.famous-dom-element-content,' +\r\n'.famous-dom-element {' +\r\n    'position:absolute;' +\r\n    'box-sizing:border-box;' +\r\n    '-moz-box-sizing:border-box;' +\r\n    '-webkit-box-sizing:border-box;' +\r\n'}' +\r\n\r\n'.famous-webgl-renderer {' +\r\n    '-webkit-transform:translateZ(1000000px);' +  /* TODO: Fix when Safari Fixes*/\r\n    'transform:translateZ(1000000px);' +\r\n    'pointer-events:none;' +\r\n    'position:absolute;' +\r\n    'z-index:1;' +\r\n    'top:0;' +\r\n    'width:100%;' +\r\n    'height:100%;' +\r\n'}';\r\n\r\nvar INJECTED = typeof document === 'undefined';\r\n\r\nfunction injectCSS() {\r\n    if (INJECTED) return;\r\n    INJECTED = true;\r\n    if (document.createStyleSheet) {\r\n        var sheet = document.createStyleSheet();\r\n        sheet.cssText = css;\r\n    }\r\n    else {\r\n        var head = document.getElementsByTagName('head')[0];\r\n        var style = document.createElement('style');\r\n\r\n        if (style.styleSheet) {\r\n            style.styleSheet.cssText = css;\r\n        }\r\n        else {\r\n            style.appendChild(document.createTextNode(css));\r\n        }\r\n\r\n        (head ? head : document.documentElement).appendChild(style);\r\n    }\r\n}\r\n\r\nmodule.exports = injectCSS;\r\n","/**\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2015 Famous Industries Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n\r\n'use strict';\r\n\r\n/**\r\n * A lightweight, featureless EventEmitter.\r\n *\r\n * @class CallbackStore\r\n * @constructor\r\n */\r\nfunction CallbackStore () {\r\n    this._events = {};\r\n}\r\n\r\n/**\r\n * Adds a listener for the specified event (= key).\r\n *\r\n * @method on\r\n * @chainable\r\n *\r\n * @param  {String}   key       The event type (e.g. `click`).\r\n * @param  {Function} callback  A callback function to be invoked whenever `key`\r\n *                              event is being triggered.\r\n * @return {Function} destroy   A function to call if you want to remove the\r\n *                              callback.\r\n */\r\nCallbackStore.prototype.on = function on (key, callback) {\r\n    if (!this._events[key]) this._events[key] = [];\r\n    var callbackList = this._events[key];\r\n    callbackList.push(callback);\r\n    return function () {\r\n        callbackList.splice(callbackList.indexOf(callback), 1);\r\n    };\r\n};\r\n\r\n/**\r\n * Removes a previously added event listener.\r\n *\r\n * @method off\r\n * @chainable\r\n *\r\n * @param  {String} key         The event type from which the callback function\r\n *                              should be removed.\r\n * @param  {Function} callback  The callback function to be removed from the\r\n *                              listeners for key.\r\n * @return {CallbackStore} this\r\n */\r\nCallbackStore.prototype.off = function off (key, callback) {\r\n    var events = this._events[key];\r\n    if (events) events.splice(events.indexOf(callback), 1);\r\n    return this;\r\n};\r\n\r\n/**\r\n * Invokes all the previously for this key registered callbacks.\r\n *\r\n * @method trigger\r\n * @chainable\r\n *\r\n * @param  {String}        key      The event type.\r\n * @param  {Object}        payload  The event payload (event object).\r\n * @return {CallbackStore} this\r\n */\r\nCallbackStore.prototype.trigger = function trigger (key, payload) {\r\n    var events = this._events[key];\r\n    if (events) {\r\n        var i = 0;\r\n        var len = events.length;\r\n        for (; i < len ; i++) events[i](payload);\r\n    }\r\n    return this;\r\n};\r\n\r\nmodule.exports = CallbackStore;\r\n","'use strict';\r\n\r\nfunction Registry () {\r\n    this._keyToValue = {};\r\n    this._values = [];\r\n    this._keys = [];\r\n    this._keyToIndex = {};\r\n    this._freedIndices = [];\r\n}\r\n\r\nRegistry.prototype.register = function register (key, value) {\r\n    var index = this._keyToIndex[key];\r\n    if (index == null) {\r\n        index = this._freedIndices.pop();\r\n        if (index === undefined) index = this._values.length;\r\n\r\n        this._values[index] = value;\r\n        this._keys[index] = key;\r\n\r\n        this._keyToIndex[key] = index;\r\n        this._keyToValue[key] = value;\r\n    }\r\n    else {\r\n        this._keyToValue[key] = value;\r\n        this._values[index] = value;\r\n    }\r\n};\r\n\r\nRegistry.prototype.unregister = function unregister (key) {\r\n    var index = this._keyToIndex[key];\r\n\r\n    if (index != null) {\r\n        this._freedIndices.push(index);\r\n        this._keyToValue[key] = null;\r\n        this._keyToIndex[key] = null;\r\n        this._values[index] = null;\r\n        this._keys[index] = null;\r\n    }\r\n};\r\n\r\nRegistry.prototype.get = function get (key) {\r\n    return this._keyToValue[key];\r\n};\r\n\r\nRegistry.prototype.getValues = function getValues () {\r\n    return this._values;\r\n};\r\n\r\nRegistry.prototype.getKeys = function getKeys () {\r\n    return this._keys;\r\n};\r\n\r\nRegistry.prototype.getKeyToValue = function getKeyToValue () {\r\n    return this._keyToValue;\r\n};\r\n\r\nmodule.exports = Registry;\r\n","/**\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2015 Famous Industries Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n\r\n'use strict';\r\n\r\n/**\r\n * Deep clone an object.\r\n *\r\n * @method  clone\r\n *\r\n * @param {Object} b       Object to be cloned.\r\n * @return {Object} a      Cloned object (deep equality).\r\n */\r\nvar clone = function clone(b) {\r\n    var a;\r\n    if (typeof b === 'object') {\r\n        a = (b instanceof Array) ? [] : {};\r\n        for (var key in b) {\r\n            if (typeof b[key] === 'object' && b[key] !== null) {\r\n                if (b[key] instanceof Array) {\r\n                    a[key] = new Array(b[key].length);\r\n                    for (var i = 0; i < b[key].length; i++) {\r\n                        a[key][i] = clone(b[key][i]);\r\n                    }\r\n                }\r\n                else {\r\n                  a[key] = clone(b[key]);\r\n                }\r\n            }\r\n            else {\r\n                a[key] = b[key];\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        a = b;\r\n    }\r\n    return a;\r\n};\r\n\r\nmodule.exports = clone;\r\n","'use strict';\r\n\r\n/**\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2015 Famous Industries Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n\r\n/**\r\n * Takes an object containing keys and values and returns an object\r\n * comprising two \"associate\" arrays, one with the keys and the other\r\n * with the values.\r\n *\r\n * @method keyValuesToArrays\r\n *\r\n * @param {Object} obj                      Objects where to extract keys and values\r\n *                                          from.\r\n * @return {Object}         result\r\n *         {Array.<String>} result.keys     Keys of `result`, as returned by\r\n *                                          `Object.keys()`\r\n *         {Array}          result.values   Values of passed in object.\r\n */\r\nmodule.exports = function keyValuesToArrays(obj) {\r\n    var keysArray = [], valuesArray = [];\r\n    var i = 0;\r\n    for(var key in obj) {\r\n        if (obj.hasOwnProperty(key)) {\r\n            keysArray[i] = key;\r\n            valuesArray[i] = obj[key];\r\n            i++;\r\n        }\r\n    }\r\n    return {\r\n        keys: keysArray,\r\n        values: valuesArray\r\n    };\r\n};\r\n","/**\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2015 Famous Industries Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n\r\n'use strict';\r\n\r\nvar PREFIXES = ['', '-ms-', '-webkit-', '-moz-', '-o-'];\r\n\r\n/**\r\n * A helper function used for determining the vendor prefixed version of the\r\n * passed in CSS property.\r\n *\r\n * Vendor checks are being conducted in the following order:\r\n *\r\n * 1. (no prefix)\r\n * 2. `-mz-`\r\n * 3. `-webkit-`\r\n * 4. `-moz-`\r\n * 5. `-o-`\r\n *\r\n * @method vendorPrefix\r\n *\r\n * @param {String} property     CSS property (no camelCase), e.g.\r\n *                              `border-radius`.\r\n * @return {String} prefixed    Vendor prefixed version of passed in CSS\r\n *                              property (e.g. `-webkit-border-radius`).\r\n */\r\nfunction vendorPrefix(property) {\r\n    for (var i = 0; i < PREFIXES.length; i++) {\r\n        var prefixed = PREFIXES[i] + property;\r\n        if (document.documentElement.style[prefixed] === '') {\r\n            return prefixed;\r\n        }\r\n    }\r\n    return property;\r\n}\r\n\r\nmodule.exports = vendorPrefix;\r\n","/**\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2015 Famous Industries Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n\r\n'use strict';\r\n\r\n/**\r\n * Buffer is a private class that wraps the vertex data that defines\r\n * the the points of the triangles that webgl draws. Each buffer\r\n * maps to one attribute of a mesh.\r\n *\r\n * @class Buffer\r\n * @constructor\r\n *\r\n * @param {Number} target The bind target of the buffer to update: ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER\r\n * @param {Object} type Array type to be used in calls to gl.bufferData.\r\n * @param {WebGLContext} gl The WebGL context that the buffer is hosted by.\r\n *\r\n * @return {undefined} undefined\r\n */\r\nfunction Buffer(target, type, gl) {\r\n    this.buffer = null;\r\n    this.target = target;\r\n    this.type = type;\r\n    this.data = [];\r\n    this.gl = gl;\r\n}\r\n\r\n/**\r\n * Creates a WebGL buffer if one does not yet exist and binds the buffer to\r\n * to the context. Runs bufferData with appropriate data.\r\n *\r\n * @method\r\n *\r\n * @return {undefined} undefined\r\n */\r\nBuffer.prototype.subData = function subData() {\r\n    var gl = this.gl;\r\n    var data = [];\r\n\r\n    // to prevent against maximum call-stack issue.\r\n    for (var i = 0, chunk = 10000; i < this.data.length; i += chunk)\r\n        data = Array.prototype.concat.apply(data, this.data.slice(i, i + chunk));\r\n\r\n    this.buffer = this.buffer || gl.createBuffer();\r\n    gl.bindBuffer(this.target, this.buffer);\r\n    gl.bufferData(this.target, new this.type(data), gl.STATIC_DRAW);\r\n};\r\n\r\nmodule.exports = Buffer;\r\n","/**\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2015 Famous Industries Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n\r\n'use strict';\r\n\r\nvar INDICES = 'indices';\r\n\r\nvar Buffer = require('./Buffer');\r\n\r\n/**\r\n * BufferRegistry is a class that manages allocation of buffers to\r\n * input geometries.\r\n *\r\n * @class BufferRegistry\r\n * @constructor\r\n *\r\n * @param {WebGLContext} context WebGL drawing context to be passed to buffers.\r\n *\r\n * @return {undefined} undefined\r\n */\r\nfunction BufferRegistry(context) {\r\n    this.gl = context;\r\n\r\n    this.registry = {};\r\n    this._dynamicBuffers = [];\r\n    this._staticBuffers = [];\r\n\r\n    this._arrayBufferMax = 30000;\r\n    this._elementBufferMax = 30000;\r\n}\r\n\r\n/**\r\n * Binds and fills all the vertex data into webgl buffers.  Will reuse buffers if\r\n * possible.  Populates registry with the name of the buffer, the WebGL buffer\r\n * object, spacing of the attribute, the attribute's offset within the buffer,\r\n * and finally the length of the buffer.  This information is later accessed by\r\n * the root to draw the buffers.\r\n *\r\n * @method\r\n *\r\n * @param {Number} geometryId Id of the geometry instance that holds the buffers.\r\n * @param {String} name Key of the input buffer in the geometry.\r\n * @param {Array} value Flat array containing input data for buffer.\r\n * @param {Number} spacing The spacing, or itemSize, of the input buffer.\r\n * @param {Boolean} dynamic Boolean denoting whether a geometry is dynamic or static.\r\n *\r\n * @return {undefined} undefined\r\n */\r\nBufferRegistry.prototype.allocate = function allocate(geometryId, name, value, spacing, dynamic) {\r\n    var vertexBuffers = this.registry[geometryId] || (this.registry[geometryId] = { keys: [], values: [], spacing: [], offset: [], length: [] });\r\n\r\n    var j = vertexBuffers.keys.indexOf(name);\r\n    var isIndex = name === INDICES;\r\n    var bufferFound = false;\r\n    var newOffset;\r\n    var offset = 0;\r\n    var length;\r\n    var buffer;\r\n    var k;\r\n\r\n    if (j === -1) {\r\n        j = vertexBuffers.keys.length;\r\n        length = isIndex ? value.length : Math.floor(value.length / spacing);\r\n\r\n        if (!dynamic) {\r\n\r\n            // Use a previously created buffer if available.\r\n\r\n            for (k = 0; k < this._staticBuffers.length; k++) {\r\n\r\n                if (isIndex === this._staticBuffers[k].isIndex) {\r\n                    newOffset = this._staticBuffers[k].offset + value.length;\r\n                    if ((!isIndex && newOffset < this._arrayBufferMax) || (isIndex && newOffset < this._elementBufferMax)) {\r\n                        buffer = this._staticBuffers[k].buffer;\r\n                        offset = this._staticBuffers[k].offset;\r\n                        this._staticBuffers[k].offset += value.length;\r\n                        bufferFound = true;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Create a new static buffer in none were found.\r\n\r\n            if (!bufferFound) {\r\n                buffer = new Buffer(\r\n                    isIndex ? this.gl.ELEMENT_ARRAY_BUFFER : this.gl.ARRAY_BUFFER,\r\n                    isIndex ? Uint16Array : Float32Array,\r\n                    this.gl\r\n                );\r\n\r\n                this._staticBuffers.push({ buffer: buffer, offset: value.length, isIndex: isIndex });\r\n            }\r\n        }\r\n        else {\r\n\r\n            // For dynamic geometries, always create new buffer.\r\n\r\n            buffer = new Buffer(\r\n                isIndex ? this.gl.ELEMENT_ARRAY_BUFFER : this.gl.ARRAY_BUFFER,\r\n                isIndex ? Uint16Array : Float32Array,\r\n                this.gl\r\n            );\r\n\r\n            this._dynamicBuffers.push({ buffer: buffer, offset: value.length, isIndex: isIndex });\r\n        }\r\n\r\n        // Update the registry for the spec with buffer information.\r\n\r\n        vertexBuffers.keys.push(name);\r\n        vertexBuffers.values.push(buffer);\r\n        vertexBuffers.spacing.push(spacing);\r\n        vertexBuffers.offset.push(offset);\r\n        vertexBuffers.length.push(length);\r\n    }\r\n\r\n    var len = value.length;\r\n    for (k = 0; k < len; k++) {\r\n        vertexBuffers.values[j].data[offset + k] = value[k];\r\n    }\r\n    vertexBuffers.values[j].subData();\r\n};\r\n\r\nmodule.exports = BufferRegistry;\r\n","'use strict';\r\n\r\n/**\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2015 Famous Industries Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n\r\n/**\r\n * Takes the original rendering contexts' compiler function\r\n * and augments it with added functionality for parsing and\r\n * displaying errors.\r\n *\r\n * @method\r\n *\r\n * @returns {Function} Augmented function\r\n */\r\nfunction Debug() {\r\n    return _augmentFunction(\r\n        this.gl.compileShader,\r\n        function(shader) {\r\n            if (!this.getShaderParameter(shader, this.COMPILE_STATUS)) {\r\n                var errors = this.getShaderInfoLog(shader);\r\n                var source = this.getShaderSource(shader);\r\n                _processErrors(errors, source);\r\n            }\r\n        }\r\n    );\r\n}\r\n\r\n// Takes a function, keeps the reference and replaces it by a closure that\r\n// executes the original function and the provided callback.\r\nfunction _augmentFunction(func, callback) {\r\n    return function() {\r\n        var res = func.apply(this, arguments);\r\n        callback.apply(this, arguments);\r\n        return res;\r\n    };\r\n}\r\n\r\n// Parses errors and failed source code from shaders in order\r\n// to build displayable error blocks.\r\n// Inspired by Jaume Sanchez Elias.\r\nfunction _processErrors(errors, source) {\r\n\r\n    var css = 'body,html{background:#e3e3e3;font-family:monaco,monospace;font-size:14px;line-height:1.7em}' +\r\n              '#shaderReport{left:0;top:0;right:0;box-sizing:border-box;position:absolute;z-index:1000;color:' +\r\n              '#222;padding:15px;white-space:normal;list-style-type:none;margin:50px auto;max-width:1200px}' +\r\n              '#shaderReport li{background-color:#fff;margin:13px 0;box-shadow:0 1px 2px rgba(0,0,0,.15);' +\r\n              'padding:20px 30px;border-radius:2px;border-left:20px solid #e01111}span{color:#e01111;' +\r\n              'text-decoration:underline;font-weight:700}#shaderReport li p{padding:0;margin:0}' +\r\n              '#shaderReport li:nth-child(even){background-color:#f4f4f4}' +\r\n              '#shaderReport li p:first-child{margin-bottom:10px;color:#666}';\r\n\r\n    var el = document.createElement('style');\r\n    document.getElementsByTagName('head')[0].appendChild(el);\r\n    el.textContent = css;\r\n\r\n    var report = document.createElement('ul');\r\n    report.setAttribute('id', 'shaderReport');\r\n    document.body.appendChild(report);\r\n\r\n    var re = /ERROR: [\\d]+:([\\d]+): (.+)/gmi;\r\n    var lines = source.split('\\n');\r\n\r\n    var m;\r\n    while ((m = re.exec(errors)) != null) {\r\n        if (m.index === re.lastIndex) re.lastIndex++;\r\n        var li = document.createElement('li');\r\n        var code = '<p><span>ERROR</span> \"' + m[2] + '\" in line ' + m[1] + '</p>';\r\n        code += '<p><b>' + lines[m[1] - 1].replace(/^[ \\t]+/g, '') + '</b></p>';\r\n        li.innerHTML = code;\r\n        report.appendChild(li);\r\n    }\r\n}\r\n\r\nmodule.exports = Debug;\r\n","/**\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2015 Famous Industries Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n\r\n'use strict';\r\n\r\nvar clone = require('../utilities/clone');\r\nvar keyValueToArrays = require('../utilities/keyValueToArrays');\r\n\r\nvar vertexWrapper = require('../webgl-shaders').vertex;\r\nvar fragmentWrapper = require('../webgl-shaders').fragment;\r\nvar Debug = require('./Debug');\r\n\r\nvar VERTEX_SHADER = 35633;\r\nvar FRAGMENT_SHADER = 35632;\r\nvar identityMatrix = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\r\n\r\nvar header = 'precision mediump float;\\n';\r\n\r\nvar TYPES = {\r\n    undefined: 'float ',\r\n    1: 'float ',\r\n    2: 'vec2 ',\r\n    3: 'vec3 ',\r\n    4: 'vec4 ',\r\n    16: 'mat4 '\r\n};\r\n\r\nvar inputTypes = {\r\n    u_baseColor: 'vec4',\r\n    u_normals: 'vert',\r\n    u_glossiness: 'vec4',\r\n    u_positionOffset: 'vert'\r\n};\r\n\r\nvar masks =  {\r\n    vert: 1,\r\n    vec3: 2,\r\n    vec4: 4,\r\n    float: 8\r\n};\r\n\r\n/**\r\n * Uniform keys and values\r\n */\r\nvar uniforms = keyValueToArrays({\r\n    u_perspective: identityMatrix,\r\n    u_view: identityMatrix,\r\n    u_resolution: [0, 0, 0],\r\n    u_transform: identityMatrix,\r\n    u_size: [1, 1, 1],\r\n    u_time: 0,\r\n    u_opacity: 1,\r\n    u_metalness: 0,\r\n    u_glossiness: [0, 0, 0, 0],\r\n    u_baseColor: [1, 1, 1, 1],\r\n    u_normals: [1, 1, 1],\r\n    u_positionOffset: [0, 0, 0],\r\n    u_lightPosition: identityMatrix,\r\n    u_lightColor: identityMatrix,\r\n    u_ambientLight: [0, 0, 0],\r\n    u_flatShading: 0,\r\n    u_numLights: 0\r\n});\r\n\r\n/**\r\n * Attributes keys and values\r\n */\r\nvar attributes = keyValueToArrays({\r\n    a_pos: [0, 0, 0],\r\n    a_texCoord: [0, 0],\r\n    a_normals: [0, 0, 0]\r\n});\r\n\r\n/**\r\n * Varyings keys and values\r\n */\r\nvar varyings = keyValueToArrays({\r\n    v_textureCoordinate: [0, 0],\r\n    v_normal: [0, 0, 0],\r\n    v_position: [0, 0, 0],\r\n    v_eyeVector: [0, 0, 0]\r\n});\r\n\r\n/**\r\n * A class that handles interactions with the WebGL shader program\r\n * used by a specific context.  It manages creation of the shader program\r\n * and the attached vertex and fragment shaders.  It is also in charge of\r\n * passing all uniforms to the WebGLContext.\r\n *\r\n * @class Program\r\n * @constructor\r\n *\r\n * @param {WebGL_Context} gl Context to be used to create the shader program\r\n * @param {Object} options Program options\r\n *\r\n * @return {undefined} undefined\r\n */\r\nfunction Program(gl, options) {\r\n    this.gl = gl;\r\n    this.options = options || {};\r\n\r\n    this.registeredMaterials = {};\r\n    this.cachedUniforms = {};\r\n    this.uniformTypes = [];\r\n\r\n    this.definitionVec4 = [];\r\n    this.definitionVec3 = [];\r\n    this.definitionFloat = [];\r\n    this.applicationVec3 = [];\r\n    this.applicationVec4 = [];\r\n    this.applicationFloat = [];\r\n    this.applicationVert = [];\r\n    this.definitionVert = [];\r\n\r\n    if (this.options.debug) {\r\n        this.gl.compileShader = Debug.call(this);\r\n    }\r\n\r\n    this.resetProgram();\r\n}\r\n\r\n/**\r\n * Determines whether a material has already been registered to\r\n * the shader program.\r\n *\r\n * @method\r\n *\r\n * @param {String} name Name of target input of material.\r\n * @param {Object} material Compiled material object being verified.\r\n *\r\n * @return {Program} this Current program.\r\n */\r\nProgram.prototype.registerMaterial = function registerMaterial(name, material) {\r\n    var compiled = material;\r\n    var type = inputTypes[name];\r\n    var mask = masks[type];\r\n\r\n    if ((this.registeredMaterials[material._id] & mask) === mask) return this;\r\n\r\n    var k;\r\n\r\n    for (k in compiled.uniforms) {\r\n        if (uniforms.keys.indexOf(k) === -1) {\r\n            uniforms.keys.push(k);\r\n            uniforms.values.push(compiled.uniforms[k]);\r\n        }\r\n    }\r\n\r\n    for (k in compiled.varyings) {\r\n        if (varyings.keys.indexOf(k) === -1) {\r\n            varyings.keys.push(k);\r\n            varyings.values.push(compiled.varyings[k]);\r\n        }\r\n    }\r\n\r\n    for (k in compiled.attributes) {\r\n        if (attributes.keys.indexOf(k) === -1) {\r\n            attributes.keys.push(k);\r\n            attributes.values.push(compiled.attributes[k]);\r\n        }\r\n    }\r\n\r\n    this.registeredMaterials[material._id] |= mask;\r\n\r\n    if (type === 'float') {\r\n        this.definitionFloat.push(material.defines);\r\n        this.definitionFloat.push('float fa_' + material._id + '() {\\n '  + compiled.glsl + ' \\n}');\r\n        this.applicationFloat.push('if (int(abs(ID)) == ' + material._id + ') return fa_' + material._id  + '();');\r\n    }\r\n\r\n    if (type === 'vec3') {\r\n        this.definitionVec3.push(material.defines);\r\n        this.definitionVec3.push('vec3 fa_' + material._id + '() {\\n '  + compiled.glsl + ' \\n}');\r\n        this.applicationVec3.push('if (int(abs(ID.x)) == ' + material._id + ') return fa_' + material._id + '();');\r\n    }\r\n\r\n    if (type === 'vec4') {\r\n        this.definitionVec4.push(material.defines);\r\n        this.definitionVec4.push('vec4 fa_' + material._id + '() {\\n '  + compiled.glsl + ' \\n}');\r\n        this.applicationVec4.push('if (int(abs(ID.x)) == ' + material._id + ') return fa_' + material._id + '();');\r\n    }\r\n\r\n    if (type === 'vert') {\r\n        this.definitionVert.push(material.defines);\r\n        this.definitionVert.push('vec3 fa_' + material._id + '() {\\n '  + compiled.glsl + ' \\n}');\r\n        this.applicationVert.push('if (int(abs(ID.x)) == ' + material._id + ') return fa_' + material._id + '();');\r\n    }\r\n\r\n    return this.resetProgram();\r\n};\r\n\r\n/**\r\n * Clears all cached uniforms and attribute locations.  Assembles\r\n * new fragment and vertex shaders and based on material from\r\n * currently registered materials.  Attaches said shaders to new\r\n * shader program and upon success links program to the WebGL\r\n * context.\r\n *\r\n * @method\r\n *\r\n * @return {Program} Current program.\r\n */\r\nProgram.prototype.resetProgram = function resetProgram() {\r\n    var vertexHeader = [header];\r\n    var fragmentHeader = [header];\r\n\r\n    var fragmentSource;\r\n    var vertexSource;\r\n    var program;\r\n    var name;\r\n    var value;\r\n    var i;\r\n\r\n    this.uniformLocations   = [];\r\n    this.attributeLocations = {};\r\n\r\n    this.uniformTypes = {};\r\n\r\n    this.attributeNames = clone(attributes.keys);\r\n    this.attributeValues = clone(attributes.values);\r\n\r\n    this.varyingNames = clone(varyings.keys);\r\n    this.varyingValues = clone(varyings.values);\r\n\r\n    this.uniformNames = clone(uniforms.keys);\r\n    this.uniformValues = clone(uniforms.values);\r\n\r\n    this.cachedUniforms = {};\r\n\r\n    fragmentHeader.push('uniform sampler2D u_textures[7];\\n');\r\n\r\n    if (this.applicationVert.length) {\r\n        vertexHeader.push('uniform sampler2D u_textures[7];\\n');\r\n    }\r\n\r\n    for(i = 0; i < this.uniformNames.length; i++) {\r\n        name = this.uniformNames[i];\r\n        value = this.uniformValues[i];\r\n        vertexHeader.push('uniform ' + TYPES[value.length] + name + ';\\n');\r\n        fragmentHeader.push('uniform ' + TYPES[value.length] + name + ';\\n');\r\n    }\r\n\r\n    for(i = 0; i < this.attributeNames.length; i++) {\r\n        name = this.attributeNames[i];\r\n        value = this.attributeValues[i];\r\n        vertexHeader.push('attribute ' + TYPES[value.length] + name + ';\\n');\r\n    }\r\n\r\n    for(i = 0; i < this.varyingNames.length; i++) {\r\n        name = this.varyingNames[i];\r\n        value = this.varyingValues[i];\r\n        vertexHeader.push('varying ' + TYPES[value.length]  + name + ';\\n');\r\n        fragmentHeader.push('varying ' + TYPES[value.length] + name + ';\\n');\r\n    }\r\n\r\n    vertexSource = vertexHeader.join('') + vertexWrapper\r\n        .replace('#vert_definitions', this.definitionVert.join('\\n'))\r\n        .replace('#vert_applications', this.applicationVert.join('\\n'));\r\n\r\n    fragmentSource = fragmentHeader.join('') + fragmentWrapper\r\n        .replace('#vec3_definitions', this.definitionVec3.join('\\n'))\r\n        .replace('#vec3_applications', this.applicationVec3.join('\\n'))\r\n        .replace('#vec4_definitions', this.definitionVec4.join('\\n'))\r\n        .replace('#vec4_applications', this.applicationVec4.join('\\n'))\r\n        .replace('#float_definitions', this.definitionFloat.join('\\n'))\r\n        .replace('#float_applications', this.applicationFloat.join('\\n'));\r\n\r\n    program = this.gl.createProgram();\r\n\r\n    this.gl.attachShader(\r\n        program,\r\n        this.compileShader(this.gl.createShader(VERTEX_SHADER), vertexSource)\r\n    );\r\n\r\n    this.gl.attachShader(\r\n        program,\r\n        this.compileShader(this.gl.createShader(FRAGMENT_SHADER), fragmentSource)\r\n    );\r\n\r\n    this.gl.linkProgram(program);\r\n\r\n    if (! this.gl.getProgramParameter(program, this.gl.LINK_STATUS)) {\r\n        console.error('link error: ' + this.gl.getProgramInfoLog(program));\r\n        this.program = null;\r\n    }\r\n    else {\r\n        this.program = program;\r\n        this.gl.useProgram(this.program);\r\n    }\r\n\r\n    this.setUniforms(this.uniformNames, this.uniformValues);\r\n\r\n    var textureLocation = this.gl.getUniformLocation(this.program, 'u_textures[0]');\r\n    this.gl.uniform1iv(textureLocation, [0, 1, 2, 3, 4, 5, 6]);\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * Compares the value of the input uniform value against\r\n * the cached value stored on the Program class.  Updates and\r\n * creates new entries in the cache when necessary.\r\n *\r\n * @method\r\n * @param {String} targetName Key of uniform spec being evaluated.\r\n * @param {Number|Array} value Value of uniform spec being evaluated.\r\n *\r\n * @return {Boolean} boolean Indicating whether the uniform being set is cached.\r\n */\r\nProgram.prototype.uniformIsCached = function(targetName, value) {\r\n    if(this.cachedUniforms[targetName] == null) {\r\n        if (value.length) {\r\n            this.cachedUniforms[targetName] = new Float32Array(value);\r\n        }\r\n        else {\r\n            this.cachedUniforms[targetName] = value;\r\n        }\r\n        return false;\r\n    }\r\n    else if (value.length) {\r\n        var i = value.length;\r\n        while (i--) {\r\n            if(value[i] !== this.cachedUniforms[targetName][i]) {\r\n                i = value.length;\r\n                while(i--) this.cachedUniforms[targetName][i] = value[i];\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n\r\n    else if (this.cachedUniforms[targetName] !== value) {\r\n        this.cachedUniforms[targetName] = value;\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n};\r\n\r\n/**\r\n * Handles all passing of uniforms to WebGL drawing context.  This\r\n * function will find the uniform location and then, based on\r\n * a type inferred from the javascript value of the uniform, it will call\r\n * the appropriate function to pass the uniform to WebGL.  Finally,\r\n * setUniforms will iterate through the passed in shaderChunks (if any)\r\n * and set the appropriate uniforms to specify which chunks to use.\r\n *\r\n * @method\r\n * @param {Array} uniformNames Array containing the keys of all uniforms to be set.\r\n * @param {Array} uniformValue Array containing the values of all uniforms to be set.\r\n *\r\n * @return {Program} Current program.\r\n */\r\nProgram.prototype.setUniforms = function (uniformNames, uniformValue) {\r\n    var gl = this.gl;\r\n    var location;\r\n    var value;\r\n    var name;\r\n    var len;\r\n    var i;\r\n\r\n    if (!this.program) return this;\r\n\r\n    len = uniformNames.length;\r\n    for (i = 0; i < len; i++) {\r\n        name = uniformNames[i];\r\n        value = uniformValue[i];\r\n\r\n        // Retreive the cached location of the uniform,\r\n        // requesting a new location from the WebGL context\r\n        // if it does not yet exist.\r\n\r\n        location = this.uniformLocations[name];\r\n\r\n        if (location === null) continue;\r\n        if (location === undefined) {\r\n            location = gl.getUniformLocation(this.program, name);\r\n            this.uniformLocations[name] = location;\r\n        }\r\n\r\n        // Check if the value is already set for the\r\n        // given uniform.\r\n        if (this.uniformIsCached(name, value)) continue;\r\n\r\n        // Determine the correct function and pass the uniform\r\n        // value to WebGL.\r\n        if (!this.uniformTypes[name]) {\r\n            this.uniformTypes[name] = this.getUniformTypeFromValue(value);\r\n        }\r\n\r\n        // Call uniform setter function on WebGL context with correct value\r\n\r\n        switch (this.uniformTypes[name]) {\r\n            case 'uniform4fv': gl.uniform4fv(location, value); break;\r\n            case 'uniform3fv': gl.uniform3fv(location, value); break;\r\n            case 'uniform2fv': gl.uniform2fv(location, value); break;\r\n            case 'uniform1fv': gl.uniform1fv(location, value); break;\r\n            case 'uniform1f' : gl.uniform1f(location, value); break;\r\n            case 'uniformMatrix3fv': gl.uniformMatrix3fv(location, false, value); break;\r\n            case 'uniformMatrix4fv': gl.uniformMatrix4fv(location, false, value); break;\r\n        }\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * Infers uniform setter function to be called on the WebGL context, based\r\n * on an input value.\r\n *\r\n * @method\r\n *\r\n * @param {Number|Array} value Value from which uniform type is inferred.\r\n *\r\n * @return {String} Name of uniform function for given value.\r\n */\r\nProgram.prototype.getUniformTypeFromValue = function getUniformTypeFromValue(value) {\r\n    if (Array.isArray(value) || value instanceof Float32Array) {\r\n        switch (value.length) {\r\n            case 1:  return 'uniform1fv';\r\n            case 2:  return 'uniform2fv';\r\n            case 3:  return 'uniform3fv';\r\n            case 4:  return 'uniform4fv';\r\n            case 9:  return 'uniformMatrix3fv';\r\n            case 16: return 'uniformMatrix4fv';\r\n        }\r\n    }\r\n    else if (!isNaN(parseFloat(value)) && isFinite(value)) {\r\n        return 'uniform1f';\r\n    }\r\n\r\n    throw 'cant load uniform \"' + name + '\" with value:' + JSON.stringify(value);\r\n};\r\n\r\n/**\r\n * Adds shader source to shader and compiles the input shader.  Checks\r\n * compile status and logs error if necessary.\r\n *\r\n * @method\r\n *\r\n * @param {Object} shader Program to be compiled.\r\n * @param {String} source Source to be used in the shader.\r\n *\r\n * @return {Object} Compiled shader.\r\n */\r\nProgram.prototype.compileShader = function compileShader(shader, source) {\r\n    var i = 1;\r\n\r\n    this.gl.shaderSource(shader, source);\r\n    this.gl.compileShader(shader);\r\n    if (!this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS)) {\r\n        console.error('compile error: ' + this.gl.getShaderInfoLog(shader));\r\n        console.error('1: ' + source.replace(/\\n/g, function () {\r\n            return '\\n' + (i+=1) + ': ';\r\n        }));\r\n    }\r\n\r\n    return shader;\r\n};\r\n\r\nmodule.exports = Program;\r\n","/**\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2015 Famous Industries Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n\r\n'use strict';\r\n\r\n/**\r\n * Texture is a private class that stores image data\r\n * to be accessed from a shader or used as a render target.\r\n *\r\n * @class Texture\r\n * @constructor\r\n *\r\n * @param {GL} gl GL\r\n * @param {Object} options Options\r\n *\r\n * @return {undefined} undefined\r\n */\r\nfunction Texture(gl, options) {\r\n    options = options || {};\r\n    this.id = gl.createTexture();\r\n    this.width = options.width || 0;\r\n    this.height = options.height || 0;\r\n    this.mipmap = options.mipmap;\r\n    this.format = options.format || 'RGBA';\r\n    this.type = options.type || 'UNSIGNED_BYTE';\r\n    this.gl = gl;\r\n\r\n    this.bind();\r\n\r\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, options.flipYWebgl || false);\r\n    gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, options.premultiplyAlphaWebgl || false);\r\n\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl[options.magFilter] || gl.NEAREST);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl[options.minFilter] || gl.NEAREST);\r\n\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl[options.wrapS] || gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl[options.wrapT] || gl.CLAMP_TO_EDGE);\r\n}\r\n\r\n/**\r\n * Binds this texture as the selected target.\r\n *\r\n * @method\r\n * @return {Object} Current texture instance.\r\n */\r\nTexture.prototype.bind = function bind() {\r\n    this.gl.bindTexture(this.gl.TEXTURE_2D, this.id);\r\n    return this;\r\n};\r\n\r\n/**\r\n * Erases the texture data in the given texture slot.\r\n *\r\n * @method\r\n * @return {Object} Current texture instance.\r\n */\r\nTexture.prototype.unbind = function unbind() {\r\n    this.gl.bindTexture(this.gl.TEXTURE_2D, null);\r\n    return this;\r\n};\r\n\r\n/**\r\n * Replaces the image data in the texture with the given image.\r\n *\r\n * @method\r\n *\r\n * @param {Image}   img     The image object to upload pixel data from.\r\n * @return {Object}         Current texture instance.\r\n */\r\nTexture.prototype.setImage = function setImage(img) {\r\n    this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl[this.format], this.gl[this.format], this.gl[this.type], img);\r\n    if (this.mipmap) this.gl.generateMipmap(this.gl.TEXTURE_2D);\r\n    return this;\r\n};\r\n\r\n/**\r\n * Replaces the image data in the texture with an array of arbitrary data.\r\n *\r\n * @method\r\n *\r\n * @param {Array}   input   Array to be set as data to texture.\r\n * @return {Object}         Current texture instance.\r\n */\r\nTexture.prototype.setArray = function setArray(input) {\r\n    this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl[this.format], this.width, this.height, 0, this.gl[this.format], this.gl[this.type], input);\r\n    return this;\r\n};\r\n\r\n/**\r\n * Dumps the rgb-pixel contents of a texture into an array for debugging purposes\r\n *\r\n * @method\r\n *\r\n * @param {Number} x        x-offset between texture coordinates and snapshot\r\n * @param {Number} y        y-offset between texture coordinates and snapshot\r\n * @param {Number} width    x-depth of the snapshot\r\n * @param {Number} height   y-depth of the snapshot\r\n *\r\n * @return {Array}          An array of the pixels contained in the snapshot.\r\n */\r\nTexture.prototype.readBack = function readBack(x, y, width, height) {\r\n    var gl = this.gl;\r\n    var pixels;\r\n    x = x || 0;\r\n    y = y || 0;\r\n    width = width || this.width;\r\n    height = height || this.height;\r\n    var fb = gl.createFramebuffer();\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, fb);\r\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.id, 0);\r\n    if (gl.checkFramebufferStatus(gl.FRAMEBUFFER) === gl.FRAMEBUFFER_COMPLETE) {\r\n        pixels = new Uint8Array(width * height * 4);\r\n        gl.readPixels(x, y, width, height, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\r\n    }\r\n    return pixels;\r\n};\r\n\r\nmodule.exports = Texture;\r\n","/**\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2015 Famous Industries Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n'use strict';\r\n\r\nvar Texture = require('./Texture');\r\nvar createCheckerboard = require('./createCheckerboard');\r\n\r\n/**\r\n * Handles loading, binding, and resampling of textures for WebGLRenderer.\r\n *\r\n * @class TextureManager\r\n * @constructor\r\n *\r\n * @param {WebGL_Context} gl Context used to create and bind textures.\r\n *\r\n * @return {undefined} undefined\r\n */\r\nfunction TextureManager(gl) {\r\n    this.registry = [];\r\n    this._needsResample = [];\r\n\r\n    this._activeTexture = 0;\r\n    this._boundTexture = null;\r\n\r\n    this._checkerboard = createCheckerboard();\r\n\r\n    this.gl = gl;\r\n}\r\n\r\n/**\r\n * Update function used by WebGLRenderer to queue resamples on\r\n * registered textures.\r\n *\r\n * @method\r\n *\r\n * @param {Number}      time    Time in milliseconds according to the compositor.\r\n * @return {undefined}          undefined\r\n */\r\nTextureManager.prototype.update = function update(time) {\r\n    var registryLength = this.registry.length;\r\n\r\n    for (var i = 1; i < registryLength; i++) {\r\n        var texture = this.registry[i];\r\n\r\n        if (texture && texture.isLoaded && texture.resampleRate) {\r\n            if (!texture.lastResample || time - texture.lastResample > texture.resampleRate) {\r\n                if (!this._needsResample[texture.id]) {\r\n                    this._needsResample[texture.id] = true;\r\n                    texture.lastResample = time;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Creates a spec and creates a texture based on given texture data.\r\n * Handles loading assets if necessary.\r\n *\r\n * @method\r\n *\r\n * @param {Object}  input   Object containing texture id, texture data\r\n *                          and options used to draw texture.\r\n * @param {Number}  slot    Texture slot to bind generated texture to.\r\n * @return {undefined}      undefined\r\n */\r\nTextureManager.prototype.register = function register(input, slot) {\r\n    var _this = this;\r\n\r\n    var source = input.data;\r\n    var textureId = input.id;\r\n    var options = input.options || {};\r\n    var texture = this.registry[textureId];\r\n    var spec;\r\n\r\n    if (!texture) {\r\n\r\n        texture = new Texture(this.gl, options);\r\n        texture.setImage(this._checkerboard);\r\n\r\n        // Add texture to registry\r\n\r\n        spec = this.registry[textureId] = {\r\n            resampleRate: options.resampleRate || null,\r\n            lastResample: null,\r\n            isLoaded: false,\r\n            texture: texture,\r\n            source: source,\r\n            id: textureId,\r\n            slot: slot\r\n        };\r\n\r\n        // Handle array\r\n\r\n        if (Array.isArray(source) || source instanceof Uint8Array || source instanceof Float32Array) {\r\n            this.bindTexture(textureId);\r\n            texture.setArray(source);\r\n            spec.isLoaded = true;\r\n        }\r\n\r\n        // Handle video\r\n\r\n        else if (source instanceof HTMLVideoElement) {\r\n            source.addEventListener('loadeddata', function() {\r\n                _this.bindTexture(textureId);\r\n                texture.setImage(source);\r\n\r\n                spec.isLoaded = true;\r\n                spec.source = source;\r\n            });\r\n        }\r\n\r\n        // Handle image url\r\n\r\n        else if (typeof source === 'string') {\r\n            loadImage(source, function (img) {\r\n                _this.bindTexture(textureId);\r\n                texture.setImage(img);\r\n\r\n                spec.isLoaded = true;\r\n                spec.source = img;\r\n            });\r\n        }\r\n    }\r\n\r\n    return textureId;\r\n};\r\n\r\n/**\r\n * Loads an image from a string or Image object and executes a callback function.\r\n *\r\n * @method\r\n * @private\r\n *\r\n * @param {Object|String} input The input image data to load as an asset.\r\n * @param {Function} callback The callback function to be fired when the image has finished loading.\r\n *\r\n * @return {Object} Image object being loaded.\r\n */\r\nfunction loadImage (input, callback) {\r\n    var image = (typeof input === 'string' ? new Image() : input) || {};\r\n        image.crossOrigin = 'anonymous';\r\n\r\n    if (!image.src) image.src = input;\r\n    if (!image.complete) {\r\n        image.onload = function () {\r\n            callback(image);\r\n        };\r\n    }\r\n    else {\r\n        callback(image);\r\n    }\r\n\r\n    return image;\r\n}\r\n\r\n/**\r\n * Sets active texture slot and binds target texture.  Also handles\r\n * resampling when necessary.\r\n *\r\n * @method\r\n *\r\n * @param {Number} id Identifier used to retreive texture spec\r\n *\r\n * @return {undefined} undefined\r\n */\r\nTextureManager.prototype.bindTexture = function bindTexture(id) {\r\n    var spec = this.registry[id];\r\n\r\n    if (this._activeTexture !== spec.slot) {\r\n        this.gl.activeTexture(this.gl.TEXTURE0 + spec.slot);\r\n        this._activeTexture = spec.slot;\r\n    }\r\n\r\n    if (this._boundTexture !== id) {\r\n        this._boundTexture = id;\r\n        spec.texture.bind();\r\n    }\r\n\r\n    if (this._needsResample[spec.id]) {\r\n\r\n        // TODO: Account for resampling of arrays.\r\n\r\n        spec.texture.setImage(spec.source);\r\n        this._needsResample[spec.id] = false;\r\n    }\r\n};\r\n\r\nmodule.exports = TextureManager;\r\n","/**\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2015 Famous Industries Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n\r\n'use strict';\r\n\r\nvar Program = require('./Program');\r\nvar BufferRegistry = require('./BufferRegistry');\r\nvar sorter = require('./radixSort');\r\nvar keyValueToArrays = require('../utilities/keyValueToArrays');\r\nvar TextureManager = require('./TextureManager');\r\nvar compileMaterial = require('./compileMaterial');\r\nvar Registry = require('../utilities/Registry');\r\n\r\nvar identity = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\r\n\r\nvar globalUniforms = keyValueToArrays({\r\n    'u_numLights': 0,\r\n    'u_ambientLight': new Array(3),\r\n    'u_lightPosition': new Array(3),\r\n    'u_lightColor': new Array(3),\r\n    'u_perspective': new Array(16),\r\n    'u_time': 0,\r\n    'u_view': new Array(16)\r\n});\r\n\r\n/**\r\n * WebGLRenderer is a private class that manages all interactions with the WebGL\r\n * API. Each frame it receives commands from the compositor and updates its\r\n * registries accordingly. Subsequently, the draw function is called and the\r\n * WebGLRenderer issues draw calls for all meshes in its registry.\r\n *\r\n * @class WebGLRenderer\r\n * @constructor\r\n *\r\n * @param {Element} canvas The DOM element that GL will paint itself onto.\r\n * @param {Compositor} compositor Compositor used for querying the time from.\r\n *\r\n * @return {undefined} undefined\r\n */\r\nfunction WebGLRenderer(canvas, compositor) {\r\n    canvas.classList.add('famous-webgl-renderer');\r\n\r\n    this.canvas = canvas;\r\n    this.compositor = compositor;\r\n\r\n    var gl = this.gl = this.getWebGLContext(this.canvas);\r\n\r\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\r\n    gl.polygonOffset(0.1, 0.1);\r\n    gl.enable(gl.POLYGON_OFFSET_FILL);\r\n    gl.enable(gl.DEPTH_TEST);\r\n    gl.enable(gl.BLEND);\r\n    gl.depthFunc(gl.LEQUAL);\r\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\r\n    gl.enable(gl.CULL_FACE);\r\n    gl.cullFace(gl.BACK);\r\n\r\n    this.meshRegistry = new Registry();\r\n    this.cutoutRegistry = new Registry();\r\n    this.lightRegistry = new Registry();\r\n\r\n    this.numLights = 0;\r\n    this.ambientLightColor = [0, 0, 0];\r\n    this.lightPositions = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n    this.lightColors = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n\r\n    this.textureManager = new TextureManager(gl);\r\n    this.bufferRegistry = new BufferRegistry(gl);\r\n    this.program = new Program(gl, { debug: true });\r\n\r\n    this.state = {\r\n        boundArrayBuffer: null,\r\n        boundElementBuffer: null,\r\n        lastDrawn: null,\r\n        enabledAttributes: {},\r\n        enabledAttributesKeys: []\r\n    };\r\n\r\n    this.resolutionName = ['u_resolution'];\r\n    this.resolutionValues = [[0, 0, 0]];\r\n\r\n    this.cachedSize = [];\r\n\r\n    /*\r\n    The projectionTransform has some constant components, i.e. the z scale, and the x and y translation.\r\n\r\n    The z scale keeps the final z position of any vertex within the clip's domain by scaling it by an\r\n    arbitrarily small coefficient. This has the advantage of being a useful default in the event of the\r\n    user forgoing a near and far plane, an alien convention in dom space as in DOM overlapping is\r\n    conducted via painter's algorithm.\r\n\r\n    The x and y translation transforms the world space origin to the top left corner of the screen.\r\n\r\n    The final component (this.projectionTransform[15]) is initialized as 1 because certain projection models,\r\n    e.g. the WC3 specified model, keep the XY plane as the projection hyperplane.\r\n    */\r\n    this.projectionTransform = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, -0.000001, 0, -1, 1, 0, 1];\r\n\r\n    // TODO: remove this hack\r\n\r\n    var cutout = this.cutoutGeometry = {\r\n        spec: {\r\n            id: -1,\r\n            bufferValues: [[-1, -1, 0, 1, -1, 0, -1, 1, 0, 1, 1, 0]],\r\n            bufferNames: ['a_pos'],\r\n            type: 'TRIANGLE_STRIP'\r\n        }\r\n    };\r\n\r\n    this.bufferRegistry.allocate(\r\n        this.cutoutGeometry.spec.id,\r\n        cutout.spec.bufferNames[0],\r\n        cutout.spec.bufferValues[0],\r\n        3\r\n    );\r\n}\r\n\r\n/**\r\n * Attempts to retreive the WebGLRenderer context using several\r\n * accessors. For browser compatability. Throws on error.\r\n *\r\n * @method\r\n *\r\n * @param {Object} canvas Canvas element from which the context is retreived\r\n *\r\n * @return {Object} WebGLContext WebGL context\r\n */\r\nWebGLRenderer.prototype.getWebGLContext = function getWebGLContext(canvas) {\r\n    var names = ['webgl', 'experimental-webgl', 'webkit-3d', 'moz-webgl'];\r\n    var context;\r\n\r\n    for (var i = 0, len = names.length; i < len; i++) {\r\n        try {\r\n            context = canvas.getContext(names[i]);\r\n        }\r\n        catch (error) {\r\n            console.error('Error creating WebGL context: ' + error.toString());\r\n        }\r\n        if (context) return context;\r\n    }\r\n\r\n    if (!context) {\r\n        console.error('Could not retrieve WebGL context. Please refer to https://www.khronos.org/webgl/ for requirements');\r\n        return false;\r\n    }\r\n\r\n};\r\n\r\n/**\r\n * Adds a new base spec to the light registry at a given path.\r\n *\r\n * @method\r\n *\r\n * @param {String} path Path used as id of new light in lightRegistry\r\n *\r\n * @return {Object} Newly created light spec\r\n */\r\nWebGLRenderer.prototype.createLight = function createLight(path) {\r\n    this.numLights++;\r\n    var light = {\r\n        color: [0, 0, 0],\r\n        position: [0, 0, 0]\r\n    };\r\n    this.lightRegistry.register(path, light);\r\n    return light;\r\n};\r\n\r\n/**\r\n * Adds a new base spec to the mesh registry at a given path.\r\n *\r\n * @method\r\n *\r\n * @param {String} path Path used as id of new mesh in meshRegistry.\r\n *\r\n * @return {Object} Newly created mesh spec.\r\n */\r\nWebGLRenderer.prototype.createMesh = function createMesh(path) {\r\n    var uniforms = keyValueToArrays({\r\n        u_opacity: 1,\r\n        u_transform: identity,\r\n        u_size: [0, 0, 0],\r\n        u_baseColor: [0.5, 0.5, 0.5, 1],\r\n        u_positionOffset: [0, 0, 0],\r\n        u_normals: [0, 0, 0],\r\n        u_flatShading: 0,\r\n        u_glossiness: [0, 0, 0, 0]\r\n    });\r\n    var mesh = {\r\n        depth: null,\r\n        uniformKeys: uniforms.keys,\r\n        uniformValues: uniforms.values,\r\n        buffers: {},\r\n        geometry: null,\r\n        drawType: null,\r\n        textures: [],\r\n        visible: true\r\n    };\r\n\r\n    this.meshRegistry.register(path, mesh);\r\n    return mesh;\r\n};\r\n\r\n/**\r\n * Sets flag on indicating whether to do skip draw phase for\r\n * cutout mesh at given path.\r\n *\r\n * @method\r\n *\r\n * @param {String} path Path used as id of target cutout mesh.\r\n * @param {Boolean} usesCutout Indicates the presence of a cutout mesh\r\n *\r\n * @return {undefined} undefined\r\n */\r\nWebGLRenderer.prototype.setCutoutState = function setCutoutState(path, usesCutout) {\r\n    var cutout = this.getOrSetCutout(path);\r\n\r\n    cutout.visible = usesCutout;\r\n};\r\n\r\n/**\r\n * Creates or retreives cutout\r\n *\r\n * @method\r\n *\r\n * @param {String} path Path used as id of target cutout mesh.\r\n *\r\n * @return {Object} Newly created cutout spec.\r\n */\r\nWebGLRenderer.prototype.getOrSetCutout = function getOrSetCutout(path) {\r\n    var cutout = this.cutoutRegistry.get(path);\r\n\r\n    if (!cutout) {\r\n        var uniforms = keyValueToArrays({\r\n            u_opacity: 0,\r\n            u_transform: identity.slice(),\r\n            u_size: [0, 0, 0],\r\n            u_origin: [0, 0, 0],\r\n            u_baseColor: [0, 0, 0, 1]\r\n        });\r\n\r\n        cutout = {\r\n            uniformKeys: uniforms.keys,\r\n            uniformValues: uniforms.values,\r\n            geometry: this.cutoutGeometry.spec.id,\r\n            drawType: this.cutoutGeometry.spec.type,\r\n            visible: true\r\n        };\r\n\r\n        this.cutoutRegistry.register(path, cutout);\r\n    }\r\n\r\n    return cutout;\r\n};\r\n\r\n/**\r\n * Sets flag on indicating whether to do skip draw phase for\r\n * mesh at given path.\r\n *\r\n * @method\r\n * @param {String} path Path used as id of target mesh.\r\n * @param {Boolean} visibility Indicates the visibility of target mesh.\r\n *\r\n * @return {undefined} undefined\r\n */\r\nWebGLRenderer.prototype.setMeshVisibility = function setMeshVisibility(path, visibility) {\r\n    var mesh = this.meshRegistry.get(path) || this.createMesh(path);\r\n\r\n    mesh.visible = visibility;\r\n};\r\n\r\n/**\r\n * Deletes a mesh from the meshRegistry.\r\n *\r\n * @method\r\n * @param {String} path Path used as id of target mesh.\r\n *\r\n * @return {undefined} undefined\r\n */\r\nWebGLRenderer.prototype.removeMesh = function removeMesh(path) {\r\n    this.meshRegistry.unregister(path);\r\n};\r\n\r\n/**\r\n * Creates or retreives cutout\r\n *\r\n * @method\r\n * @param {String} path Path used as id of cutout in cutout registry.\r\n * @param {String} uniformName Identifier used to upload value\r\n * @param {Array} uniformValue Value of uniform data\r\n *\r\n * @return {undefined} undefined\r\n */\r\nWebGLRenderer.prototype.setCutoutUniform = function setCutoutUniform(path, uniformName, uniformValue) {\r\n    var cutout = this.getOrSetCutout(path);\r\n\r\n    var index = cutout.uniformKeys.indexOf(uniformName);\r\n\r\n    if (uniformValue.length) {\r\n        for (var i = 0, len = uniformValue.length; i < len; i++) {\r\n            cutout.uniformValues[index][i] = uniformValue[i];\r\n        }\r\n    }\r\n    else {\r\n        cutout.uniformValues[index] = uniformValue;\r\n    }\r\n};\r\n\r\n/**\r\n * Edits the options field on a mesh\r\n *\r\n * @method\r\n * @param {String} path Path used as id of target mesh\r\n * @param {Object} options Map of draw options for mesh\r\n *\r\n * @return {WebGLRenderer} this\r\n */\r\nWebGLRenderer.prototype.setMeshOptions = function(path, options) {\r\n    var mesh = this.meshRegistry.get(path) || this.createMesh(path);\r\n\r\n    mesh.options = options;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Changes the color of the fixed intensity lighting in the scene\r\n *\r\n * @method\r\n *\r\n * @param {String} path Path used as id of light\r\n * @param {Number} r red channel\r\n * @param {Number} g green channel\r\n * @param {Number} b blue channel\r\n *\r\n * @return {WebGLRenderer} this\r\n */\r\nWebGLRenderer.prototype.setAmbientLightColor = function setAmbientLightColor(path, r, g, b) {\r\n    this.ambientLightColor[0] = r;\r\n    this.ambientLightColor[1] = g;\r\n    this.ambientLightColor[2] = b;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Changes the location of the light in the scene\r\n *\r\n * @method\r\n *\r\n * @param {String} path Path used as id of light\r\n * @param {Number} x x position\r\n * @param {Number} y y position\r\n * @param {Number} z z position\r\n *\r\n * @return {WebGLRenderer} this\r\n */\r\nWebGLRenderer.prototype.setLightPosition = function setLightPosition(path, x, y, z) {\r\n    var light = this.lightRegistry.get(path) || this.createLight(path);\r\n    light.position[0] = x;\r\n    light.position[1] = y;\r\n    light.position[2] = z;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Changes the color of a dynamic intensity lighting in the scene\r\n *\r\n * @method\r\n *\r\n * @param {String} path Path used as id of light in light Registry.\r\n * @param {Number} r red channel\r\n * @param {Number} g green channel\r\n * @param {Number} b blue channel\r\n *\r\n * @return {WebGLRenderer} this\r\n */\r\nWebGLRenderer.prototype.setLightColor = function setLightColor(path, r, g, b) {\r\n    var light = this.lightRegistry.get(path) || this.createLight(path);\r\n\r\n    light.color[0] = r;\r\n    light.color[1] = g;\r\n    light.color[2] = b;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Compiles material spec into program shader\r\n *\r\n * @method\r\n *\r\n * @param {String} path Path used as id of cutout in cutout registry.\r\n * @param {String} name Name that the rendering input the material is bound to\r\n * @param {Object} material Material spec\r\n *\r\n * @return {WebGLRenderer} this\r\n */\r\nWebGLRenderer.prototype.handleMaterialInput = function handleMaterialInput(path, name, material) {\r\n    var mesh = this.meshRegistry.get(path) || this.createMesh(path);\r\n    material = compileMaterial(material, mesh.textures.length);\r\n\r\n    // Set uniforms to enable texture!\r\n\r\n    mesh.uniformValues[mesh.uniformKeys.indexOf(name)][0] = -material._id;\r\n\r\n    // Register textures!\r\n\r\n    var i = material.textures.length;\r\n    while (i--) {\r\n        mesh.textures.push(\r\n            this.textureManager.register(material.textures[i], mesh.textures.length + i)\r\n        );\r\n    }\r\n\r\n    // Register material!\r\n\r\n    this.program.registerMaterial(name, material);\r\n\r\n    return this.updateSize();\r\n};\r\n\r\n/**\r\n * Changes the geometry data of a mesh\r\n *\r\n * @method\r\n *\r\n * @param {String} path Path used as id of cutout in cutout registry.\r\n * @param {Object} geometry Geometry object containing vertex data to be drawn\r\n * @param {Number} drawType Primitive identifier\r\n * @param {Boolean} dynamic Whether geometry is dynamic\r\n *\r\n * @return {undefined} undefined\r\n */\r\nWebGLRenderer.prototype.setGeometry = function setGeometry(path, geometry, drawType, dynamic) {\r\n    var mesh = this.meshRegistry.get(path) || this.createMesh(path);\r\n\r\n    mesh.geometry = geometry;\r\n    mesh.drawType = drawType;\r\n    mesh.dynamic = dynamic;\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * Uploads a new value for the uniform data when the mesh is being drawn\r\n *\r\n * @method\r\n *\r\n * @param {String} path Path used as id of mesh in mesh registry\r\n * @param {String} uniformName Identifier used to upload value\r\n * @param {Array} uniformValue Value of uniform data\r\n *\r\n * @return {undefined} undefined\r\n */\r\nWebGLRenderer.prototype.setMeshUniform = function setMeshUniform(path, uniformName, uniformValue) {\r\n    var mesh = this.meshRegistry.get(path) || this.createMesh(path);\r\n\r\n    var index = mesh.uniformKeys.indexOf(uniformName);\r\n\r\n    if (index === -1) {\r\n        mesh.uniformKeys.push(uniformName);\r\n        mesh.uniformValues.push(uniformValue);\r\n    }\r\n    else {\r\n        mesh.uniformValues[index] = uniformValue;\r\n    }\r\n};\r\n\r\n/**\r\n * Allocates a new buffer using the internal BufferRegistry.\r\n *\r\n * @method\r\n *\r\n * @param {Number} geometryId Id of geometry in geometry registry\r\n * @param {String} bufferName Attribute location name\r\n * @param {Array} bufferValue Vertex data\r\n * @param {Number} bufferSpacing The dimensions of the vertex\r\n * @param {Boolean} isDynamic Whether geometry is dynamic\r\n *\r\n * @return {undefined} undefined\r\n */\r\nWebGLRenderer.prototype.bufferData = function bufferData(geometryId, bufferName, bufferValue, bufferSpacing, isDynamic) {\r\n    this.bufferRegistry.allocate(geometryId, bufferName, bufferValue, bufferSpacing, isDynamic);\r\n};\r\n\r\n/**\r\n * Triggers the 'draw' phase of the WebGLRenderer. Iterates through registries\r\n * to set uniforms, set attributes and issue draw commands for renderables.\r\n *\r\n * @method\r\n *\r\n * @param {Object} renderState Parameters provided by the compositor, that affect the rendering of all renderables.\r\n *\r\n * @return {undefined} undefined\r\n */\r\nWebGLRenderer.prototype.draw = function draw(renderState) {\r\n    var time = this.compositor.getTime();\r\n\r\n    this.gl.clear(this.gl.COLOR_BUFFER_BIT | this.gl.DEPTH_BUFFER_BIT);\r\n    this.textureManager.update(time);\r\n\r\n    this.meshRegistryKeys = sorter(this.meshRegistry.getKeys(), this.meshRegistry.getKeyToValue());\r\n\r\n    this.setGlobalUniforms(renderState);\r\n    this.drawCutouts();\r\n    this.drawMeshes();\r\n};\r\n\r\n/**\r\n * Iterates through and draws all registered meshes. This includes\r\n * binding textures, handling draw options, setting mesh uniforms\r\n * and drawing mesh buffers.\r\n *\r\n * @method\r\n *\r\n * @return {undefined} undefined\r\n */\r\nWebGLRenderer.prototype.drawMeshes = function drawMeshes() {\r\n    var gl = this.gl;\r\n    var buffers;\r\n    var mesh;\r\n\r\n    var meshes = this.meshRegistry.getValues();\r\n\r\n    for(var i = 0; i < meshes.length; i++) {\r\n        mesh = meshes[i];\r\n\r\n        if (!mesh) continue;\r\n\r\n        buffers = this.bufferRegistry.registry[mesh.geometry];\r\n\r\n        if (!mesh.visible) continue;\r\n\r\n        if (mesh.uniformValues[0] < 1) {\r\n            gl.depthMask(false);\r\n            gl.enable(gl.BLEND);\r\n        }\r\n        else {\r\n            gl.depthMask(true);\r\n            gl.disable(gl.BLEND);\r\n        }\r\n\r\n        if (!buffers) continue;\r\n\r\n        var j = mesh.textures.length;\r\n        while (j--) this.textureManager.bindTexture(mesh.textures[j]);\r\n\r\n        if (mesh.options) this.handleOptions(mesh.options, mesh);\r\n\r\n        this.program.setUniforms(mesh.uniformKeys, mesh.uniformValues);\r\n        this.drawBuffers(buffers, mesh.drawType, mesh.geometry);\r\n\r\n        if (mesh.options) this.resetOptions(mesh.options);\r\n    }\r\n};\r\n\r\n/**\r\n * Iterates through and draws all registered cutout meshes. Blending\r\n * is disabled, cutout uniforms are set and finally buffers are drawn.\r\n *\r\n * @method\r\n *\r\n * @return {undefined} undefined\r\n */\r\nWebGLRenderer.prototype.drawCutouts = function drawCutouts() {\r\n    var cutout;\r\n    var buffers;\r\n    var cutouts = this.cutoutRegistry.getValues();\r\n    var len = cutouts.length;\r\n\r\n    this.gl.disable(this.gl.CULL_FACE);\r\n    this.gl.enable(this.gl.BLEND);\r\n    this.gl.depthMask(true);\r\n\r\n    for (var i = 0; i < len; i++) {\r\n        cutout = cutouts[i];\r\n\r\n        if (!cutout) continue;\r\n\r\n        buffers = this.bufferRegistry.registry[cutout.geometry];\r\n\r\n        if (!cutout.visible) continue;\r\n\r\n        this.program.setUniforms(cutout.uniformKeys, cutout.uniformValues);\r\n        this.drawBuffers(buffers, cutout.drawType, cutout.geometry);\r\n    }\r\n\r\n    this.gl.enable(this.gl.CULL_FACE);\r\n};\r\n\r\n/**\r\n * Sets uniforms to be shared by all meshes.\r\n *\r\n * @method\r\n *\r\n * @param {Object} renderState Draw state options passed down from compositor.\r\n *\r\n * @return {undefined} undefined\r\n */\r\nWebGLRenderer.prototype.setGlobalUniforms = function setGlobalUniforms(renderState) {\r\n    var light;\r\n    var stride;\r\n    var lights = this.lightRegistry.getValues();\r\n    var len = lights.length;\r\n\r\n    for (var i = 0; i < len; i++) {\r\n        light = lights[i];\r\n\r\n        if (!light) continue;\r\n\r\n        stride = i * 4;\r\n\r\n        // Build the light positions' 4x4 matrix\r\n\r\n        this.lightPositions[0 + stride] = light.position[0];\r\n        this.lightPositions[1 + stride] = light.position[1];\r\n        this.lightPositions[2 + stride] = light.position[2];\r\n\r\n        // Build the light colors' 4x4 matrix\r\n\r\n        this.lightColors[0 + stride] = light.color[0];\r\n        this.lightColors[1 + stride] = light.color[1];\r\n        this.lightColors[2 + stride] = light.color[2];\r\n    }\r\n\r\n    globalUniforms.values[0] = this.numLights;\r\n    globalUniforms.values[1] = this.ambientLightColor;\r\n    globalUniforms.values[2] = this.lightPositions;\r\n    globalUniforms.values[3] = this.lightColors;\r\n\r\n    /*\r\n     * Set time and projection uniforms\r\n     * projecting world space into a 2d plane representation of the canvas.\r\n     * The x and y scale (this.projectionTransform[0] and this.projectionTransform[5] respectively)\r\n     * convert the projected geometry back into clipspace.\r\n     * The perpective divide (this.projectionTransform[11]), adds the z value of the point\r\n     * multiplied by the perspective divide to the w value of the point. In the process\r\n     * of converting from homogenous coordinates to NDC (normalized device coordinates)\r\n     * the x and y values of the point are divided by w, which implements perspective.\r\n     */\r\n    this.projectionTransform[0] = 1 / (this.cachedSize[0] * 0.5);\r\n    this.projectionTransform[5] = -1 / (this.cachedSize[1] * 0.5);\r\n    this.projectionTransform[11] = renderState.perspectiveTransform[11];\r\n\r\n    globalUniforms.values[4] = this.projectionTransform;\r\n    globalUniforms.values[5] = this.compositor.getTime() * 0.001;\r\n    globalUniforms.values[6] = renderState.viewTransform;\r\n\r\n    this.program.setUniforms(globalUniforms.keys, globalUniforms.values);\r\n};\r\n\r\n/**\r\n * Loads the buffers and issues the draw command for a geometry.\r\n *\r\n * @method\r\n *\r\n * @param {Object} vertexBuffers All buffers used to draw the geometry.\r\n * @param {Number} mode Enumerator defining what primitive to draw\r\n * @param {Number} id ID of geometry being drawn.\r\n *\r\n * @return {undefined} undefined\r\n */\r\nWebGLRenderer.prototype.drawBuffers = function drawBuffers(vertexBuffers, mode, id) {\r\n    var gl = this.gl;\r\n    var length = 0;\r\n    var attribute;\r\n    var location;\r\n    var spacing;\r\n    var offset;\r\n    var buffer;\r\n    var iter;\r\n    var j;\r\n    var i;\r\n\r\n    iter = vertexBuffers.keys.length;\r\n    for (i = 0; i < iter; i++) {\r\n        attribute = vertexBuffers.keys[i];\r\n\r\n        // Do not set vertexAttribPointer if index buffer.\r\n\r\n        if (attribute === 'indices') {\r\n            j = i; continue;\r\n        }\r\n\r\n        // Retreive the attribute location and make sure it is enabled.\r\n\r\n        location = this.program.attributeLocations[attribute];\r\n\r\n        if (location === -1) continue;\r\n        if (location === undefined) {\r\n            location = gl.getAttribLocation(this.program.program, attribute);\r\n            this.program.attributeLocations[attribute] = location;\r\n            if (location === -1) continue;\r\n        }\r\n\r\n        if (!this.state.enabledAttributes[attribute]) {\r\n            gl.enableVertexAttribArray(location);\r\n            this.state.enabledAttributes[attribute] = true;\r\n            this.state.enabledAttributesKeys.push(attribute);\r\n        }\r\n\r\n        // Retreive buffer information used to set attribute pointer.\r\n\r\n        buffer = vertexBuffers.values[i];\r\n        spacing = vertexBuffers.spacing[i];\r\n        offset = vertexBuffers.offset[i];\r\n        length = vertexBuffers.length[i];\r\n\r\n        // Skip bindBuffer if buffer is currently bound.\r\n\r\n        if (this.state.boundArrayBuffer !== buffer) {\r\n            gl.bindBuffer(buffer.target, buffer.buffer);\r\n            this.state.boundArrayBuffer = buffer;\r\n        }\r\n\r\n        if (this.state.lastDrawn !== id) {\r\n            gl.vertexAttribPointer(location, spacing, gl.FLOAT, gl.FALSE, 0, 4 * offset);\r\n        }\r\n    }\r\n\r\n    // Disable any attributes that not currently being used.\r\n\r\n    var len = this.state.enabledAttributesKeys.length;\r\n    for (i = 0; i < len; i++) {\r\n        var key = this.state.enabledAttributesKeys[i];\r\n        if (this.state.enabledAttributes[key] && vertexBuffers.keys.indexOf(key) === -1) {\r\n            gl.disableVertexAttribArray(this.program.attributeLocations[key]);\r\n            this.state.enabledAttributes[key] = false;\r\n        }\r\n    }\r\n\r\n    if (length) {\r\n\r\n        // If index buffer, use drawElements.\r\n\r\n        if (j !== undefined) {\r\n            buffer = vertexBuffers.values[j];\r\n            offset = vertexBuffers.offset[j];\r\n            spacing = vertexBuffers.spacing[j];\r\n            length = vertexBuffers.length[j];\r\n\r\n            // Skip bindBuffer if buffer is currently bound.\r\n\r\n            if (this.state.boundElementBuffer !== buffer) {\r\n                gl.bindBuffer(buffer.target, buffer.buffer);\r\n                this.state.boundElementBuffer = buffer;\r\n            }\r\n\r\n            gl.drawElements(gl[mode], length, gl.UNSIGNED_SHORT, 2 * offset);\r\n        }\r\n        else {\r\n            gl.drawArrays(gl[mode], 0, length);\r\n        }\r\n    }\r\n\r\n    this.state.lastDrawn = id;\r\n};\r\n\r\n\r\n/**\r\n * Updates the width and height of parent canvas, sets the viewport size on\r\n * the WebGL context and updates the resolution uniform for the shader program.\r\n * Size is retreived from the container object of the renderer.\r\n *\r\n * @method\r\n *\r\n * @param {Array} size width, height and depth of canvas\r\n *\r\n * @return {undefined} undefined\r\n */\r\nWebGLRenderer.prototype.updateSize = function updateSize(size) {\r\n    if (size) {\r\n        var pixelRatio = window.devicePixelRatio || 1;\r\n        var displayWidth = ~~(size[0] * pixelRatio);\r\n        var displayHeight = ~~(size[1] * pixelRatio);\r\n        this.canvas.width = displayWidth;\r\n        this.canvas.height = displayHeight;\r\n        this.gl.viewport(0, 0, displayWidth, displayHeight);\r\n\r\n        this.cachedSize[0] = size[0];\r\n        this.cachedSize[1] = size[1];\r\n        this.cachedSize[2] = (size[0] > size[1]) ? size[0] : size[1];\r\n        this.resolutionValues[0] = this.cachedSize;\r\n    }\r\n\r\n    this.program.setUniforms(this.resolutionName, this.resolutionValues);\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * Updates the state of the WebGL drawing context based on custom parameters\r\n * defined on a mesh.\r\n *\r\n * @method\r\n *\r\n * @param {Object} options Draw state options to be set to the context.\r\n * @param {Mesh} mesh Associated Mesh\r\n *\r\n * @return {undefined} undefined\r\n */\r\nWebGLRenderer.prototype.handleOptions = function handleOptions(options, mesh) {\r\n    var gl = this.gl;\r\n    if (!options) return;\r\n\r\n    if (options.blending) gl.enable(gl.BLEND);\r\n\r\n    switch (options.side) {\r\n        case 'double':\r\n            this.gl.cullFace(this.gl.FRONT);\r\n            this.drawBuffers(this.bufferRegistry.registry[mesh.geometry], mesh.drawType, mesh.geometry);\r\n            this.gl.cullFace(this.gl.BACK);\r\n            break;\r\n        case 'back':\r\n            gl.cullFace(gl.FRONT);\r\n            break;\r\n    }\r\n};\r\n\r\n/**\r\n * Resets the state of the WebGL drawing context to default values.\r\n *\r\n * @method\r\n *\r\n * @param {Object} options Draw state options to be set to the context.\r\n *\r\n * @return {undefined} undefined\r\n */\r\nWebGLRenderer.prototype.resetOptions = function resetOptions(options) {\r\n    var gl = this.gl;\r\n    if (!options) return;\r\n    if (options.blending) gl.disable(gl.BLEND);\r\n    if (options.side === 'back') gl.cullFace(gl.BACK);\r\n};\r\n\r\nmodule.exports = WebGLRenderer;\r\n","/**\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2015 Famous Industries Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n'use strict';\r\n\r\nvar types = {\r\n    1: 'float ',\r\n    2: 'vec2 ',\r\n    3: 'vec3 ',\r\n    4: 'vec4 '\r\n};\r\n\r\n/**\r\n * Traverses material to create a string of glsl code to be applied in\r\n * the vertex or fragment shader.\r\n *\r\n * @method\r\n *\r\n * @param {Object} material Material to be compiled.\r\n * @param {Number} textureSlot Next available texture slot for Mesh.\r\n *\r\n * @return {undefined} undefined\r\n */\r\nfunction compileMaterial(material, textureSlot) {\r\n    var glsl = '';\r\n    var uniforms = {};\r\n    var varyings = {};\r\n    var attributes = {};\r\n    var defines = [];\r\n    var textures = [];\r\n\r\n    material.traverse(function (node, depth) {\r\n        if (! node.chunk) return;\r\n\r\n        var type = types[_getOutputLength(node)];\r\n        var label = _makeLabel(node);\r\n        var output = _processGLSL(node.chunk.glsl, node.inputs, textures.length + textureSlot);\r\n\r\n        glsl += type + label + ' = ' + output + '\\n ';\r\n\r\n        if (node.uniforms) _extend(uniforms, node.uniforms);\r\n        if (node.varyings) _extend(varyings, node.varyings);\r\n        if (node.attributes) _extend(attributes, node.attributes);\r\n        if (node.chunk.defines) defines.push(node.chunk.defines);\r\n        if (node.texture) textures.push(node.texture);\r\n    });\r\n\r\n    return {\r\n        _id: material._id,\r\n        glsl: glsl + 'return ' + _makeLabel(material) + ';',\r\n        defines: defines.join('\\n'),\r\n        uniforms: uniforms,\r\n        varyings: varyings,\r\n        attributes: attributes,\r\n        textures: textures\r\n    };\r\n}\r\n\r\n// Helper function used to infer length of the output\r\n// from a given material node.\r\nfunction _getOutputLength(node) {\r\n\r\n    // Handle constant values\r\n\r\n    if (typeof node === 'number') return 1;\r\n    if (Array.isArray(node)) return node.length;\r\n\r\n    // Handle materials\r\n\r\n    var output = node.chunk.output;\r\n    if (typeof output === 'number') return output;\r\n\r\n    // Handle polymorphic output\r\n\r\n    var key = node.inputs.map(function recurse(node) {\r\n        return _getOutputLength(node);\r\n    }).join(',');\r\n\r\n    return output[key];\r\n}\r\n\r\n// Helper function to run replace inputs and texture tags with\r\n// correct glsl.\r\nfunction _processGLSL(str, inputs, textureSlot) {\r\n    return str\r\n        .replace(/%\\d/g, function (s) {\r\n            return _makeLabel(inputs[s[1]-1]);\r\n        })\r\n        .replace(/\\$TEXTURE/, 'u_textures[' + textureSlot + ']');\r\n}\r\n\r\n// Helper function used to create glsl definition of the\r\n// input material node.\r\nfunction _makeLabel (n) {\r\n    if (Array.isArray(n)) return _arrayToVec(n);\r\n    if (typeof n === 'object') return 'fa_' + (n._id);\r\n    else return n.toFixed(6);\r\n}\r\n\r\n// Helper to copy the properties of an object onto another object.\r\nfunction _extend (a, b) {\r\n\tfor (var k in b) a[k] = b[k];\r\n}\r\n\r\n// Helper to create glsl vector representation of a javascript array.\r\nfunction _arrayToVec(array) {\r\n    var len = array.length;\r\n    return 'vec' + len + '(' + array.join(',')  + ')';\r\n}\r\n\r\nmodule.exports = compileMaterial;\r\n","/**\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2015 Famous Industries Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n\r\n'use strict';\r\n\r\n/**\r\n * Generates a checkerboard pattern to be used as a placeholder texture while\r\n * an image loads over the network.\r\n *\r\n * @method  createCheckerBoard\r\n *\r\n * @return {HTMLCanvasElement} The `canvas` element that has been used in order\r\n *                             to generate the pattern.\r\n */\r\nfunction createCheckerBoard() {\r\n    var context = document.createElement('canvas').getContext('2d');\r\n    context.canvas.width = context.canvas.height = 128;\r\n    for (var y = 0; y < context.canvas.height; y += 16) {\r\n        for (var x = 0; x < context.canvas.width; x += 16) {\r\n            context.fillStyle = (x ^ y) & 16 ? '#FFF' : '#DDD';\r\n            context.fillRect(x, y, 16, 16);\r\n        }\r\n    }\r\n\r\n    return context.canvas;\r\n}\r\n\r\nmodule.exports = createCheckerBoard;\r\n","/**\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2015 Famous Industries Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n'use strict';\r\n\r\nvar radixBits = 11,\r\n    maxRadix = 1 << (radixBits),\r\n    radixMask = maxRadix - 1,\r\n    buckets = new Array(maxRadix * Math.ceil(64 / radixBits)),\r\n    msbMask = 1 << ((32 - 1) % radixBits),\r\n    lastMask = (msbMask << 1) - 1,\r\n    passCount = ((32 / radixBits) + 0.999999999999999) | 0,\r\n    maxOffset = maxRadix * (passCount - 1),\r\n    normalizer = Math.pow(20, 6);\r\n\r\nvar buffer = new ArrayBuffer(4);\r\nvar floatView = new Float32Array(buffer, 0, 1);\r\nvar intView = new Int32Array(buffer, 0, 1);\r\n\r\n// comparator pulls relevant sorting keys out of mesh\r\nfunction comp(list, registry, i) {\r\n    var key = list[i];\r\n    var item = registry[key];\r\n    return (item.depth ? item.depth : registry[key].uniformValues[1][14]) + normalizer;\r\n}\r\n\r\n//mutator function records mesh's place in previous pass\r\nfunction mutator(list, registry, i, value) {\r\n    var key = list[i];\r\n    registry[key].depth = intToFloat(value) - normalizer;\r\n    return key;\r\n}\r\n\r\n//clean function removes mutator function's record\r\nfunction clean(list, registry, i) {\r\n    registry[list[i]].depth = null;\r\n}\r\n\r\n//converts a javascript float to a 32bit integer using an array buffer\r\n//of size one\r\nfunction floatToInt(k) {\r\n    floatView[0] = k;\r\n    return intView[0];\r\n}\r\n//converts a 32 bit integer to a regular javascript float using an array buffer\r\n//of size one\r\nfunction intToFloat(k) {\r\n    intView[0] = k;\r\n    return floatView[0];\r\n}\r\n\r\n/**\r\n * Sorts an array of mesh IDs according to their z-depth.\r\n *\r\n * @param  {Array} list         An array of meshes.\r\n * @param  {Object} registry    A registry mapping the path names to meshes.\r\n * @return {Array}              An array of the meshes sorted by z-depth.\r\n */\r\nfunction radixSort(list, registry) {\r\n    var pass = 0;\r\n    var out = [];\r\n\r\n    var i, j, k, n, div, offset, swap, id, sum, tsum, size;\r\n\r\n    passCount = ((32 / radixBits) + 0.999999999999999) | 0;\r\n\r\n    for (i = 0, n = maxRadix * passCount; i < n; i++) buckets[i] = 0;\r\n\r\n    for (i = 0, n = list.length; i < n; i++) {\r\n        div = floatToInt(comp(list, registry, i));\r\n        div ^= div >> 31 | 0x80000000;\r\n        for (j = 0, k = 0; j < maxOffset; j += maxRadix, k += radixBits) {\r\n            buckets[j + (div >>> k & radixMask)]++;\r\n        }\r\n        buckets[j + (div >>> k & lastMask)]++;\r\n    }\r\n\r\n    for (j = 0; j <= maxOffset; j += maxRadix) {\r\n        for (id = j, sum = 0; id < j + maxRadix; id++) {\r\n            tsum = buckets[id] + sum;\r\n            buckets[id] = sum - 1;\r\n            sum = tsum;\r\n        }\r\n    }\r\n    if (--passCount) {\r\n        for (i = 0, n = list.length; i < n; i++) {\r\n            div = floatToInt(comp(list, registry, i));\r\n            out[++buckets[div & radixMask]] = mutator(list, registry, i, div ^= div >> 31 | 0x80000000);\r\n        }\r\n        \r\n        swap = out;\r\n        out = list;\r\n        list = swap;\r\n        while (++pass < passCount) {\r\n            for (i = 0, n = list.length, offset = pass * maxRadix, size = pass * radixBits; i < n; i++) {\r\n                div = floatToInt(comp(list, registry, i));\r\n                out[++buckets[offset + (div >>> size & radixMask)]] = list[i];\r\n            }\r\n\r\n            swap = out;\r\n            out = list;\r\n            list = swap;\r\n        }\r\n    }\r\n\r\n    for (i = 0, n = list.length, offset = pass * maxRadix, size = pass * radixBits; i < n; i++) {\r\n        div = floatToInt(comp(list, registry, i));\r\n        out[++buckets[offset + (div >>> size & lastMask)]] = mutator(list, registry, i, div ^ (~div >> 31 | 0x80000000));\r\n        clean(list, registry, i);\r\n    }\r\n\r\n    return out;\r\n}\r\n\r\nmodule.exports = radixSort;\r\n","/**\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2015 Famous Industries Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n\r\n'use strict';\r\n\r\n\r\n\r\nvar shaders = {\r\n    vertex: \"#define GLSLIFY 1\\n/**\\r\\n * The MIT License (MIT)\\r\\n * \\r\\n * Copyright (c) 2015 Famous Industries Inc.\\r\\n * \\r\\n * Permission is hereby granted, free of charge, to any person obtaining a copy\\r\\n * of this software and associated documentation files (the \\\"Software\\\"), to deal\\r\\n * in the Software without restriction, including without limitation the rights\\r\\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\r\\n * copies of the Software, and to permit persons to whom the Software is\\r\\n * furnished to do so, subject to the following conditions:\\r\\n * \\r\\n * The above copyright notice and this permission notice shall be included in\\r\\n * all copies or substantial portions of the Software.\\r\\n * \\r\\n * THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\r\\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\r\\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\r\\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\r\\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\r\\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\r\\n * THE SOFTWARE.\\r\\n */\\r\\n\\r\\n/**\\r\\n * The MIT License (MIT)\\r\\n * \\r\\n * Copyright (c) 2015 Famous Industries Inc.\\r\\n * \\r\\n * Permission is hereby granted, free of charge, to any person obtaining a copy\\r\\n * of this software and associated documentation files (the \\\"Software\\\"), to deal\\r\\n * in the Software without restriction, including without limitation the rights\\r\\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\r\\n * copies of the Software, and to permit persons to whom the Software is\\r\\n * furnished to do so, subject to the following conditions:\\r\\n * \\r\\n * The above copyright notice and this permission notice shall be included in\\r\\n * all copies or substantial portions of the Software.\\r\\n * \\r\\n * THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\r\\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\r\\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\r\\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\r\\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\r\\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\r\\n * THE SOFTWARE.\\r\\n */\\r\\n\\r\\n/**\\r\\n * Calculates transpose inverse matrix from transform\\r\\n * \\r\\n * @method random\\r\\n * @private\\r\\n *\\r\\n *\\r\\n */\\r\\n\\r\\n\\r\\nmat3 getNormalMatrix_1_0(in mat4 t) {\\r\\n   mat3 matNorm;\\r\\n   mat4 a = t;\\r\\n\\r\\n   float a00 = a[0][0], a01 = a[0][1], a02 = a[0][2], a03 = a[0][3],\\r\\n   a10 = a[1][0], a11 = a[1][1], a12 = a[1][2], a13 = a[1][3],\\r\\n   a20 = a[2][0], a21 = a[2][1], a22 = a[2][2], a23 = a[2][3],\\r\\n   a30 = a[3][0], a31 = a[3][1], a32 = a[3][2], a33 = a[3][3],\\r\\n   b00 = a00 * a11 - a01 * a10,\\r\\n   b01 = a00 * a12 - a02 * a10,\\r\\n   b02 = a00 * a13 - a03 * a10,\\r\\n   b03 = a01 * a12 - a02 * a11,\\r\\n   b04 = a01 * a13 - a03 * a11,\\r\\n   b05 = a02 * a13 - a03 * a12,\\r\\n   b06 = a20 * a31 - a21 * a30,\\r\\n   b07 = a20 * a32 - a22 * a30,\\r\\n   b08 = a20 * a33 - a23 * a30,\\r\\n   b09 = a21 * a32 - a22 * a31,\\r\\n   b10 = a21 * a33 - a23 * a31,\\r\\n   b11 = a22 * a33 - a23 * a32,\\r\\n\\r\\n   det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\\r\\n   det = 1.0 / det;\\r\\n\\r\\n   matNorm[0][0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\\r\\n   matNorm[0][1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\\r\\n   matNorm[0][2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\\r\\n\\r\\n   matNorm[1][0] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\\r\\n   matNorm[1][1] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\\r\\n   matNorm[1][2] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\\r\\n\\r\\n   matNorm[2][0] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\\r\\n   matNorm[2][1] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\\r\\n   matNorm[2][2] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\\r\\n\\r\\n   return matNorm;\\r\\n}\\r\\n\\r\\n\\n\\n/**\\r\\n * The MIT License (MIT)\\r\\n * \\r\\n * Copyright (c) 2015 Famous Industries Inc.\\r\\n * \\r\\n * Permission is hereby granted, free of charge, to any person obtaining a copy\\r\\n * of this software and associated documentation files (the \\\"Software\\\"), to deal\\r\\n * in the Software without restriction, including without limitation the rights\\r\\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\r\\n * copies of the Software, and to permit persons to whom the Software is\\r\\n * furnished to do so, subject to the following conditions:\\r\\n * \\r\\n * The above copyright notice and this permission notice shall be included in\\r\\n * all copies or substantial portions of the Software.\\r\\n * \\r\\n * THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\r\\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\r\\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\r\\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\r\\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\r\\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\r\\n * THE SOFTWARE.\\r\\n */\\r\\n\\r\\n/**\\r\\n * Calculates a matrix that creates the identity when multiplied by m\\r\\n * \\r\\n * @method inverse\\r\\n * @private\\r\\n *\\r\\n *\\r\\n */\\r\\n\\r\\n\\r\\nfloat inverse_2_1(float m) {\\r\\n    return 1.0 / m;\\r\\n}\\r\\n\\r\\nmat2 inverse_2_1(mat2 m) {\\r\\n    return mat2(m[1][1],-m[0][1],\\r\\n               -m[1][0], m[0][0]) / (m[0][0]*m[1][1] - m[0][1]*m[1][0]);\\r\\n}\\r\\n\\r\\nmat3 inverse_2_1(mat3 m) {\\r\\n    float a00 = m[0][0], a01 = m[0][1], a02 = m[0][2];\\r\\n    float a10 = m[1][0], a11 = m[1][1], a12 = m[1][2];\\r\\n    float a20 = m[2][0], a21 = m[2][1], a22 = m[2][2];\\r\\n\\r\\n    float b01 =  a22 * a11 - a12 * a21;\\r\\n    float b11 = -a22 * a10 + a12 * a20;\\r\\n    float b21 =  a21 * a10 - a11 * a20;\\r\\n\\r\\n    float det = a00 * b01 + a01 * b11 + a02 * b21;\\r\\n\\r\\n    return mat3(b01, (-a22 * a01 + a02 * a21), (a12 * a01 - a02 * a11),\\r\\n                b11, (a22 * a00 - a02 * a20), (-a12 * a00 + a02 * a10),\\r\\n                b21, (-a21 * a00 + a01 * a20), (a11 * a00 - a01 * a10)) / det;\\r\\n}\\r\\n\\r\\nmat4 inverse_2_1(mat4 m) {\\r\\n    float\\r\\n        a00 = m[0][0], a01 = m[0][1], a02 = m[0][2], a03 = m[0][3],\\r\\n        a10 = m[1][0], a11 = m[1][1], a12 = m[1][2], a13 = m[1][3],\\r\\n        a20 = m[2][0], a21 = m[2][1], a22 = m[2][2], a23 = m[2][3],\\r\\n        a30 = m[3][0], a31 = m[3][1], a32 = m[3][2], a33 = m[3][3],\\r\\n\\r\\n        b00 = a00 * a11 - a01 * a10,\\r\\n        b01 = a00 * a12 - a02 * a10,\\r\\n        b02 = a00 * a13 - a03 * a10,\\r\\n        b03 = a01 * a12 - a02 * a11,\\r\\n        b04 = a01 * a13 - a03 * a11,\\r\\n        b05 = a02 * a13 - a03 * a12,\\r\\n        b06 = a20 * a31 - a21 * a30,\\r\\n        b07 = a20 * a32 - a22 * a30,\\r\\n        b08 = a20 * a33 - a23 * a30,\\r\\n        b09 = a21 * a32 - a22 * a31,\\r\\n        b10 = a21 * a33 - a23 * a31,\\r\\n        b11 = a22 * a33 - a23 * a32,\\r\\n\\r\\n        det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\\r\\n\\r\\n    return mat4(\\r\\n        a11 * b11 - a12 * b10 + a13 * b09,\\r\\n        a02 * b10 - a01 * b11 - a03 * b09,\\r\\n        a31 * b05 - a32 * b04 + a33 * b03,\\r\\n        a22 * b04 - a21 * b05 - a23 * b03,\\r\\n        a12 * b08 - a10 * b11 - a13 * b07,\\r\\n        a00 * b11 - a02 * b08 + a03 * b07,\\r\\n        a32 * b02 - a30 * b05 - a33 * b01,\\r\\n        a20 * b05 - a22 * b02 + a23 * b01,\\r\\n        a10 * b10 - a11 * b08 + a13 * b06,\\r\\n        a01 * b08 - a00 * b10 - a03 * b06,\\r\\n        a30 * b04 - a31 * b02 + a33 * b00,\\r\\n        a21 * b02 - a20 * b04 - a23 * b00,\\r\\n        a11 * b07 - a10 * b09 - a12 * b06,\\r\\n        a00 * b09 - a01 * b07 + a02 * b06,\\r\\n        a31 * b01 - a30 * b03 - a32 * b00,\\r\\n        a20 * b03 - a21 * b01 + a22 * b00) / det;\\r\\n}\\r\\n\\r\\n\\n\\n/**\\r\\n * The MIT License (MIT)\\r\\n * \\r\\n * Copyright (c) 2015 Famous Industries Inc.\\r\\n * \\r\\n * Permission is hereby granted, free of charge, to any person obtaining a copy\\r\\n * of this software and associated documentation files (the \\\"Software\\\"), to deal\\r\\n * in the Software without restriction, including without limitation the rights\\r\\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\r\\n * copies of the Software, and to permit persons to whom the Software is\\r\\n * furnished to do so, subject to the following conditions:\\r\\n * \\r\\n * The above copyright notice and this permission notice shall be included in\\r\\n * all copies or substantial portions of the Software.\\r\\n * \\r\\n * THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\r\\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\r\\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\r\\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\r\\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\r\\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\r\\n * THE SOFTWARE.\\r\\n */\\r\\n\\r\\n/**\\r\\n * Reflects a matrix over its main diagonal.\\r\\n * \\r\\n * @method transpose\\r\\n * @private\\r\\n *\\r\\n *\\r\\n */\\r\\n\\r\\n\\r\\nfloat transpose_3_2(float m) {\\r\\n    return m;\\r\\n}\\r\\n\\r\\nmat2 transpose_3_2(mat2 m) {\\r\\n    return mat2(m[0][0], m[1][0],\\r\\n                m[0][1], m[1][1]);\\r\\n}\\r\\n\\r\\nmat3 transpose_3_2(mat3 m) {\\r\\n    return mat3(m[0][0], m[1][0], m[2][0],\\r\\n                m[0][1], m[1][1], m[2][1],\\r\\n                m[0][2], m[1][2], m[2][2]);\\r\\n}\\r\\n\\r\\nmat4 transpose_3_2(mat4 m) {\\r\\n    return mat4(m[0][0], m[1][0], m[2][0], m[3][0],\\r\\n                m[0][1], m[1][1], m[2][1], m[3][1],\\r\\n                m[0][2], m[1][2], m[2][2], m[3][2],\\r\\n                m[0][3], m[1][3], m[2][3], m[3][3]);\\r\\n}\\r\\n\\r\\n\\n\\n\\r\\n/**\\r\\n * Converts vertex from modelspace to screenspace using transform\\r\\n * information from context.\\r\\n *\\r\\n * @method applyTransform\\r\\n * @private\\r\\n *\\r\\n *\\r\\n */\\r\\n\\r\\nvec4 applyTransform(vec4 pos) {\\r\\n    //TODO: move this multiplication to application code. \\r\\n\\r\\n    /**\\r\\n     * Currently multiplied in the vertex shader to avoid consuming the complexity of holding an additional\\r\\n     * transform as state on the mesh object in WebGLRenderer. Multiplies the object's transformation from object space\\r\\n     * to world space with its transformation from world space to eye space.\\r\\n     */\\r\\n    mat4 MVMatrix = u_view * u_transform;\\r\\n\\r\\n    //TODO: move the origin, sizeScale and y axis inversion to application code in order to amortize redundant per-vertex calculations.\\r\\n\\r\\n    /**\\r\\n     * The transform uniform should be changed to the result of the transformation chain:\\r\\n     *\\r\\n     * view * modelTransform * invertYAxis * sizeScale * origin\\r\\n     *\\r\\n     * which could be simplified to:\\r\\n     *\\r\\n     * view * modelTransform * convertToDOMSpace\\r\\n     *\\r\\n     * where convertToDOMSpace represents the transform matrix:\\r\\n     *\\r\\n     *                           size.x 0       0       size.x \\r\\n     *                           0      -size.y 0       size.y\\r\\n     *                           0      0       1       0\\r\\n     *                           0      0       0       1\\r\\n     *\\r\\n     */\\r\\n\\r\\n    /**\\r\\n     * Assuming a unit volume, moves the object space origin [0, 0, 0] to the \\\"top left\\\" [1, -1, 0], the DOM space origin.\\r\\n     * Later in the transformation chain, the projection transform negates the rigidbody translation.\\r\\n     * Equivalent to (but much faster than) multiplying a translation matrix \\\"origin\\\"\\r\\n     *\\r\\n     *                           1 0 0 1 \\r\\n     *                           0 1 0 -1\\r\\n     *                           0 0 1 0\\r\\n     *                           0 0 0 1\\r\\n     *\\r\\n     * in the transform chain: projection * view * modelTransform * invertYAxis * sizeScale * origin * positionVector.\\r\\n     */\\r\\n    pos.x += 1.0;\\r\\n    pos.y -= 1.0;\\r\\n\\r\\n    /**\\r\\n     * Assuming a unit volume, scales an object to the amount of pixels in the size uniform vector's specified dimensions.\\r\\n     * Later in the transformation chain, the projection transform transforms the point into clip space by scaling\\r\\n     * by the inverse of the canvas' resolution.\\r\\n     * Equivalent to (but much faster than) multiplying a scale matrix \\\"sizeScale\\\"\\r\\n     *\\r\\n     *                           size.x 0      0      0 \\r\\n     *                           0      size.y 0      0\\r\\n     *                           0      0      size.z 0\\r\\n     *                           0      0      0      1\\r\\n     *\\r\\n     * in the transform chain: projection * view * modelTransform * invertYAxis * sizeScale * origin * positionVector.\\r\\n     */\\r\\n    pos.xyz *= u_size * 0.5;\\r\\n\\r\\n    /**\\r\\n     * Inverts the object space's y axis in order to match DOM space conventions. \\r\\n     * Later in the transformation chain, the projection transform reinverts the y axis to convert to clip space.\\r\\n     * Equivalent to (but much faster than) multiplying a scale matrix \\\"invertYAxis\\\"\\r\\n     *\\r\\n     *                           1 0 0 0 \\r\\n     *                           0 -1 0 0\\r\\n     *                           0 0 1 0\\r\\n     *                           0 0 0 1\\r\\n     *\\r\\n     * in the transform chain: projection * view * modelTransform * invertYAxis * sizeScale * origin * positionVector.\\r\\n     */\\r\\n    pos.y *= -1.0;\\r\\n\\r\\n    /**\\r\\n     * Exporting the vertex's position as a varying, in DOM space, to be used for lighting calculations. This has to be in DOM space\\r\\n     * since light position and direction is derived from the scene graph, calculated in DOM space.\\r\\n     */\\r\\n\\r\\n    v_position = (MVMatrix * pos).xyz;\\r\\n\\r\\n    /**\\r\\n    * Exporting the eye vector (a vector from the center of the screen) as a varying, to be used for lighting calculations.\\r\\n    * In clip space deriving the eye vector is a matter of simply taking the inverse of the position, as the position is a vector\\r\\n    * from the center of the screen. However, since our points are represented in DOM space,\\r\\n    * the position is a vector from the top left corner of the screen, so some additional math is needed (specifically, subtracting\\r\\n    * the position from the center of the screen, i.e. half the resolution of the canvas).\\r\\n    */\\r\\n\\r\\n    v_eyeVector = (u_resolution * 0.5) - v_position;\\r\\n\\r\\n    /**\\r\\n     * Transforming the position (currently represented in dom space) into view space (with our dom space view transform)\\r\\n     * and then projecting the point into raster both by applying a perspective transformation and converting to clip space\\r\\n     * (the perspective matrix is a combination of both transformations, therefore it's probably more apt to refer to it as a\\r\\n     * projection transform).\\r\\n     */\\r\\n\\r\\n    pos = u_perspective * MVMatrix * pos;\\r\\n\\r\\n    return pos;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Placeholder for positionOffset chunks to be templated in.\\r\\n * Used for mesh deformation.\\r\\n *\\r\\n * @method calculateOffset\\r\\n * @private\\r\\n *\\r\\n *\\r\\n */\\r\\n#vert_definitions\\r\\nvec3 calculateOffset(vec3 ID) {\\r\\n    #vert_applications\\r\\n    return vec3(0.0);\\r\\n}\\r\\n\\r\\n/**\\r\\n * Writes the position of the vertex onto the screen.\\r\\n * Passes texture coordinate and normal attributes as varyings\\r\\n * and passes the position attribute through position pipeline.\\r\\n *\\r\\n * @method main\\r\\n * @private\\r\\n *\\r\\n *\\r\\n */\\r\\nvoid main() {\\r\\n    v_textureCoordinate = a_texCoord;\\r\\n    vec3 invertedNormals = a_normals + (u_normals.x < 0.0 ? calculateOffset(u_normals) * 2.0 - 1.0 : vec3(0.0));\\r\\n    invertedNormals.y *= -1.0;\\r\\n    v_normal = transpose_3_2(mat3(inverse_2_1(u_transform))) * invertedNormals;\\r\\n    vec3 offsetPos = a_pos + calculateOffset(u_positionOffset);\\r\\n    gl_Position = applyTransform(vec4(offsetPos, 1.0));\\r\\n}\\r\\n\",\r\n    fragment: \"#define GLSLIFY 1\\n/**\\r\\n * The MIT License (MIT)\\r\\n * \\r\\n * Copyright (c) 2015 Famous Industries Inc.\\r\\n * \\r\\n * Permission is hereby granted, free of charge, to any person obtaining a copy\\r\\n * of this software and associated documentation files (the \\\"Software\\\"), to deal\\r\\n * in the Software without restriction, including without limitation the rights\\r\\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\r\\n * copies of the Software, and to permit persons to whom the Software is\\r\\n * furnished to do so, subject to the following conditions:\\r\\n * \\r\\n * The above copyright notice and this permission notice shall be included in\\r\\n * all copies or substantial portions of the Software.\\r\\n * \\r\\n * THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\r\\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\r\\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\r\\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\r\\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\r\\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\r\\n * THE SOFTWARE.\\r\\n */\\r\\n\\r\\n/**\\r\\n * The MIT License (MIT)\\r\\n * \\r\\n * Copyright (c) 2015 Famous Industries Inc.\\r\\n * \\r\\n * Permission is hereby granted, free of charge, to any person obtaining a copy\\r\\n * of this software and associated documentation files (the \\\"Software\\\"), to deal\\r\\n * in the Software without restriction, including without limitation the rights\\r\\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\r\\n * copies of the Software, and to permit persons to whom the Software is\\r\\n * furnished to do so, subject to the following conditions:\\r\\n * \\r\\n * The above copyright notice and this permission notice shall be included in\\r\\n * all copies or substantial portions of the Software.\\r\\n * \\r\\n * THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\r\\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\r\\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\r\\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\r\\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\r\\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\r\\n * THE SOFTWARE.\\r\\n */\\r\\n\\r\\n/**\\r\\n * Placeholder for fragmentShader  chunks to be templated in.\\r\\n * Used for normal mapping, gloss mapping and colors.\\r\\n * \\r\\n * @method applyMaterial\\r\\n * @private\\r\\n *\\r\\n *\\r\\n */\\r\\n\\r\\n#float_definitions\\r\\nfloat applyMaterial_1_0(float ID) {\\r\\n    #float_applications\\r\\n    return 1.;\\r\\n}\\r\\n\\r\\n#vec3_definitions\\r\\nvec3 applyMaterial_1_0(vec3 ID) {\\r\\n    #vec3_applications\\r\\n    return vec3(0);\\r\\n}\\r\\n\\r\\n#vec4_definitions\\r\\nvec4 applyMaterial_1_0(vec4 ID) {\\r\\n    #vec4_applications\\r\\n\\r\\n    return vec4(0);\\r\\n}\\r\\n\\r\\n\\n\\n/**\\r\\n * The MIT License (MIT)\\r\\n * \\r\\n * Copyright (c) 2015 Famous Industries Inc.\\r\\n * \\r\\n * Permission is hereby granted, free of charge, to any person obtaining a copy\\r\\n * of this software and associated documentation files (the \\\"Software\\\"), to deal\\r\\n * in the Software without restriction, including without limitation the rights\\r\\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\r\\n * copies of the Software, and to permit persons to whom the Software is\\r\\n * furnished to do so, subject to the following conditions:\\r\\n * \\r\\n * The above copyright notice and this permission notice shall be included in\\r\\n * all copies or substantial portions of the Software.\\r\\n * \\r\\n * THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\r\\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\r\\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\r\\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\r\\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\r\\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\r\\n * THE SOFTWARE.\\r\\n */\\r\\n\\r\\n/**\\r\\n * Calculates the intensity of light on a surface.\\r\\n *\\r\\n * @method applyLight\\r\\n * @private\\r\\n *\\r\\n */\\r\\nvec4 applyLight_2_1(in vec4 baseColor, in vec3 normal, in vec4 glossiness, int numLights, vec3 ambientColor, vec3 eyeVector, mat4 lightPosition, mat4 lightColor, vec3 v_position) {\\r\\n    vec3 diffuse = vec3(0.0);\\r\\n    bool hasGlossiness = glossiness.a > 0.0;\\r\\n    bool hasSpecularColor = length(glossiness.rgb) > 0.0;\\r\\n\\r\\n    for(int i = 0; i < 4; i++) {\\r\\n        if (i >= numLights) break;\\r\\n        vec3 lightDirection = normalize(lightPosition[i].xyz - v_position);\\r\\n        float lambertian = max(dot(lightDirection, normal), 0.0);\\r\\n\\r\\n        if (lambertian > 0.0) {\\r\\n            diffuse += lightColor[i].rgb * baseColor.rgb * lambertian;\\r\\n            if (hasGlossiness) {\\r\\n                vec3 halfVector = normalize(lightDirection + eyeVector);\\r\\n                float specularWeight = pow(max(dot(halfVector, normal), 0.0), glossiness.a);\\r\\n                vec3 specularColor = hasSpecularColor ? glossiness.rgb : lightColor[i].rgb;\\r\\n                diffuse += specularColor * specularWeight * lambertian;\\r\\n            }\\r\\n        }\\r\\n\\r\\n    }\\r\\n\\r\\n    return vec4(ambientColor + diffuse, baseColor.a);\\r\\n}\\r\\n\\r\\n\\n\\n\\r\\n\\r\\n/**\\r\\n * Writes the color of the pixel onto the screen\\r\\n *\\r\\n * @method main\\r\\n * @private\\r\\n *\\r\\n *\\r\\n */\\r\\nvoid main() {\\r\\n    vec4 material = u_baseColor.r >= 0.0 ? u_baseColor : applyMaterial_1_0(u_baseColor);\\r\\n\\r\\n    /**\\r\\n     * Apply lights only if flat shading is false\\r\\n     * and at least one light is added to the scene\\r\\n     */\\r\\n    bool lightsEnabled = (u_flatShading == 0.0) && (u_numLights > 0.0 || length(u_ambientLight) > 0.0);\\r\\n\\r\\n    vec3 normal = normalize(v_normal);\\r\\n    vec4 glossiness = u_glossiness.x < 0.0 ? applyMaterial_1_0(u_glossiness) : u_glossiness;\\r\\n\\r\\n    vec4 color = lightsEnabled ?\\r\\n    applyLight_2_1(material, normalize(v_normal), glossiness,\\r\\n               int(u_numLights),\\r\\n               u_ambientLight * u_baseColor.rgb,\\r\\n               normalize(v_eyeVector),\\r\\n               u_lightPosition,\\r\\n               u_lightColor,   \\r\\n               v_position)\\r\\n    : material;\\r\\n\\r\\n    gl_FragColor = color;\\r\\n    gl_FragColor.a *= u_opacity;   \\r\\n}\\r\\n\"\r\n};\r\n\r\nmodule.exports = shaders;\r\n","'use strict';\r\n\r\nvar Compositor = require('famous/renderers/Compositor');\r\nvar UIManager = require('famous/renderers/UIManager');\r\nvar Ajax = require('Ajax');\r\nvar versionModel = require('model/VersionModel');\r\nvar RequestAnimationFrameLoop = require('famous/render-loops/RequestAnimationFrameLoop');\r\n    require(\"FastClick\");\r\nvar compositor;\r\n// var Ajax ;\r\n\r\ndocument.addEventListener(\"deviceready\", onDeviceReady, false);\r\nfunction onDeviceReady() {\r\n    \r\n    compositor = new Compositor();\r\n\r\n    new UIManager(new Worker('./work.js'),  compositor, new RequestAnimationFrameLoop());\r\n    //回退功能\r\n    document.addEventListener(\"backbutton\", onBackKeyDown, false);\r\n\r\n    if(cordova.platformId == 'android'){\r\n\r\n        if(!versionModel.findOne() || !versionModel.findOne().cancel){\r\n            setTimeout(function(){\r\n                checkUpdate();\r\n            },5000);\r\n        }    \r\n\r\n            \r\n        \r\n    }else{\r\n    \tsetTimeout(function(){\r\n        \tgetAppVersion();\r\n    \t},5000);\r\n    }\r\n}\r\n\r\n// onDeviceReady();\r\n//\r\nfunction onBackKeyDown() {\r\n    for (var selector in compositor._contexts)\r\n    compositor.sendEvent(selector, 'backbutton', {});\r\n}\r\n\r\n//检测版本\r\nfunction checkUpdate(){\r\n\tcordova.getAppVersion.getVersionNumber(function (v) {\r\n\t\t// console.log(v);\r\n    \tnew Ajax('/app_version/single').data({'did':device.uuid}).success(function(d){\r\n    \t\t// console.log(d);\r\n    \t\tif(d.status === 200){\r\n    \t\t\tvar data = d.data;\r\n    \t\t\tvar serverV = data.version.split('.')[2];\r\n    \t\t\tvar currentV = v.split('.')[2];\r\n    \t\t\tif(currentV !== serverV){\r\n    \t\t\t\tif(!versionModel.findOne()){\r\n    \t\t\t\t\tversionModel.save({'path':data.path,'version':data.version});\t\r\n    \t\t\t\t}else{\r\n    \t\t\t\t\tversionModel.update({'version':data.version},{'path':data.path,'version':data.version});\r\n    \t\t\t\t}\r\n    \t\t\t\tnavigator.notification.confirm('我们已发现新版本，是否先前往下载？',function(i){\r\n    \t\t\t\t\tif(i == 1){\r\n                            versionModel.update({'version':data.version},{'cancel':false});\r\n    \t\t\t\t\t\twindow.open(data.path);\r\n    \t\t\t\t\t}else{ //取消后再次进入不在提示\r\n                            versionModel.update({'version':data.version},{'cancel':true});\r\n                        }\r\n    \t\t\t\t},'检查更新',['确定','取消']);\r\n    \t\t\t}\r\n    \t\t}\r\n    \t}).post();\r\n\t});\r\n}\r\n\r\n//获取版本号\r\nfunction getAppVersion(){\r\n\r\n    cordova.getAppVersion.getVersionNumber(function(v){\r\n        if(!versionModel.findOne()){\r\n\t\t\tversionModel.save({'path':null,'version':v,'cancel':false});\t\r\n\t\t}else{\r\n\t\t\tversionModel.update({'version':v},{'path':null,'version':v,'cancel':false});\r\n\t\t}\r\n    });\r\n}\r\n\r\n","var config = require( './config.json' );\r\n// new Ajax('/xxx')  \t\t\t\t\t只传url版本号之后的地址\r\n// \t.config({timeout: 3000})\t配置，timeout 超时时间，async 异步 默认true\r\n// \t.router([])\t\t\t\t\t\t\t\t路由参数，数组，只有一个可以传字符串\r\n// \t.data({})\t\t\t\t\t\t\t\t\tpost参数\r\n// \t.path({})\t\t\t\t\t\t\t\t\t？之后参数\r\n// \t.success(fn)\t\t\t\t\t\t\t成功回调函数\r\n// \t.error(fn)\t\t\t\t\t\t\t\t失败回调函数\r\n// \t.timeout(fn)\t\t\t\t\t\t\t超时回掉函数\r\n// .get();post();\tput();delete();\t\t\t\t\t\t最后 用 get / post 发送请求\r\n\r\nfunction Ajax( url ) {\r\n\tif( typeof url !== 'string' )\r\n\t\tthrow new Error( 'Ajax option error!' );\r\n\r\n\t// 判断是否是完整地址 如果不是则加上\r\n\tthis.url = !~url.indexOf( 'http' ) ? config.ajax_base + '/v' + config.version + url.replace( /^\\/*/,'/' ) : url;\r\n}\r\n\r\n// Ajax 配置\r\nAjax.prototype.config = function( cfg ){\r\n\tthis.cfg = cfg;\r\n\treturn this;\r\n}\r\n\r\n// Ajax 路径参数\r\nAjax.prototype.router = function( router ){\r\n\r\n\tif( !router )\r\n\t\tthrow new Error( 'Router参数错误，必须为数组或者字符串' );\r\n\r\n\tif( router.constructor.name === 'String' )\r\n\t\trouter = '/' + router;\r\n\telse\r\n\t\trouter = '/' + router.join( '/' );\r\n\r\n\tvar aUrl = this.url.split( '?' );\r\n\tthis.url = aUrl[0].replace( /\\/*$/, router );\r\n\taUrl[1] && (this.url = this.url + aUrl[1]);\r\n\r\n\tthis.r = router;\r\n\treturn this;\r\n}\r\n\r\n// Ajax data参数\r\nAjax.prototype.data = function( data ){\r\n\tvar sData = [];\r\n\tfor( var i in data )\r\n\t\tsData.push( i + '=' + data[i] );\r\n\tsData =  '&' + sData.join( '&' );\r\n\r\n\tthis.d = sData;\r\n\treturn this;\r\n}\r\n\r\n// Ajax ?后面参数\r\nAjax.prototype.path = function ( path ){\r\n\r\n\tvar sPath = [];\r\n\tfor( var i in path )\r\n\t\tsPath.push( i + '=' + path[i] );\r\n\tsPath =  sPath.join( '&' );\r\n\r\n\tif( !~this.url.indexOf( '?' ) )\r\n\t\tthis.url = this.url.replace( /\\/*$/, '?' + sPath )\r\n\telse\r\n\t\tthis.url = this.url.replace( /[&\\/]*$/, '&' + sPath );\r\n\r\n\tthis.p = sPath;\r\n\treturn this;\r\n}\r\n\r\n// Ajax 成功回掉函数\r\nAjax.prototype.success = function( fn ) {\r\n\tif( !fn || typeof fn  !== 'function' )\r\n\t\tthrow new Error( '成功回调函数格式错误!' );\r\n\r\n\tthis.s = fn;\r\n\treturn this;\r\n}\r\n\r\n// Ajax 失败回掉函数\r\nAjax.prototype.error = function( fn ){\r\n\tif( !fn || typeof fn  !== 'function' )\r\n\t\tthrow new Error( '错误回调函数格式错误!' );\r\n\r\n\tthis.e = fn;\r\n\treturn this;\r\n}\r\n\r\n// 超时回掉函数\r\nAjax.prototype.timeout = function( fn ){\r\n\tif( !fn || typeof fn  !== 'function' )\r\n\t\tthrow new Error( '超时回调函数格式错误!' );\r\n\r\n\tthis.t = fn;\r\n\treturn this;\r\n}\r\n\r\n// get 请求\r\nAjax.prototype.get = function(){\r\n\tthis.m = 'GET';\r\n\tthis.exec();\r\n}\r\n\r\n// post 请求\r\nAjax.prototype.post = function(xx){\r\n\tthis.m = 'POST';\r\n\tthis.exec(xx);\r\n}\r\n\r\n// put 请求\r\nAjax.prototype.put = function(){\r\n\tthis.m = 'PUT';\r\n\tthis.exec();\r\n}\r\n\r\n// delete 请求\r\nAjax.prototype.delete = function(){\r\n\tthis.m = 'DELETE';\r\n\tthis.exec();\r\n}\r\n\r\nAjax.prototype.exec = function(xx){\r\n\r\n\tthis.cfg = this.cfg || {};\r\n\r\n\tvar xhr = new XMLHttpRequest();\r\n\r\n\t// 超时默认3000毫秒\r\n\txhr.timeout =  this.cfg.timeout || 3000;\r\n\r\n\t// 异步  默认true\r\n\tif(xx == false){\r\n\t\tthis.async = false;\r\n\t}else{\r\n\t\tthis.async = typeof this.cfg.async === 'boolean' ? this.cfg.async : true;\r\n\t}\r\n\t\r\n\r\n\txhr.open( this.m, this.url, this.async );\r\n\r\n\tif( this.m === 'GET' )\r\n\t\txhr.send( null );\r\n\telse{\r\n\t\txhr.setRequestHeader( 'Content-Type', 'application/x-www-form-urlencoded' );\r\n\t\txhr.send( this.d );\r\n\t}\r\n\r\n\txhr.ontimeout = this.t;\r\n\r\n\tif( !this.async )\r\n\t  callback( xhr, this );\r\n\telse\r\n\t\txhr.onreadystatechange = function(){\r\n\t\t\tif( xhr.readyState === 4 )\r\n\t\t\t\tcallback( xhr, this );\r\n\t\t}.bind( this )\r\n}\r\n\r\nfunction callback( xhr, obj ){\r\n\tvar result = '';\r\n\tif( xhr.status == 200 ){\r\n\t\ttry{\r\n\t\t\tresult = JSON.parse( xhr.response );\r\n\t\t}catch(e){\r\n\t\t\tresult = xhr.response;\r\n\t\t}\r\n\t\tobj.s( result );\r\n\t}else \r\n\t\tobj.e && obj.e( xhr );\r\n}\r\n\r\n\r\nmodule.exports = Ajax;","function FastClick() {\r\n\r\n      var clickThreshold = 300;\r\n      var clickWindow = 500;\r\n      var potentialClicks = {};\r\n      var recentlyDispatched = {};\r\n      var _now = Date.now;\r\n\r\n\r\n\r\n\r\n\r\n      document.body.addEventListener('touchstart', function(event) {\r\n          var timestamp = _now();\r\n          for (var i = 0; i < event.changedTouches.length; i++) {\r\n              var touch = event.changedTouches[i];\r\n              potentialClicks[touch.identifier] = timestamp;\r\n          }\r\n      });\r\n\r\n      document.body.addEventListener('touchmove', function(event) {\r\n          for (var i = 0; i < event.changedTouches.length; i++) {\r\n              var touch = event.changedTouches[i];\r\n              delete potentialClicks[touch.identifier];\r\n          }\r\n      });\r\n\r\n      document.body.addEventListener('touchend', function(event) {\r\n          var currTime = _now();\r\n          for (var i = 0; i < event.changedTouches.length; i++) {\r\n              var touch = event.changedTouches[i];\r\n              var startTime = potentialClicks[touch.identifier];\r\n              if (startTime && currTime - startTime < clickThreshold) {\r\n                        var eventAttr = {'screenX':0,\r\n                                          'screenY':0,\r\n                                          'clientX':0,\r\n                                          'clientY':0,\r\n                                          'ctrlKey':0,\r\n                                          'shiftKey':0,\r\n                                          'altKey':0,\r\n                                          'metaKey':0,\r\n                                          'button':0,\r\n                                          'buttons':0,\r\n                                          'pageX':0,\r\n                                          'pageY':0,\r\n                                          'x':0,\r\n                                          'y':0,\r\n                                          'offsetX':0,\r\n                                          'offsetY':0\r\n                                          \r\n                            };\r\n                        \r\n                  var clickEvt = new window.CustomEvent('click', {\r\n                                          'bubbles': true,\r\n                                          'detail': 1});\r\n                  recentlyDispatched[currTime] = event;\r\n                  for (var k in eventAttr) {\r\n                          event[k]?\r\n                          clickEvt[k] = event[k]:\r\n                          clickEvt[k] = eventAttr[k];\r\n                  }     \r\n\r\n                  // console.log(11, event,clickEvt);\r\n\r\n\r\n                  event.target.dispatchEvent(clickEvt);\r\n              }\r\n              //\r\n\r\n              delete potentialClicks[touch.identifier];\r\n          }\r\n      });\r\n\r\n      document.body.addEventListener('click', function(event) {\r\n          var currTime = _now();\r\n          for (var i in recentlyDispatched) {\r\n              var previousEvent = recentlyDispatched[i];\r\n              if (currTime - i < clickWindow) {\r\n                // console.log(13, event,previousEvent,event instanceof window.MouseEvent , event.target == previousEvent.target);\r\n                //&& event.target == previousEvent.target\r\n                  if (event instanceof window.MouseEvent) {\r\n                    event.stopPropagation();\r\n                     // console.log(14, event,previousEvent);\r\n                    delete recentlyDispatched[i];\r\n                  }\r\n              }\r\n              \r\n          }\r\n      }, true);\r\n    }\r\n\r\n\r\nmodule.exports = new FastClick();    ","var CrossCall = require('famous/core/CrossCall');\r\n\r\n\r\n\r\nfunction webWorkerStorage () {\r\n\r\n\tthis._storage = {};\r\n\tvar _this = this;\r\n\tthis.cross = new CrossCall(function () {\r\n\r\n        var obj = {};\r\n        for(var i in window.localStorage) {\r\n        \tobj[i] = window.localStorage.getItem(i);\r\n        }\r\n\r\n\t\treturn obj;\r\n\t});\r\n\tthis.cross.exec(function (arg) {\r\n\t\t_this._storage = arg;\r\n\t})\r\n}\r\nwebWorkerStorage.prototype.constructor = webWorkerStorage;\r\n\r\nwebWorkerStorage.prototype.getItem = function(arg) {\r\n\r\n\tif (this._storage.hasOwnProperty(arg))\r\n\t    return this._storage[arg];\r\n\treturn null;\r\n};\r\n\r\nwebWorkerStorage.prototype.removeItem = function(arg) {\r\n\r\n\tdelete this._storage[arg];\r\n    this._callStorage(\"removeItem\", [arg]);\r\n};\r\n\r\nwebWorkerStorage.prototype.setItem = function(name, value) {\r\n\r\n\tthis._storage[name] = value;\r\n    this._callStorage(\"setItem\", [name, value]);\r\n};\r\n\r\nwebWorkerStorage.prototype._callStorage = function( fun, arg){\r\n\tthis.cross.setFun(function (name, arg) {\r\n\r\n\t\treturn window.localStorage[name].apply(window.localStorage, arg);\r\n\t}, [fun, arg]).exec();\r\n\r\n}\r\n//压缩编译时可能会出现 localStorage 丢失现象\r\nvar localStorage =  typeof self.localStorage!=\"undefined\" ? window.localStorage : new webWorkerStorage();\r\n\r\nclass StorageModel {\r\n\tconstructor( table, model ){\r\n\t\tthis._table = table;\r\n\t\tthis._model = model;\r\n\r\n\t\t// 记录 model key值\r\n\t\tthis._keys = Object.keys( model );\r\n\r\n\t\tthis.setStorage();\r\n\t}\r\n\r\n\t// 检测数据模型配置Storage\r\n\tsetStorage(){\r\n\t\tvar _storageTable = localStorage.getItem( this._table );\r\n\t\t_storageTable = _storageTable ? JSON.parse( _storageTable ) : {};\r\n\r\n\t\t// 判断数据库字段和设置字段是否一样,如果不一样则删除数据库该‘表’,待重新加入数据\r\n\t\tif ( Object.keys( _storageTable ).toString() === this._keys.toString() ) return;\r\n\r\n\t\t//TODO  未知原因会导致清除所有缓存。 下一版本迭代之\r\n\t\t//else localStorage.removeItem( this._table );\r\n\t}\r\n\r\n\t// 查找 , 返回 Array 或者 null\r\n\tfind( opt ) {\r\n\t\tvar _storageTable = localStorage.getItem( this._table );\r\n\t\tvar result = [];\r\n\t\tif( !_storageTable ) return null;\r\n\t\t_storageTable = JSON.parse( _storageTable );\r\n\t\t// 非条件查询 (没有带条件参数opt或者条件不是一个正常条件)\r\n\t\tif( !opt || opt.constructor.name !== 'Object' ){\r\n\t\t\tfor( var i = 0, j = _storageTable[this._keys[0]].length; i < j; i++ ){\r\n\t\t\t\tvar _result = {};\r\n\t\t\t\tthis._keys.forEach( val => _result[val] = _storageTable[val][i] );\r\n\t\t\t\tresult.push( _result );\r\n\t\t\t}\r\n\t\t}else \r\n\t\t\t// 先条件查询，再筛选\r\n\t\t\tresult = this._check( opt, this.find() ).result;\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t// 查询一条数据，返回 Object 或者 null\r\n\tfindOne( opt ) {\r\n\t\tvar result = this.find( opt );\r\n\t\tif( result ) return result[0];\r\n\t\telse return result;\r\n\t}\r\n\r\n\t// 添加数据, 在表中添加一条记录\r\n\tsave( value ) {\r\n\t\tvar _storageTable = localStorage.getItem( this._table );\r\n\t\t_storageTable = _storageTable ? JSON.parse( _storageTable ) : {};\r\n\r\n\t\t// 只针对model 中配置的key值字段进行添加，其他没有字段不添加，\r\n\t\t// model 设置的字段如果value中没有默认设置为null\r\n\t\tthis._keys.forEach( val => {\r\n\t\t\t_storageTable[val] = _storageTable[val] || [];\r\n\t\t\t_storageTable[val].push( val in value ? value[val] : null );\r\n\t\t} );\r\n\r\n\t\tlocalStorage.setItem( this._table, JSON.stringify( _storageTable ) );\r\n\t}\r\n\r\n\t// 修改操作，必须带参数和值\r\n\tupdate( opt, value ) {\r\n\t\tif( !opt || !value || opt.constructor.name !== 'Object' || value.constructor.name !== 'Object' )\r\n\t\t\tthrow new Error( '参数错误!' );\r\n\r\n\t\tvar result = this.find();\r\n\t\tif( !result ) return;\r\n\t\tvar checkResult = this._check( opt, result );\r\n\r\n\t\tcheckResult.index.forEach( val => {\r\n\t\t\tfor( var i in value ) \r\n\t\t\t\ti in result[val] && (result[val][i] = value[i]);\r\n\t\t} );\r\n\t\tlocalStorage.setItem( this._table, JSON.stringify( this._format(result) ) );\r\n\t}\r\n\r\n\t// 删除, 不带条件全部删除\r\n\tremove( opt ) {\r\n\t\tif( !opt || opt.constructor.name !== 'Object' ) \r\n\t\t\tlocalStorage.removeItem( this._table );\r\n\t\telse {\r\n\t\t\tvar result = this.find();\r\n\t\t\tif( !result ) return;\r\n\r\n\t\t\tlocalStorage.setItem( this._table, JSON.stringify( this._format( this._check( opt, result ).notResult ) ) );\r\n\t\t}\r\n\t}\r\n\r\n\t// 检测匹配对象 , 返回满足条件的对象数组 和满足条件的 index 数组 以及不满足条件的数组\r\n\t_check( opt, arr ){\r\n\t\tvar result = [];\r\n\t\tvar $index = [];\r\n\t\tvar notResult = [];\r\n\t\tarr.forEach( (val, index) => {\r\n\t\t\tfor( var i in opt )\r\n\t\t\t\t// 符合条件 >= <= != 等\r\n\t\t\t\tif( opt[i] && opt[i].constructor.name === 'Object' ){\r\n\t\t\t\t\t// TODO\r\n\t\t\t\t}else\r\n\t\t\t\t\tif( val[i] !== opt[i] ) {\r\n\t\t\t\t\t\tnotResult.push( val );\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t};\r\n\t\t\t$index.push( index );\t\t\r\n\t\t\tresult.push( val );\r\n\t\t} );\r\n\t\treturn {result: result,index: $index, notResult: notResult};\r\n\t}\r\n\r\n\t// 格式化数组为储存对象\r\n\t_format( o ){\r\n\t\tvar result = {};\r\n\t\tfor( var i in this._keys ){\r\n\t\t\tvar _i = this._keys[i];\r\n\t\t\tresult[_i] = [];\r\n\t\t\to.forEach( v => result[_i].push(v[_i]) );\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n}\r\n\r\nmodule.exports = StorageModel;","module.exports={\r\n\t\"version\": 1,\r\n\t\"noticehttp\": \"http://api.qqn123.com/\",\r\n\t\"ajax_base\": \"http://zyjcapp.qqn123.com\", //内网\r\n\t\"webSocket\": \"ws://zyjcapp.qqn123.com/websocket\", //内网\r\n\t// \"ajax_base\": \"http://api.qqn123.com\",//公网\r\n\t// \"webSocket\":\"ws://120.27.119.40:9999/websocket\",//公网\r\n}","var StorageModel = require( 'StorageModel' );\r\n\r\nvar VersionModel = new StorageModel( 'Version', {\r\n\tversion: String,\r\n\tpath: String,\r\n\tcancel:Boolean\r\n} );\r\n\r\nmodule.exports = VersionModel;"],"sourceRoot":"/source/"}