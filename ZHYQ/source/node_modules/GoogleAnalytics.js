var CrossCall = require('famous/core/CrossCall');

//依赖于cordova-plugin-google-analytics 
//插件安装 cordova plugin add https://github.com/danwilson/google-analytics-plugin.git

function googleAnalytics(){
	this.cross = new CrossCall();
}

//To track a Screen (PageView):
googleAnalytics.prototype.trackView = function(arg){
	this._callWin( "trackView", [arg]);
};


//To track User Timing (App Speed):
googleAnalytics.prototype.trackTiming = function(Category, IntervalInMilliseconds, Variable, Label){
    this._callWin( "trackTiming", [Category, IntervalInMilliseconds, Variable, Label]);
};

//To track an Exception:
googleAnalytics.prototype.trackException = function(Description, Fatal){
    this._callWin( "trackException", [Description, Fatal]);
};

//To add a Transaction (Ecommerce)
googleAnalytics.prototype.addTransaction = function(ID, Affiliation, Revenue, Tax, Shipping, CurrencyCode){
    this._callWin( "addTransaction", [ID, Affiliation, Revenue, Tax, Shipping, CurrencyCode]);
};


//To add a Transaction Item (Ecommerce)

googleAnalytics.prototype.addTransactionItem = function(ID, Name, SKU, Category, Price, Quantity, CurrencyCode) {
	this._callWin( "addTransactionItem",[ID, Name, SKU, Category, Price, Quantity, CurrencyCode]);
};
//To add a Custom Dimension

googleAnalytics.prototype.addCustomDimension = function (Key, Value, success, error){
	this.cross.setFun(function(Key, Value){

		window.analytics.addCustomDimension(Key, Value,
			function(e){self._call({stats:1,res:e})},
			function(e){self._call({stats:0,res:e})})
		
	},[Key, Value]).exec(function(e){
		if( e.stats && typeof success  === 'function')
   			success(e.res);
   		else 
   			(typeof error  === 'function') && error(e.res);
	});
   
};
//To set a UserId:

googleAnalytics.prototype.setUserId = function (myuserid){
	this._callWin('setUserId',[myuserid]);
};
//To enable verbose logging:

googleAnalytics.prototype.debugMode = function(){
	this._callWin('debugMode',[]);
};

//To enable/disable automatic reporting of uncaught exceptions
googleAnalytics.prototype.enableUncaughtExceptionReporting = function(Enable, success, error){

    this.cross.setFun(function(Enable){

		window.analytics.enableUncaughtExceptionReporting(Enable,
			function(e){self._call({stats:1,res:e})},
			function(e){self._call({stats:0,res:e})})
		
	},[Enable]).exec(function(e){
		if( e.stats && typeof success  === 'function')
   			success(e.res);
   		else
   			(typeof error  === 'function') && error(e.res);
	});
   
};


googleAnalytics.prototype._callWin = function(name,arg){
	this.cross.setFun(function(name, arg){

		window.analytics[name].apply(window.analytics, arg)
		
	},[name, arg]).exec();
};

module.exports = new googleAnalytics();

