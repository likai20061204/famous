var Node = require( 'famous/core/Node' );
var DOMElement = require( 'famous/dom-renderables/DOMElement' );
var buttonItem = require('pop_button');

class Pop extends Node{
	constructor(data){
		super();
		this
			.setSizeMode(0,0)
			.el = new DOMElement(this,{
				classes:['pop-mask'],
				properties:{'background':'rgba(0,0,0,.4)','z-index':'22'}
			});
		this.showBox = this.addChild();
		this.showBox
			.setProportionalSize(1,3/5)
			.setDifferentialSize(-20,0)
			.setAlign(.5,.5)
			.setMountPoint(.5,.5)
			.el = new DOMElement(this.showBox,{
				classes:['show-box'],
				properties:{'background':'#fff','border-radius':'10px'},
			});

		this.showBox.contentTitle = this.showBox.addChild();//title
		this.showBox.contentTitle
			.setSizeMode(0,1)
			.setAbsoluteSize(0,40)
			.el = new DOMElement(this.showBox.contentTitle,{
				classes:['content-title'],
				content:data.title,
				properties:{'font-size':'16px'}
			});

		this.showBox.contentBox = this.showBox.addChild();//内容
		this.showBox.contentBox
			.setSizeMode(0,0)
			.setDifferentialSize(0,-100)
			.setPosition(0,40)
			.el = new DOMElement(this.showBox.contentBox,{
				classes:['content-box','overflow_scoll'],
				content:data.desc
			});
		
		this.showBox.confirmBtn = new buttonItem();//确定按钮
		this.showBox.confirmBtn
			.setSizeMode(0,1)
			.setAbsoluteSize(null,32)
			.setDifferentialSize(-50,0)
			.setAlign(0,1)
			.setMountPoint(0,1)
			.setPosition(25,-12)
			.el
			.setContent('<div class="pop-btn">确定</div>');
		this.showBox.addChild(this.showBox.confirmBtn);
        

        this.changeText = function(content,title){
                
               this.showBox.contentTitle.el.setContent(title); 
               this.showBox.contentBox.el.setContent(content);
        };
		this.showBox.confirmBtn.clickEvent = function(){
			this.hide();
		}.bind(this);

	}
}

module.exports = Pop;