'use strict';


var Chan = require("./Chan");
/**
 *CrossCall 主要提供线程间的函数调用功能。
 *如在worker内调用 window、document 等对象。
 *
 * @method
 *
 * @param {function}  需要线程外执行的函数，通常会有一个返回值 例如：{id:32, text:"I`m Tester"}
 */
function CrossCall( fun , param){
    this._fun = fun;
    this._param = param;
}

/**
 *设置线程外执行函数
 *
 * @method
 *
 * @param {function} 需要线程外执行的函数，通常会有一个返回值 例如：{id:32, text:"I`m Tester"}
 */
CrossCall.prototype.setFun = function ( fun , param) {
	if( typeof fun !=="function" ) return;
	this._fun  = fun;
    this._param = param;
	return this;
}

/**
 *执行
 *
 * @method
 *
 * @param {function} 回调函数，非必要。若设置_fun执行之后会调用之。
 */
CrossCall.prototype.exec = function( fun ) {

		Chan.add( this._fun, fun , this._param);
};

module.exports = CrossCall;